SANDBOX= python3 mathics/test.py 
Testing Mathics 2.0.0dev
on CPython 3.6.9 (default, Oct  8 2020, 12:12:24) 
using SymPy 1.7.1, mpmath 1.1.0
********** Language Tutorials / Basic calculations **********
   1 ( 1): TEST 1 + 2
   2 ( 2): TEST 1 - 2 * (3 + 5) / 4
   3 ( 3): TEST 1 - 2 (3 + 5) / 4
   4 ( 4): TEST 2 4
   5 ( 5): TEST 3 ^ 4
   6 ( 6): TEST 6 / 4
   7 ( 7): TEST N[6 / 4]
   8 ( 8): TEST Log[E]
   9 ( 9): TEST Sin[Pi]
  10 (10): TEST Cos[0.5]
  11 (11): TEST Sqrt[-4]
  12 (12): TEST I ^ 2
  13 (13): TEST (3 + 2 I) ^ 4
  14 (14): TEST (3 + 2 I) ^ (2.5 - I)
  15 (15): TEST Tan[I + 0.5]
  16 (16): TEST Abs[-3]
  17 (17): TEST Abs[3 + 4 I]
  18 (18): TEST 100!
  19 (19): TEST N[Pi, 100]
  20 (20): TEST 1 / 0
  21 (21): TEST Infinity + 2 Infinity
  22 (22): TEST 0 ^ 0
  23 (23): TEST 3 + 4
  24 (24): TEST % ^ 2
********** Language Tutorials / Symbols and Assignments **********
  25 ( 1): TEST x
  26 ( 2): TEST x + 2 x
  27 ( 3): TEST iAm1Symbol ^ 2
  28 ( 4): TEST a = 2
  29 ( 5): TEST a ^ 3
  30 ( 6): TEST a = 4
  31 ( 7): TEST a ^ 3
  32 ( 8): TEST a = 4;
  33 ( 9): TEST b = a;
  34 (10): TEST a = 3;
  35 (11): TEST b
  36 (12): TEST b := a ^ 2
  37 (13): TEST b
  38 (14): TEST a = 5;
  39 (15): TEST b
********** Language Tutorials / Comparisons and Boolean Logic **********
  40 ( 1): TEST 3 == 3
  41 ( 2): TEST 3 == 4
  42 ( 3): TEST 3 > 4
  43 ( 4): TEST 3 < 4 >= 2 != 1
  44 ( 5): TEST !True
  45 ( 6): TEST !False
  46 ( 7): TEST 3 < 4 && 6 > 5
  47 ( 8): TEST True && True || False && False
  48 ( 9): TEST True && (True || False) && False
********** Language Tutorials / Strings **********
  49 ( 1): TEST "Hello world!"
  50 ( 2): TEST InputForm["Hello world!"]
  51 ( 3): TEST "Hello" <> " " <> "world!"
  52 ( 4): TEST "Debian" <> 6
  53 ( 5): TEST "Debian" <> ToString[6]
********** Language Tutorials / Lists **********
  54 ( 1): TEST mylist = {a, b, c, d}
  55 ( 2): TEST Range[5]
  56 ( 3): TEST Array[f, 4]
  57 ( 4): TEST ConstantArray[x, 4]
  58 ( 5): TEST Table[n ^ 2, {n, 2, 5}]
  59 ( 6): TEST Length[mylist]
  60 ( 7): TEST mylist[[3]]
  61 ( 8): TEST mylist[[-3]]
  62 ( 9): TEST mymatrix = {{1, 2}, {3, 4}, {5, 6}};
  63 (10): TEST TableForm[mymatrix]
  64 (11): TEST MatrixForm[mymatrix]
  65 (12): TEST mymatrix[[2, 1]]
  66 (13): TEST mymatrix[[;;, 2]]
  67 (14): TEST Take[mylist, 3]
  68 (15): TEST Take[mylist, -2]
  69 (16): TEST Drop[mylist, 2]
  70 (17): TEST First[mymatrix]
  71 (18): TEST Last[mylist]
  72 (19): TEST Most[mylist]
  73 (20): TEST Rest[mylist]
  74 (21): TEST {a, b} = {1, 2};
  75 (22): TEST a
  76 (23): TEST b
  77 (24): TEST {1, 2, 3} + {4, 5, 6}
  78 (25): TEST {1, 2, 3} * {4, 5, 6}
  79 (26): TEST {1, 2} + {4, 5, 6}
********** Language Tutorials / The Structure of Things **********
  80 ( 1): TEST FullForm[a + b + c]
  81 ( 2): TEST FullForm[a + b * (c + d)]
  82 ( 3): TEST FullForm[{1, 2, 3}]
  83 ( 4): TEST Head[a + b + c]
  84 ( 5): TEST (a + b + c)[[2]]
  85 ( 6): TEST (a + b + c)[[0]]
  86 ( 7): TEST Apply[g, f[x, y]]
  87 ( 8): TEST Apply[Plus, a * b * c]
  88 ( 9): TEST Times @@ {1, 2, 3, 4}
  89 (10): TEST Apply[f, {{1, 2}, {3, 4}}, {1}]
  90 (11): TEST Apply[f, {{1, 2}, {3, 4}}, {0, 2}]
  91 (12): TEST Map[f, {1, 2, 3, 4}]
  92 (13): TEST f /@ {{1, 2}, {3, 4}}
  93 (14): TEST AtomQ[5]
  94 (15): TEST AtomQ[a + b]
  95 (16): TEST FullForm[3 / 5]
  96 (17): TEST FullForm[3 + 4 I]
  97 (18): TEST f @@ Complex[3, 4]
  98 (19): TEST Head /@ {1, 1/2, 2.0, I, "a string", x}
  99 (20): TEST 3 === 3
 100 (21): TEST 3 == 3.0
 101 (22): TEST 3 === 3.0
********** Language Tutorials / Functions and Patterns **********
 102 ( 1): TEST f[x_] := x ^ 2
 103 ( 2): TEST f[3]
 104 ( 3): TEST f[a]
 105 ( 4): TEST f[1, 2]
 106 ( 5): TEST g[s___] := Plus[s] ^ 2
 107 ( 6): TEST g[1, 2, 3]
 108 ( 7): TEST MatchQ[a + b, x_ + y_]
 109 ( 8): TEST MatchQ[6, _Integer]
 110 ( 9): TEST {2, "a", 3, 2.5, "b", c} /. x_Integer -> x ^ 2
 111 (10): TEST {2, "a", 3, 2.5, "b", c} /. {x_Integer -> x ^ 2.0, y_String -> 10}
 112 (11): TEST {2, "a", 3, 2.5, "b", c} //. {x_Integer -> x ^ 2.0, y_String -> 10}
 113 (12): TEST a :> 1 + 2
 114 (13): TEST a -> 1 + 2
 115 (14): TEST {1, 2} /. x_Integer -> N[x]
 116 (15): TEST {1, 2} /. x_Integer :> N[x]
 117 (16): TEST ReplaceList[{a, b, c}, {___, x__, ___} -> {x}]
 118 (17): TEST ReplaceAll[{a, b, c}, {___, x__, ___} -> {x}]
 119 (18): TEST h = # ^ 2 &;
 120 (19): TEST h[3]
 121 (20): TEST sum = #1 + #2 &;
 122 (21): TEST sum[4, 6]
 123 (22): TEST prod = Function[{x, y}, x * y];
 124 (23): TEST prod[4, 6]
 125 (24): TEST # ^ 2 & /@ Range[5]
 126 (25): TEST Sort[{{x, 10}, {y, 2}, {z, 5}}, #1[[2]] < #2[[2]] &]
 127 (26): TEST h @ 3
 128 (27): TEST 3 // h
********** Language Tutorials / Control Statements **********
 129 ( 1): TEST If[2 < 3, a, b]
 130 ( 2): TEST x = 3; Which[x < 2, a, x > 4, b, x < 5, c]
 131 ( 3): TEST 1; 2; 3
 132 ( 4): TEST 1; 2; 3;
 133 ( 5): TEST For[i = 1, i <= 5, i++, If[i == 4, Break[]]; Print[i]]
********** Language Tutorials / Scoping **********
 134 ( 1): TEST t = 3;
 135 ( 2): TEST Module[{t}, t = 2]
 136 ( 3): TEST Block[{t}, t = 2]
 137 ( 4): TEST t
 138 ( 5): TEST y = x ^ 3;
 139 ( 6): TEST Module[{x = 2}, x * y]
 140 ( 7): TEST Block[{x = 2}, x * y]
 141 ( 8): TEST expr = x ^ 2 + x;
 142 ( 9): TEST Block[{x = 3}, expr]
 143 (10): TEST x
 144 (11): TEST Block[{$RecursionLimit = 30}, x = 2 x]
 145 (12): TEST f[x_] := f[x + 1]; Block[{$IterationLimit = 30}, f[1]]
 146 (13): TEST fac[n_] := Module[{k, p}, p = 1; For[k = 1, k <= n, ++k, p *= k]; p]
 147 (14): TEST fac[10]
 148 (15): TEST 10!
********** Language Tutorials / Formatting Output **********
 149 ( 1): TEST Format[x] = "y";
 150 ( 2): TEST x
 151 ( 3): TEST x // InputForm
 152 ( 4): TEST Format[x, TeXForm] = "z";
 153 ( 5): TEST x // TeXForm
 154 ( 6): TEST Format[r[args___]] = "<an r object>";
 155 ( 7): TEST r[1, 2, 3]
 156 ( 8): TEST Format[r[args___]] = Infix[{args}, "~"];
 157 ( 9): TEST r[1, 2, 3]
 158 (10): TEST StringForm["`1` and `2`", n, m]
 159 (11): TEST Grid[{{a, b}, {c, d}}]
 160 (12): TEST Subscript[a, 1, 2] // TeXForm
 161 (13): TEST MakeBoxes[b, StandardForm] = "c";
 162 (14): TEST b
 163 (15): TEST b // TeXForm
 164 (16): TEST b // OutputForm // TeXForm
 165 (17): TEST MakeBoxes[b, TeXForm] = "d";
 166 (18): TEST b // TeXForm
 167 (19): TEST MakeBoxes[c, MathMLForm] = "<not closed";
 168 (20): TEST c // MathMLForm
 169 (21): TEST c + 1 // MathMLForm
 170 (22): TEST Format[d, MathMLForm] = "<not closed";
 171 (23): TEST d // MathMLForm
 172 (24): TEST d + 1 // MathMLForm
 173 (25): TEST MakeBoxes[{items___}, StandardForm] := RowBox[{"[", Sequence @@ Riffle[MakeBoxes /@ {items}, " "], "]"}]
 174 (26): TEST {1, 2, 3}
 175 (27): TEST {1, 2, 3} // TeXForm
 176 (28): TEST [1 2 3]
 177 (29): TEST Clear[MakeBoxes]
 178 (30): TEST Attributes[MakeBoxes]
 179 (31): TEST MakeBoxes[squared[args___], StandardForm] := squared[args] ^ 2
 180 (32): TEST squared[1, 2]
 182 (34): TEST MakeBoxes[squared[args___], StandardForm] := SuperscriptBox[RowBox[{MakeBoxes[squared], "[", RowBox[Riffle[MakeBoxes[#]& /@ {args}, ","]], "]"}], 2]
 183 (35): TEST squared[1, 2]
 184 (36): TEST squared[1, 2] // TeXForm
 185 (37): TEST ToBoxes[m + n]
 186 (38): TEST InputForm[%]
********** Language Tutorials / Graphics Introduction Examples **********
 187 ( 1): TEST Graphics[{Circle[{0, 0}, 1]}]
 188 ( 2): TEST Graphics[{Line[{{0, 0}, {0, 1}, {1, 1}, {1, -1}}], Rectangle[{0, 0}, {-1, -1}]}]
 189 ( 3): TEST Graphics[{Red, Disk[]}]
 190 ( 4): TEST Graphics[Table[{Hue[h, s], Disk[{12h, 8s}]}, {h, 0, 1, 1/6}, {s, 0, 1, 1/4}]]
 191 ( 5): TEST Graphics[{Lighter[Red], Disk[]}]
 192 ( 6): TEST Head[ToBoxes[Graphics[{Circle[]}]]]
********** Language Tutorials / 3D Graphics **********
 193 ( 1): TEST Graphics3D[Polygon[{{0,0,0}, {0,1,1}, {1,0,0}}]]
 194 ( 2): TEST Graphics3D[{Orange, Polygon[{{0,0,0}, {1,1,1}, {1,0,0}}]}, Axes->True]
 195 ( 3): TEST Head[ToBoxes[Graphics3D[{Polygon[]}]]]
********** Language Tutorials / Plotting Introduction Examples **********
 196 ( 1): TEST Plot[Sin[x], {x, 0, 2 Pi}]
 197 ( 2): TEST Plot[{Sin[x], Cos[x], x ^ 2}, {x, -1, 1}]
 198 ( 3): TEST DensityPlot[x ^ 2 + 1 / y, {x, -1, 1}, {y, 1, 4}]
 199 ( 4): TEST DensityPlot[x ^ 2 + 1 / y, {x, -1, 1}, {y, 1, 4}, ColorFunction -> (Blend[{Red, Green, Blue}, #]&)]
 200 ( 5): TEST Plot3D[Exp[x] Cos[y], {x, -2, 1}, {y, -Pi, 2 Pi}]
********** Examples / Curve sketching **********
 201 ( 1): TEST f[x_] := 4 x / (x ^ 2 + 3 x + 5)
 202 ( 2): TEST {f'[x], f''[x], f'''[x]} // Together
 203 ( 3): TEST extremes = Solve[f'[x] == 0, x]
 204 ( 4): TEST f''[x] /. extremes // N
 205 ( 5): TEST inflections = Solve[f''[x] == 0, x] // N // Chop
 206 ( 6): TEST f'''[x] /. inflections
 207 ( 7): TEST Solve[Denominator[f[x]] == 0, x]
 208 ( 8): TEST Limit[f[x], x -> Infinity]
 209 ( 9): TEST Limit[f[x], x -> -Infinity]
 210 (10): TEST Plot[f[x], {x, -8, 6}]
********** Examples / Linear algebra **********
 211 ( 1): TEST A = {{1, 1, 0}, {1, 0, 1}, {0, 1, 1}};
 212 ( 2): TEST MatrixForm[A]
 213 ( 3): TEST Eigenvalues[A]
 214 ( 4): TEST Eigenvectors[A]
 215 ( 5): TEST T = Transpose[Eigenvectors[A]]; MatrixForm[T]
 216 ( 6): TEST Inverse[T] . A . T // MatrixForm
 217 ( 7): TEST % == DiagonalMatrix[Eigenvalues[A]]
 218 ( 8): TEST LinearSolve[A, {1, 2, 3}]
 219 ( 9): TEST A . %
 220 (10): TEST NullSpace[A]
 221 (11): TEST B = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
 222 (12): TEST MatrixRank[B]
 223 (13): TEST s = LinearSolve[B, {1, 2, 3}]
 224 (14): TEST NullSpace[B]
 225 (15): TEST B . (RandomInteger[100] * %[[1]] + s)
********** Examples / Dice **********
 226 ( 1): TEST Dice[1, 6, 4, 4]
 227 ( 2): TEST SetAttributes[Dice, Orderless]
 228 ( 3): TEST Dice[1, 6, 4, 4]
 229 ( 4): TEST Format[Dice[n_Integer?(1 <= # <= 6 &)]] := Block[{p = 0.2, r = 0.05}, Graphics[{EdgeForm[Black], White, Rectangle[], Black, EdgeForm[], If[OddQ[n], Disk[{0.5, 0.5}, r]], If[MemberQ[{2, 3, 4, 5, 6}, n], Disk[{p, p}, r]], If[MemberQ[{2, 3, 4, 5, 6}, n], Disk[{1 - p, 1 - p}, r]], If[MemberQ[{4, 5, 6}, n], Disk[{p, 1 - p}, r]], If[MemberQ[{4, 5, 6}, n], Disk[{1 - p, p}, r]], If[n === 6, {Disk[{p, 0.5}, r], Disk[{1 - p, 0.5}, r]}]}, ImageSize -> Tiny]]
 230 ( 5): TEST Dice[1]
 231 ( 6): TEST Definition[Dice]
 232 ( 7): TEST Format[Dice[]] := Graphics[{EdgeForm[Black], White, Rectangle[]}, ImageSize -> Tiny]
 233 ( 8): TEST Dice[]
 234 ( 9): TEST Format[Dice[d___Integer?(1 <= # <= 6 &)]] := Row[Dice /@ {d}]
 235 (10): TEST Dice[1, 6, 4, 4]
 236 (11): TEST Dice[1, 6, 4, 4] // InputForm
 237 (12): TEST Dice[a___] + Dice[b___] ^:= Dice[Sequence @@ {a, b}]
 238 (13): TEST Dice[a___] + Dice[b___] := Dice[Sequence @@ {a, b}]
 239 (14): TEST Dice[1, 5] + Dice[3, 2] + Dice[4]
 240 (15): TEST Dice[1, 5] + Dice[3, 2] + Dice[4] // InputForm
 241 (16): TEST DiceSum[Dice[d___]] := Plus @@ {d}
 242 (17): TEST DiceSum @ Dice[1, 2, 5]
 243 (18): TEST Table[{Dice[Sequence @@ d], DiceSum @ Dice[Sequence @@ d]}, {d, {{1, 2}, {2, 2}, {2, 6}}}] // TableForm
********** Algebraic Manipulation / Apart **********
 244 ( 1): TEST Apart[1 / (x^2 + 5x + 6)]
 245 ( 2): TEST Apart[1 / (x^2 - y^2), x]
 246 ( 3): TEST Apart[1 / (x^2 - y^2), y]
 247 ( 4): TEST Apart[{1 / (x^2 + 5x + 6)}]
 248 ( 5): TEST Sin[1 / (x ^ 2 - y ^ 2)] // Apart
 249 ( 6): TEST Attributes[f] = {HoldAll}; Apart[f[x + x]]
 250 ( 7): TEST Attributes[f] = {}; Apart[f[x + x]]
********** Algebraic Manipulation / Cancel **********
 251 ( 1): TEST Cancel[x / x ^ 2]
 252 ( 2): TEST Cancel[x / x ^ 2 + y / y ^ 2]
 253 ( 3): TEST Cancel[f[x] / x + x * f[x] / x ^ 2]
********** Algebraic Manipulation / Coefficient **********
 254 ( 1): TEST Coefficient[(x + y)^4, (x^2) * (y^2)]
 255 ( 2): TEST Coefficient[a x^2 + b y^3 + c x + d y + 5, x]
 256 ( 3): TEST Coefficient[(x + 3 y)^5, x]
 257 ( 4): TEST Coefficient[(x + 3 y)^5, x * y^4]
 258 ( 5): TEST Coefficient[(x + 2)/(y - 3) + (x + 3)/(y - 2), x]
 259 ( 6): TEST Coefficient[(x + 2)/(y - 3) + (x + 3)/(y - 2), z, 0]
 260 ( 7): TEST Coefficient[y (x - 2)/((y^2 - 9)) + (x + 5)/(y + 2), x]
 261 ( 8): TEST Coefficient[y (x - 2)/((y^2 - 9)) + (x + 5)/(y + 2), y]
 262 ( 9): TEST Coefficient[y (x - 2)/((y - 3)(y + 3)) + (x + 5)/(y + 2), x]
 263 (10): TEST Coefficient[y (x - 2)/((y - 3)(y + 3)) + (x + 5)/(y + 2), y]
 264 (11): TEST Coefficient[x^3 - 2 x/y + 3 x z, y]
 265 (12): TEST Coefficient[x^2 + axy^2 - bSin[c], c]
 266 (13): TEST Coefficient[x*Cos[x + 3] + 6*y, x]
 267 (14): TEST Coefficient[(x + 1)^3, x, 2]
 268 (15): TEST Coefficient[a x^2 + b y^3 + c x + d y + 5, y, 3]
 269 (16): TEST Coefficient[(x + 2)^3 + (x + 3)^2, x, 0]
 270 (17): TEST Coefficient[(x + 2)^3 + (x + 3)^2, y, 0]
 271 (18): TEST Coefficient[a x^2 + b y^3 + c x + d y + 5, x, 0]
 272 (19): TEST Coefficient[x + y + 3]
 273 (20): TEST Coefficient[x + y + 3, 5]
********** Algebraic Manipulation / CoefficientList **********
 274 ( 1): TEST CoefficientList[(x + 3)^5, x]
 275 ( 2): TEST CoefficientList[(x + y)^4, x]
 276 ( 3): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, x]
 277 ( 4): TEST CoefficientList[(x + 2)/(y - 3) + x/(y - 2), x]
 278 ( 5): TEST CoefficientList[(x + y)^3, z]
 279 ( 6): TEST CoefficientList[x + y]
 280 ( 7): TEST CoefficientList[x^2 + a x y^2 - b Sin[c], y]
 281 ( 8): TEST CoefficientList[1/y, y]
 282 ( 9): TEST CoefficientList[0, x]
 283 (10): TEST CoefficientList[1, x]
 284 (11): TEST CoefficientList[x + y, 5]
 285 (12): TEST CoefficientList[x + 1, {}]
 286 (13): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, {x, y}]
 287 (14): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, {x}]
 288 (15): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, {}]
 289 (16): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, {x, y + 1}]
 290 (17): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, {x + 1, y}]
 291 (18): TEST CoefficientList[a x^2 + b y^3 + c x + d y + 5, {x + 1, y + 1}]
 292 (19): TEST CoefficientList[(x - 2 y + 3 z)^3, {x, y, z}]
 293 (20): TEST CoefficientList[(x - 2 y)^4, {x, 2}]
 294 (21): TEST CoefficientList[x / y, {x, y}]
 295 (22): TEST CoefficientList[y (x - 2)/((z - 3) (z + 3)) + (x + 5)/(z + 2), {x, y}]
 296 (23): TEST CoefficientList[0, {x, y}]
 297 (24): TEST CoefficientList[1, {x, y}]
********** Algebraic Manipulation / Denominator **********
 298 ( 1): TEST Denominator[a / b]
 299 ( 2): TEST Denominator[2 / 3]
 300 ( 3): TEST Denominator[a + b]
********** Algebraic Manipulation / Expand **********
 301 ( 1): TEST Expand[(x + y) ^ 3]
 302 ( 2): TEST Expand[(a + b) (a + c + d)]
 303 ( 3): TEST Expand[(a + b) (a + c + d) (e + f) + e a a]
 304 ( 4): TEST Expand[(a + b) ^ 2 * (c + d)]
 305 ( 5): TEST Expand[(x + y) ^ 2 + x y]
 306 ( 6): TEST Expand[((a + b) (c + d)) ^ 2 + b (1 + a)]
 307 ( 7): TEST Expand[{4 (x + y), 2 (x + y) -> 4 (x + y)}]
 308 ( 8): TEST Expand[Sin[x + y], Trig -> True]
 309 ( 9): TEST Expand[Sin[x (1 + y)]]
 310 (10): TEST Expand[(1 + a)^12, Modulus -> 3]
 311 (11): TEST Expand[(1 + a)^12, Modulus -> 4]
 312 (12): TEST Expand[x, Modulus -> -1]  (* copy odd MMA behaviour *)
 313 (13): TEST Expand[x, Modulus -> x]
 314 (14): TEST a(b(c+d)+e) // Expand
 315 (15): TEST (y^2)^(1/2)/(2x+2y)//Expand
 316 (16): TEST 2(3+2x)^2/(5+x^2+3x)^3 // Expand
********** Algebraic Manipulation / ExpandAll **********
 317 ( 1): TEST ExpandAll[(a + b) ^ 2 / (c + d)^2]
 318 ( 2): TEST ExpandAll[(a + Sin[x (1 + y)])^2]
 319 ( 3): TEST ExpandAll[((1 + x)(1 + y))[x]]
 320 ( 4): TEST ExpandAll[(1 + a) ^ 6 / (x + y)^3, Modulus -> 3]
********** Algebraic Manipulation / ExpandDenominator **********
 321 ( 1): TEST ExpandDenominator[(a + b) ^ 2 / ((c + d)^2 (e + f))]
 322 ( 2): TEST ExpandDenominator[1 / (x + y)^3, Modulus -> 3]
 323 ( 3): TEST ExpandDenominator[1 / (x + y)^6, Modulus -> 4]
 324 ( 4): TEST ExpandDenominator[2(3+2x)^2/(5+x^2+3x)^3]
********** Algebraic Manipulation / Exponent **********
 325 ( 1): TEST Exponent[5 x^2 - 3 x + 7, x]
 326 ( 2): TEST Exponent[5 x^2 - 3 x + 7, x, List]
 327 ( 3): TEST Exponent[(x^3 + 1)^2 + 1, x]
 328 ( 4): TEST Exponent[(x^3 + 1)^2 + 1, x, List]
 329 ( 5): TEST Exponent[Sqrt[I + Sqrt[6]], x]
 330 ( 6): TEST Exponent[x^(n + 1) + Sqrt[x] + 1, x]
 331 ( 7): TEST Exponent[x^(n + 1) + Sqrt[x] + 1, x, List]
 332 ( 8): TEST Exponent[(x + y)^n - 1, x, List]
 333 ( 9): TEST Exponent[(x + 3 y)^5, x*y^4]
 334 (10): TEST Exponent[x / y, y]
 335 (11): TEST Exponent[(x^2 + 1)^3 - 1, x, Min]
 336 (12): TEST Exponent[(x^2 + 1)^3 - 1, x, List]
 337 (13): TEST Exponent[1 - 2 x^2 + a x^3, x, List]
 338 (14): TEST Exponent[(x + 1) + (x + 1)^2, x, List]
 339 (15): TEST Exponent[(x + 3 y  - 2 z)^3 * (5 y + z), {x, y}, List]
 340 (16): TEST Exponent[(x + 3 y - 2 z)^3*(5 y + z), {"x", "y"}, List]
 341 (17): TEST Exponent[(x + 3 y - 2 z)^3*(5 y + z), {}]
 342 (18): TEST Exponent[x^a + b y^3 + c x + 2 y^e + 5, {x, y}, List]
 343 (19): TEST Exponent[x^2 / y^3, {x, y}]
 344 (20): TEST Exponent[(x + 2)/(y - 3) + (x + 3)/(y - 2), {x, y, z}, List]
 345 (21): TEST Exponent[x + 6 x^3 y^2 - 3/((x^2) (y^2)), {x, y}, List]
 346 (22): TEST Exponent[x^5 Sin[x^2] + x * x^3 Cos[x], x, List]
 347 (23): TEST Exponent[x^5 Sin[x^2] + y Cos[y^2] + Log[x^3] + 6 y^4, {x, y}, List]
 348 (24): TEST Exponent[0, x]
 349 (25): TEST Exponent[1, x]
 350 (26): TEST Exponent[x^2]
********** Algebraic Manipulation / Factor **********
 351 ( 1): TEST Factor[x ^ 2 + 2 x + 1]
 352 ( 2): TEST Factor[1 / (x^2+2x+1) + 1 / (x^4+2x^2+1)]
 353 ( 3): TEST Factor[{x+x^2}]
********** Algebraic Manipulation / FactorTermsList **********
 354 ( 1): TEST FactorTermsList[2 x^2 - 2]
 355 ( 2): TEST FactorTermsList[x^2 - 2 x + 1]
 356 ( 3): TEST FactorTermsList[2 x^2 - 2, x]
 357 ( 4): TEST f = 3 (-1 + 2 x) (-1 + y) (1 - a)
 358 ( 5): TEST FactorTermsList[f]
 359 ( 6): TEST FactorTermsList[f, x]
 360 ( 7): TEST FactorTermsList[f, y]
 361 ( 8): TEST FactorTermsList[f, {x, y}]
 362 ( 9): TEST FactorTermsList[f, {y, x}]
 363 (10): TEST FactorTermsList[f, {x, y, z}]
 364 (11): TEST FactorTermsList[f, {x, y, z, t}]
 365 (12): TEST FactorTermsList[f, 3/5]
 366 (13): TEST FactorTermsList[f, {x, 3, y}]
 367 (14): TEST FactorTermsList[f/c]
 368 (15): TEST FactorTermsList[f/c, x] == FactorTermsList[f/c, {x, y}]
 369 (16): TEST g = Sin[x]*Cos[y]*(1 - 2 a)
 370 (17): TEST FactorTermsList[g]
 371 (18): TEST FactorTermsList[g, x]
 372 (19): TEST FactorTermsList[g, x] == FactorTermsList[g, y] == FactorTermsList[g, {x, y}]
 373 (20): TEST v = 3 * y * (1 - b) a^x
 374 (21): TEST FactorTermsList[v]
 375 (22): TEST FactorTermsList[v, x]
 376 (23): TEST FactorTermsList[v, y]
 377 (24): TEST FactorTermsList[7]
 378 (25): TEST FactorTermsList[0]
 379 (26): TEST FactorTermsList[-3]
 380 (27): TEST FactorTermsList[7, {y, x}]
 381 (28): TEST FactorTermsList[7, x]
 382 (29): TEST FactorTermsList[7 - I, x]
 383 (30): TEST FactorTermsList[(x - 1) (1 + a), {c, d}]
 384 (31): TEST FactorTermsList[(x - 1) (1 + a), {c, x}]
 385 (32): TEST FactorTermsList[(x - 1) (1 + a), {}] == FactorTermsList[(x - 1) (1 + a)]
 386 (33): TEST FactorTermsList[x]
 387 (34): TEST FactorTermsList["x"]
********** Algebraic Manipulation / MinimalPolynomial **********
 388 ( 1): TEST MinimalPolynomial[7, x]
 389 ( 2): TEST MinimalPolynomial[Sqrt[2] + Sqrt[3], x]
 390 ( 3): TEST MinimalPolynomial[Sqrt[1 + Sqrt[3]], x]
 391 ( 4): TEST MinimalPolynomial[Sqrt[I + Sqrt[6]], x]
 392 ( 5): TEST MinimalPolynomial[7a, x]
 393 ( 6): TEST MinimalPolynomial[3x^3 + 2x^2 + y^2 + ab, x]
 394 ( 7): TEST MinimalPolynomial[Sqrt[2 + Sqrt[3]]]
********** Algebraic Manipulation / Numerator **********
 395 ( 1): TEST Numerator[a / b]
 396 ( 2): TEST Numerator[2 / 3]
 397 ( 3): TEST Numerator[a + b]
********** Algebraic Manipulation / PolynomialQ **********
 398 ( 1): TEST PolynomialQ[x^3 - 2 x/y + 3xz, x]
 399 ( 2): TEST PolynomialQ[x^3 - 2 x/y + 3xz, y]
 400 ( 3): TEST PolynomialQ[f[a] + f[a]^2, f[a]]
 401 ( 4): TEST PolynomialQ[x^2 + axy^2 - bSin[c], {x, y}]
 402 ( 5): TEST PolynomialQ[x^2 + axy^2 - bSin[c], {a, b, c}]
 403 ( 6): TEST PolynomialQ[x, x, y]
 404 ( 7): TEST PolynomialQ[x^3 - 2 x/y + 3xz,]
 405 ( 8): TEST PolynomialQ[, {x, y, z}]
 406 ( 9): TEST PolynomialQ[, ]
********** Algebraic Manipulation / PowerExpand **********
 407 ( 1): TEST PowerExpand[(a ^ b) ^ c]
 408 ( 2): TEST PowerExpand[(a * b) ^ c]
 409 ( 3): TEST PowerExpand[(x ^ 2) ^ (1/2)]
********** Algebraic Manipulation / Simplify **********
 410 ( 1): TEST Simplify[2*Sin[x]^2 + 2*Cos[x]^2]
 411 ( 2): TEST Simplify[x]
 412 ( 3): TEST Simplify[f[x]]
 413 ( 4): TEST Simplify[a*x^2+b*x^2]
 414 ( 5): TEST x f[{y}] // Simplify
********** Algebraic Manipulation / Together **********
 415 ( 1): TEST Together[a / c + b / c]
 416 ( 2): TEST Together[{x / (y+1) + x / (y+1)^2}]
 417 ( 3): TEST Together[f[a / c + b / c]]
 418 ( 4): TEST f[x]/x+f[x]/x^2//Together
********** Algebraic Manipulation / Variables **********
 419 ( 1): TEST Variables[a x^2 + b x + c]
 420 ( 2): TEST Variables[{a + b x, c y^2 + x/2}]
 421 ( 3): TEST Variables[x + Sin[y]]
********** Mathematical Functions / Abs **********
 422 ( 1): TEST Abs[-3]
 423 ( 2): TEST Abs[3 + I]
 424 ( 3): TEST Abs[3.0 + I]
 425 ( 4): TEST Plot[Abs[x], {x, -4, 4}]
 426 ( 5): TEST Abs[I]
 427 ( 6): TEST Abs[a - b]
 428 ( 7): TEST Abs[Sqrt[3]]
********** Mathematical Functions / Boole **********
 429 ( 1): TEST Boole[2 == 2]
 430 ( 2): TEST Boole[7 < 5]
 431 ( 3): TEST Boole[a == 7]
********** Mathematical Functions / ComplexInfinity **********
 432 ( 1): TEST 1 / ComplexInfinity
 433 ( 2): TEST ComplexInfinity * Infinity
 434 ( 3): TEST FullForm[ComplexInfinity]
 435 ( 4): TEST ComplexInfinity + ComplexInfinity
 436 ( 5): TEST ComplexInfinity + Infinity
********** Mathematical Functions / Complex **********
 437 ( 1): TEST Head[2 + 3*I]
 438 ( 2): TEST Complex[1, 2/3]
 439 ( 3): TEST Abs[Complex[3, 4]]
 440 ( 4): TEST OutputForm[Complex[2.0 ^ 40, 3]]
 441 ( 5): TEST InputForm[Complex[2.0 ^ 40, 3]]
 442 ( 6): TEST -2 / 3 - I
 443 ( 7): TEST Complex[10, 0]
 444 ( 8): TEST 0. + I
 445 ( 9): TEST 1 + 0 I
 446 (10): TEST Head[%]
 447 (11): TEST Complex[0.0, 0.0]
 448 (12): TEST 0. I
 449 (13): TEST 0. + 0. I
 450 (14): TEST 1. + 0. I
 451 (15): TEST 0. + 1. I
 452 (16): TEST Complex[1, Complex[0, 1]]
 453 (17): TEST Complex[1, Complex[1, 0]]
 454 (18): TEST Complex[1, Complex[1, 1]]
********** Mathematical Functions / Conjugate **********
 455 ( 1): TEST Conjugate[3 + 4 I]
 456 ( 2): TEST Conjugate[3]
 457 ( 3): TEST Conjugate[a + b * I]
 458 ( 4): TEST Conjugate[{{1, 2 + I 4, a + I b}, {I}}]
 459 ( 5): TEST {Conjugate[Pi], Conjugate[E]}
 460 ( 6): TEST Conjugate[1.5 + 2.5 I]
********** Mathematical Functions / CubeRoot **********
 461 ( 1): TEST CubeRoot[16]
 462 ( 2): TEST CubeRoot[-5]
 463 ( 3): TEST CubeRoot[-510000]
 464 ( 4): TEST CubeRoot[-5.1]
 465 ( 5): TEST CubeRoot[b]
 466 ( 6): TEST CubeRoot[-0.5]
 467 ( 7): TEST CubeRoot[3 + 4 I]
********** Mathematical Functions / DirectedInfinity **********
 468 ( 1): TEST DirectedInfinity[1]
 469 ( 2): TEST DirectedInfinity[]
 470 ( 3): TEST DirectedInfinity[1 + I]
 471 ( 4): TEST 1 / DirectedInfinity[1 + I]
 472 ( 5): TEST DirectedInfinity[1] + DirectedInfinity[-1]
 473 ( 6): TEST DirectedInfinity[1+I]+DirectedInfinity[2+I]
 474 ( 7): TEST DirectedInfinity[Sqrt[3]]
********** Mathematical Functions / Divide **********
 475 ( 1): TEST 30 / 5
 476 ( 2): TEST 1 / 8
 477 ( 3): TEST Pi / 4
 478 ( 4): TEST Pi / 4.0
 479 ( 5): TEST 1 / 8
 480 ( 6): TEST N[%]
 481 ( 7): TEST a / b / c
 482 ( 8): TEST a / (b / c)
 483 ( 9): TEST a / b / (c / (d / e))
 484 (10): TEST a / (b ^ 2 * c ^ 3 / e)
 485 (11): TEST 1 / 4.0
 486 (12): TEST 10 / 3 // FullForm
 487 (13): TEST a / b // FullForm
********** Mathematical Functions / ExactNumberQ **********
 488 ( 1): TEST ExactNumberQ[10]
 489 ( 2): TEST ExactNumberQ[4.0]
 490 ( 3): TEST ExactNumberQ[n]
 491 ( 4): TEST ExactNumberQ[1 + I]
 492 ( 5): TEST ExactNumberQ[1 + 1. I]
********** Mathematical Functions / Factorial **********
 493 ( 1): TEST 20!
 494 ( 2): TEST 10.5!
 495 ( 3): TEST (-3.0+1.5*I)!
 496 ( 4): TEST (-1.)!
 497 ( 5): TEST !a! //FullForm
 498 ( 6): TEST 0!
********** Mathematical Functions / Gamma **********
 499 ( 1): TEST Simplify[Gamma[z] - (z - 1)!]
 500 ( 2): TEST Gamma[8]
 501 ( 3): TEST Gamma[1/2]
 502 ( 4): TEST Gamma[1, x]
 503 ( 5): TEST Gamma[0, x]
 504 ( 6): TEST Gamma[123.78]
 505 ( 7): TEST Gamma[1. + I]
 506 ( 8): TEST Plot[{Gamma[x], x!}, {x, 0, 4}]
 507 ( 9): TEST N[Gamma[24/10], 100]
 508 (10): TEST N[N[Gamma[24/10],100]/N[Gamma[14/10],100],100]
 509 (11): TEST % // Precision
 510 (12): TEST Gamma[1.*^20]
 511 (13): TEST Gamma[1., 2.]
********** Mathematical Functions / HarmonicNumber **********
 512 ( 1): TEST Table[HarmonicNumber[n], {n, 8}]
 513 ( 2): TEST HarmonicNumber[3.8]
 514 ( 3): TEST HarmonicNumber[-1.5]
********** Mathematical Functions / I **********
 515 ( 1): TEST I^2
 516 ( 2): TEST (3+I)*(3-I)
********** Mathematical Functions / Im **********
 517 ( 1): TEST Im[3+4I]
 518 ( 2): TEST Plot[{Sin[a], Im[E^(I a)]}, {a, 0, 2 Pi}]
 519 ( 3): TEST Re[0.5 + 2.3 I]
 520 ( 4): TEST % // Precision
********** Mathematical Functions / Indeterminate **********
 521 ( 1): TEST 0^0
 522 ( 2): TEST Tan[Indeterminate]
********** Mathematical Functions / InexactNumberQ **********
 523 ( 1): TEST InexactNumberQ[a]
 524 ( 2): TEST InexactNumberQ[3.0]
 525 ( 3): TEST InexactNumberQ[2/3]
 526 ( 4): TEST InexactNumberQ[4.0+I]
********** Mathematical Functions / Infinity **********
 527 ( 1): TEST 1 / Infinity
 528 ( 2): TEST Infinity + 100
 529 ( 3): TEST Sum[1/x^2, {x, 1, Infinity}]
 530 ( 4): TEST FullForm[Infinity]
 531 ( 5): TEST (2 + 3.5*I) / Infinity
 532 ( 6): TEST Infinity + Infinity
 533 ( 7): TEST Infinity / Infinity
********** Mathematical Functions / IntegerQ **********
 534 ( 1): TEST IntegerQ[3]
 535 ( 2): TEST IntegerQ[Pi]
********** Mathematical Functions / Integer **********
 536 ( 1): TEST Head[5]
 537 ( 2): TEST {a, b} = {2^10000, 2^10000 + 1}; {a == b, a < b, a <= b}
********** Mathematical Functions / MachineNumberQ **********
 538 ( 1): TEST MachineNumberQ[3.14159265358979324]
 539 ( 2): TEST MachineNumberQ[1.5 + 2.3 I]
 540 ( 3): TEST MachineNumberQ[2.71828182845904524 + 3.14159265358979324 I]
 541 ( 4): TEST MachineNumberQ[1.5 + 3.14159265358979324 I]
 542 ( 5): TEST MachineNumberQ[1.5 + 5 I]
********** Mathematical Functions / Minus **********
 543 ( 1): TEST -a //FullForm
 544 ( 2): TEST -(x - 2/3)
 545 ( 3): TEST -Range[10]
********** Mathematical Functions / NumberQ **********
 546 ( 1): TEST NumberQ[3+I]
 547 ( 2): TEST NumberQ[5!]
 548 ( 3): TEST NumberQ[Pi]
********** Mathematical Functions / Piecewise **********
 549 ( 1): TEST Piecewise[{{0, x <= 0}}, 1]
 550 ( 2): TEST Integrate[Piecewise[{{1, x <= 0}, {-1, x > 0}}], x]
 551 ( 3): TEST Integrate[Piecewise[{{1, x <= 0}, {-1, x > 0}}], {x, -1, 2}]
 552 ( 4): TEST Piecewise[{{1, False}}]
 553 ( 5): TEST Plot[Piecewise[{{Log[x], x > 0}, {x*-0.5, x < 0}}], {x, -1, 1}]
 554 ( 6): TEST Piecewise[{{0 ^ 0, False}}, -1]
********** Mathematical Functions / Plus **********
 555 ( 1): TEST 1 + 2
 556 ( 2): TEST a + b + a
 557 ( 3): TEST a + a + 3 * a
 558 ( 4): TEST a + b + 4.5 + a + b + a + 2 + 1.5 b
 559 ( 5): TEST Plus @@ {2, 4, 6}
 560 ( 6): TEST Plus @@ Range[1000]
 561 ( 7): TEST DefaultValues[Plus]
 562 ( 8): TEST a /. n_. + x_ :> {n, x}
 563 ( 9): TEST 2 Graphics[{Red,Disk[]}] + 3 Graphics[{Red,Disk[]}]
 564 (10): TEST -2a - 2b
 565 (11): TEST -4+2x+2*Sqrt[3]
 566 (12): TEST 2a-3b-c
 567 (13): TEST 2a+5d-3b-2c-e
 568 (14): TEST 1 - I * Sqrt[3]
 569 (15): TEST Head[3 + 2 I]
 570 (16): TEST N[Pi, 30] + N[E, 30]
 571 (17): TEST % // Precision
********** Mathematical Functions / Pochhammer **********
 572 ( 1): TEST Pochhammer[4, 8]
********** Mathematical Functions / PossibleZeroQ **********
 573 ( 1): TEST PossibleZeroQ[E^(I Pi/4) - (-1)^(1/4)]
 574 ( 2): TEST PossibleZeroQ[(x + 1) (x - 1) - x^2 + 1]
 575 ( 3): TEST PossibleZeroQ[(E + Pi)^2 - E^2 - Pi^2 - 2 E Pi]
 576 ( 4): TEST PossibleZeroQ[E^Pi - Pi^E]
 577 ( 5): TEST PossibleZeroQ[1/x + 1/y - (x + y)/(x y)]
 578 ( 6): TEST PossibleZeroQ[2^(2 I) - 2^(-2 I) - 2 I Sin[Log[4]]]
 579 ( 7): TEST PossibleZeroQ[Sqrt[x^2] - x]
********** Mathematical Functions / Power **********
 580 ( 1): TEST 4 ^ (1/2)
 581 ( 2): TEST 4 ^ (1/3)
 582 ( 3): TEST 3^123
 583 ( 4): TEST (y ^ 2) ^ (1/2)
 584 ( 5): TEST (y ^ 2) ^ 3
 585 ( 6): TEST Plot[Evaluate[Table[x^y, {y, 1, 5}]], {x, -1.5, 1.5}, AspectRatio -> 1]
 586 ( 7): TEST 4.0 ^ (1/3)
 587 ( 8): TEST DefaultValues[Power]
 588 ( 9): TEST a /. x_ ^ n_. :> {x, n}
 589 (10): TEST (1.5 + 1.0 I) ^ 3.5
 590 (11): TEST (1.5 + 1.0 I) ^ (3.5 + 1.5 I)
 591 (12): TEST 1/0
 592 (13): TEST 0 ^ -2
 593 (14): TEST 0 ^ (-1/2)
 594 (15): TEST 0 ^ -Pi
 595 (16): TEST 0 ^ (2 I E)
 596 (17): TEST 0 ^ - (Pi + 2 E I)
 597 (18): TEST 0 ^ 0
 598 (19): TEST Sqrt[-3+2. I]
 599 (20): TEST Sqrt[-3+2 I]
 600 (21): TEST (3/2+1/2I)^2
 601 (22): TEST I ^ I
 602 (23): TEST 2 ^ 2.0
 603 (24): TEST Pi ^ 4.
 604 (25): TEST a ^ b
********** Mathematical Functions / Product **********
 605 ( 1): TEST Product[k, {k, 1, 10}]
 606 ( 2): TEST 10!
 607 ( 3): TEST Product[x^k, {k, 2, 20, 2}]
 608 ( 4): TEST Product[2 ^ i, {i, 1, n}]
 609 ( 5): TEST Product[f[i], {i, 1, 7}]
 610 ( 6): TEST Product[k, {k, 3, n}]
 611 ( 7): TEST primorial[0] = 1;
 612 ( 8): TEST primorial[n_Integer] := Product[Prime[k], {k, 1, n}];
 613 ( 9): TEST primorial[12]
********** Mathematical Functions / Rational **********
 614 ( 1): TEST Head[1/2]
 615 ( 2): TEST Rational[1, 2]
 616 ( 3): TEST -2/3
********** Mathematical Functions / Re **********
 617 ( 1): TEST Re[3+4I]
 618 ( 2): TEST Plot[{Cos[a], Re[E^(I a)]}, {a, 0, 2 Pi}]
 619 ( 3): TEST Im[0.5 + 2.3 I]
 620 ( 4): TEST % // Precision
********** Mathematical Functions / RealNumberQ **********
 621 ( 1): TEST RealNumberQ[10]
 622 ( 2): TEST RealNumberQ[4.0]
 623 ( 3): TEST RealNumberQ[1+I]
 624 ( 4): TEST RealNumberQ[0 * I]
 625 ( 5): TEST RealNumberQ[0.0 * I]
********** Mathematical Functions / Real **********
 626 ( 1): TEST x = 3. ^ -20;
 627 ( 2): TEST InputForm[x]
 628 ( 3): TEST Head[x]
 629 ( 4): TEST 1. * 10^6
 630 ( 5): TEST 1. * 10^5
 631 ( 6): TEST -1. * 10^6
 632 ( 7): TEST -1. * 10^5
 633 ( 8): TEST 1. * 10^-6
 634 ( 9): TEST 1. * 10^-5
 635 (10): TEST -1. * 10^-6
 636 (11): TEST -1. * 10^-5
 637 (12): TEST 0.0000000000000
 638 (13): TEST 0.0000000000000000000000000000
 639 (14): TEST 1.5*^24
 640 (15): TEST 1.5*^+24
 641 (16): TEST 1.5*^-24
 642 (17): TEST 1.5 *^10
 643 (18): TEST 1.5*^ 10
 644 (19): TEST 1^^2
 645 (20): TEST 2^^0101
 646 (21): TEST 2^^01210
 647 (22): TEST 16^^5g
 648 (23): TEST 36^^0123456789abcDEFxyzXYZ
 649 (24): TEST 37^^3
********** Mathematical Functions / Sign **********
 650 ( 1): TEST Sign[19]
 651 ( 2): TEST Sign[-6]
 652 ( 3): TEST Sign[0]
 653 ( 4): TEST Sign[{-5, -10, 15, 20, 0}]
 654 ( 5): TEST Sign[{1, 2.3, 4/5, {-6.7, 0}, {8/9, -10}}]
 655 ( 6): TEST Sign[3 - 4*I]
 656 ( 7): TEST Sign[1 - 4*I] == (1/17 - 4 I/17) Sqrt[17]
 657 ( 8): TEST Sign[4, 5, 6]
 658 ( 9): TEST Sign["20"]
********** Mathematical Functions / Sqrt **********
 659 ( 1): TEST Sqrt[4]
 660 ( 2): TEST Sqrt[5]
 661 ( 3): TEST Sqrt[5] // N
 662 ( 4): TEST Sqrt[a]^2
 663 ( 5): TEST Sqrt[-4]
 664 ( 6): TEST I == Sqrt[-1]
 665 ( 7): TEST Plot[Sqrt[a^2], {a, -2, 2}]
 666 ( 8): TEST N[Sqrt[2], 50]
********** Mathematical Functions / Subtract **********
 667 ( 1): TEST 5 - 3
 668 ( 2): TEST a - b // FullForm
 669 ( 3): TEST a - b - c
 670 ( 4): TEST a - (b - c)
********** Mathematical Functions / Sum **********
 671 ( 1): TEST Sum[k, {k, 1, 10}]
 672 ( 2): TEST Sum[i * j, {i, 1, 10}, {j, 1, 10}]
 673 ( 3): TEST Sum[k, {k, 1, n}]
 674 ( 4): TEST Sum[k, {k, n, 2 n}]
 675 ( 5): TEST Sum[k, {k, I, I + 1}]
 676 ( 6): TEST Sum[1 / k ^ 2, {k, 1, n}]
 677 ( 7): TEST Sum[f[i], {i, 1, 7}]
 678 ( 8): TEST Sum[x ^ 2, {x, 1, y}] - y * (y + 1) * (2 * y + 1) / 6
 679 ( 9): TEST (-1 + a^n) Sum[a^(k n), {k, 0, m-1}] // Simplify
 680 (10): TEST Sum[1 / 2 ^ i, {i, 1, Infinity}]
 681 (11): TEST Sum[1 / k ^ 2, {k, 1, Infinity}]
 682 (12): TEST a=Sum[x^k*Sum[y^l,{l,0,4}],{k,0,4}]]
 683 (13): TEST Sum[2^(-i), {i, 1, \[Infinity]}]
----------------------------------------------------------------------
Test failed: Sum in Reference of Built-in Symbols / Mathematical Functions
Sum[2^(-i), {i, 1, \[Infinity]}]
Result: None
Wanted: 1
Additional output:
Syntax::sntxf: "Sum[2^(-i), {i, 1, " cannot be followed by "∞}]" (line 1 of "<test>").

 684 (14): TEST Sum[i / Log[i], {i, 1, Infinity}]
 685 (15): TEST Sum[Cos[Pi i], {i, 1, Infinity}]
 686 (16): TEST Sum[k!, {k, 0, Quotient[4, 2]}]
********** Mathematical Functions / Times **********
 687 ( 1): TEST 10 * 2
 688 ( 2): TEST 10 2
 689 ( 3): TEST a * a
 690 ( 4): TEST x ^ 10 * x ^ -2
 691 ( 5): TEST {1, 2, 3} * 4
 692 ( 6): TEST Times @@ {1, 2, 3, 4}
 693 ( 7): TEST IntegerLength[Times@@Range[5000]]
 694 ( 8): TEST DefaultValues[Times]
 695 ( 9): TEST a /. n_. * x_ :> {n, x}
 696 (10): TEST -a*b // FullForm
 697 (11): TEST -(x - 2/3)
 698 (12): TEST -x*2
 699 (13): TEST -(h/2) // FullForm
 700 (14): TEST x / x
 701 (15): TEST 2x^2 / x^2
 702 (16): TEST 3. Pi
 703 (17): TEST Head[3 * I]
 704 (18): TEST Head[Times[I, 1/2]]
 705 (19): TEST Head[Pi * I]
 706 (20): TEST 3 * a //InputForm
 707 (21): TEST 3 * a //OutputForm
 708 (22): TEST -2.123456789 x
 709 (23): TEST -2.123456789 I
 710 (24): TEST N[Pi, 30] * I
 711 (25): TEST N[I Pi, 30]
 712 (26): TEST N[Pi * E, 30]
 713 (27): TEST N[Pi, 30] * N[E, 30]
 714 (28): TEST N[Pi, 30] * E
 715 (29): TEST % // Precision
********** Assignment / AddTo **********
 716 ( 1): TEST a = 10;
 717 ( 2): TEST a += 2
 718 ( 3): TEST a
********** Assignment / Clear **********
 719 ( 1): TEST x = 2;
 720 ( 2): TEST Clear[x]
 721 ( 3): TEST x
 722 ( 4): TEST x = 2;
 723 ( 5): TEST y = 3;
 724 ( 6): TEST Clear["Global`*"]
 725 ( 7): TEST x
 726 ( 8): TEST y
 727 ( 9): TEST Clear[Sin]
 728 (10): TEST Unprotect[Sin]
 729 (11): TEST Clear[Sin]
 730 (12): TEST Sin[Pi]
 731 (13): TEST Attributes[r] = {Flat, Orderless};
 732 (14): TEST Clear["r"]
 733 (15): TEST Attributes[r]
********** Assignment / ClearAll **********
 734 ( 1): TEST x = 2;
 735 ( 2): TEST ClearAll[x]
 736 ( 3): TEST x
 737 ( 4): TEST Attributes[r] = {Flat, Orderless};
 738 ( 5): TEST ClearAll[r]
 739 ( 6): TEST Attributes[r]
 740 ( 7): TEST Attributes[lock] = {Locked};
 741 ( 8): TEST ClearAll[lock]
********** Assignment / Decrement **********
 742 ( 1): TEST a = 5;
********** Assignment / DefaultValues **********
 745 ( 1): TEST Default[f, 1] = 4
 746 ( 2): TEST DefaultValues[f]
 747 ( 3): TEST DefaultValues[g] = {Default[g] -> 3};
 748 ( 4): TEST Default[g, 1]
 749 ( 5): TEST g[x_.] := {x}
 750 ( 6): TEST g[a]
 751 ( 7): TEST g[]
********** Assignment / Definition **********
 752 ( 1): TEST a = 2;
 753 ( 2): TEST Definition[a]
 754 ( 3): TEST f[x_] := x ^ 2
 755 ( 4): TEST g[f] ^:= 2
 756 ( 5): TEST Definition[f]
 757 ( 6): TEST Attributes[r] := {Orderless}
 758 ( 7): TEST Format[r[args___]] := Infix[{args}, "~"]
 759 ( 8): TEST N[r] := 3.5
 760 ( 9): TEST Default[r, 1] := 2
 761 (10): TEST r::msg := "My message"
 762 (11): TEST Options[r] := {Opt -> 3}
 763 (12): TEST r[arg_., OptionsPattern[r]] := {arg, OptionValue[Opt]}
 764 (13): TEST r[z, x, y]
 765 (14): TEST N[r]
 766 (15): TEST r[]
 767 (16): TEST r[5, Opt->7]
 768 (17): TEST Definition[r]
 769 (18): TEST SetAttributes[r, ReadProtected]
 770 (19): TEST Definition[r]
 771 (20): TEST Definition[Plus]
 772 (21): TEST Definition[Level]
 773 (22): TEST ClearAttributes[r, ReadProtected]
 774 (23): TEST Clear[r]
 775 (24): TEST Definition[r]
 776 (25): TEST ClearAll[r]
 777 (26): TEST Definition[r]
 778 (27): TEST Definition[x]
********** Assignment / DivideBy **********
 779 ( 1): TEST a = 10;
 780 ( 2): TEST a /= 2
 781 ( 3): TEST a
********** Assignment / DownValues **********
 782 ( 1): TEST f[x_] := x ^ 2
 783 ( 2): TEST DownValues[f]
 784 ( 3): TEST f[x_Integer] := 2
 785 ( 4): TEST f[x_Real] := 3
 786 ( 5): TEST DownValues[f]
 787 ( 6): TEST f[3]
 788 ( 7): TEST f[3.]
 789 ( 8): TEST f[a]
 790 ( 9): TEST Sort[{x_, x_Integer}, PatternsOrderedQ]
 791 (10): TEST DownValues[g] := {g[x_] :> x ^ 2, g[x_Integer] :> x}
 792 (11): TEST g[2]
 793 (12): TEST DownValues[fib] := {fib[0] -> 0, fib[1] -> 1, fib[n_] :> fib[n - 1] + fib[n - 2]}
 794 (13): TEST fib[5]
********** Assignment / Increment **********
 795 ( 1): TEST a = 2;
 796 ( 2): TEST a++
 797 ( 3): TEST a
 798 ( 4): TEST ++++a+++++2//Hold//FullForm
********** Assignment / Information **********
 799 ( 1): TEST a = 2;
 800 ( 2): TEST Information[a]
 801 ( 3): TEST f[x_] := x ^ 2
 802 ( 4): TEST g[f] ^:= 2
 803 ( 5): TEST f::usage = "f[x] returns the square of x";
 805 ( 7): TEST ? Table
 806 ( 8): TEST Information[Table]
********** Assignment / LoadModule **********
 807 ( 1): TEST LoadModule["nomodule"]
 808 ( 2): TEST LoadModule["sys"]
********** Assignment / Messages **********
 809 ( 1): TEST a::b = "foo"
 810 ( 2): TEST Messages[a]
 811 ( 3): TEST Messages[a] = {a::c :> "bar"};
 812 ( 4): TEST a::c // InputForm
 813 ( 5): TEST Message[a::c]
********** Assignment / NValues **********
 814 ( 1): TEST NValues[a]
 815 ( 2): TEST N[a] = 3;
 816 ( 3): TEST NValues[a]
 817 ( 4): TEST NValues[b] := {N[b, MachinePrecision] :> 2}
 818 ( 5): TEST N[b]
 819 ( 6): TEST NValues[c] := {N[c] :> 3}
 820 ( 7): TEST N[c]
 821 ( 8): TEST NValues[d] = {foo -> bar};
 822 ( 9): TEST NValues[d]
 823 (10): TEST N[d]
********** Assignment / OwnValues **********
 824 ( 1): TEST x = 3;
 825 ( 2): TEST x = 2;
 826 ( 3): TEST OwnValues[x]
 827 ( 4): TEST x := y
 828 ( 5): TEST OwnValues[x]
 829 ( 6): TEST y = 5;
 830 ( 7): TEST OwnValues[x]
 831 ( 8): TEST Hold[x] /. OwnValues[x]
 832 ( 9): TEST Hold[x] /. OwnValues[x] // ReleaseHold
********** Assignment / PreDecrement **********
 833 ( 1): TEST a = 2;
 834 ( 2): TEST --a
 835 ( 3): TEST a
********** Assignment / PreIncrement **********
 836 ( 1): TEST a = 2;
 837 ( 2): TEST ++a
 838 ( 3): TEST a
********** Assignment / Set **********
 839 ( 1): TEST a = 3
 840 ( 2): TEST a
 841 ( 3): TEST OwnValues[a]
 842 ( 4): TEST {a, b, c} = {10, 2, 3}
 843 ( 5): TEST {a, b, {c, {d}}} = {1, 2, {{c1, c2}, {a}}}
 844 ( 6): TEST d
 845 ( 7): TEST a
 846 ( 8): TEST x = a
 847 ( 9): TEST a = 2
 848 (10): TEST x
 849 (11): TEST a = b = c = 2;
 850 (12): TEST a == b == c == 2
 851 (13): TEST A = {{1, 2}, {3, 4}};
 852 (14): TEST A[[1, 2]] = 5
 853 (15): TEST A
 854 (16): TEST A[[;;, 2]] = {6, 7}
 855 (17): TEST A
 856 (18): TEST B = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
 857 (19): TEST B[[1;;2, 2;;-1]] = {{t, u}, {y, z}};
 858 (20): TEST B
 859 (21): TEST x = Infinity;
********** Assignment / SetDelayed **********
 860 ( 1): TEST Attributes[SetDelayed]
 861 ( 2): TEST a = 1
 862 ( 3): TEST x := a
 863 ( 4): TEST x
 864 ( 5): TEST a = 2
 865 ( 6): TEST x
 866 ( 7): TEST f[x_] := p[x] /; x>0
 867 ( 8): TEST f[3]
 868 ( 9): TEST f[-3]
********** Assignment / SubValues **********
 869 ( 1): TEST f[1][x_] := x
 870 ( 2): TEST f[2][x_] := x ^ 2
 871 ( 3): TEST SubValues[f]
 872 ( 4): TEST Definition[f]
********** Assignment / SubtractFrom **********
 873 ( 1): TEST a = 10;
 874 ( 2): TEST a -= 2
 875 ( 3): TEST a
********** Assignment / TagSet **********
 876 ( 1): TEST x /: f[x] = 2
 877 ( 2): TEST f[x]
 878 ( 3): TEST DownValues[f]
 879 ( 4): TEST UpValues[x]
 880 ( 5): TEST x /: f[g[x]] = 3;
 881 ( 6): TEST g /: f[g[x]] = 3;
 882 ( 7): TEST f[g[x]]
********** Assignment / TimesBy **********
 883 ( 1): TEST a = 10;
 884 ( 2): TEST a *= 2
 885 ( 3): TEST a
********** Assignment / Unset **********
 886 ( 1): TEST a = 2
 887 ( 2): TEST a =.
 888 ( 3): TEST a
 889 ( 4): TEST a =.
 890 ( 5): TEST b =.
 891 ( 6): TEST f[x_] =.
 892 ( 7): TEST f[x_] := x ^ 2
 893 ( 8): TEST f[3]
 894 ( 9): TEST f[x_] =.
 895 (10): TEST f[3]
 896 (11): TEST f[x_] = x; f[0] = 1;
 897 (12): TEST DownValues[f] =.
 898 (13): TEST f[2]
 899 (14): TEST a = b = 3;
 900 (15): TEST {a, {b}} =.
 901 (16): TEST x = 2;
 902 (17): TEST OwnValues[x] =.
 903 (18): TEST x
 904 (19): TEST f[a][b] = 3;
 905 (20): TEST SubValues[f] =.
 906 (21): TEST f[a][b]
 907 (22): TEST PrimeQ[p] ^= True
 908 (23): TEST PrimeQ[p]
 909 (24): TEST UpValues[p] =.
 910 (25): TEST PrimeQ[p]
 911 (26): TEST a + b ^= 5;
 912 (27): TEST a =.
 913 (28): TEST a + b
 914 (29): TEST {UpValues[a], UpValues[b]} =.
 915 (30): TEST a + b
 916 (31): TEST Unset[Messages[1]]
********** Assignment / UpSet **********
 917 ( 1): TEST a[b] ^= 3;
 918 ( 2): TEST DownValues[a]
 919 ( 3): TEST UpValues[b]
 920 ( 4): TEST a ^= 3
 921 ( 5): TEST Format[r] ^= "custom";
 922 ( 6): TEST r
 923 ( 7): TEST UpValues[r]
 924 ( 8): TEST f[g, a + b, h] ^= 2
 925 ( 9): TEST UpValues[h]
********** Assignment / UpSetDelayed **********
 926 ( 1): TEST a[b] ^:= x
 927 ( 2): TEST x = 2;
 928 ( 3): TEST a[b]
 929 ( 4): TEST UpValues[b]
 930 ( 5): TEST f[g, a + b, h] ^:= 2
 931 ( 6): TEST f[a+b] ^:= 2
********** Assignment / UpValues **********
 932 ( 1): TEST a + b ^= 2
 933 ( 2): TEST UpValues[a]
 934 ( 3): TEST UpValues[b]
 935 ( 4): TEST UpValues[pi] := {Sin[pi] :> 0}
 936 ( 5): TEST Sin[pi]
********** Attributes / Attributes **********
 937 ( 1): TEST Attributes[Plus]
 938 ( 2): TEST Attributes[a + b + c]
 939 ( 3): TEST Attributes[f] = {Flat, Orderless}
 940 ( 4): TEST f[b, f[a, c]]
 941 ( 5): TEST Attributes[f] := {a + b}
 942 ( 6): TEST Attributes[f] = Symbol["Listable"]
 943 ( 7): TEST Attributes[f]
********** Attributes / ClearAttributes **********
 944 ( 1): TEST SetAttributes[f, Flat]
 945 ( 2): TEST Attributes[f]
 946 ( 3): TEST ClearAttributes[f, Flat]
 947 ( 4): TEST Attributes[f]
 948 ( 5): TEST ClearAttributes[{f}, {Flat}]
 949 ( 6): TEST Attributes[f]
********** Attributes / Constant **********
 950 ( 1): TEST Attributes[E]
 951 ( 2): TEST Solve[x + E == 0, E]
********** Attributes / Flat **********
 952 ( 1): TEST SetAttributes[f, Flat]
 953 ( 2): TEST f[a, f[b, c]]
 954 ( 3): TEST f[a, b, c] /. f[a, b] -> d
 955 ( 4): TEST SetAttributes[{u, v}, Flat]
 956 ( 5): TEST u[x_] := {x}
 957 ( 6): TEST u[]
 958 ( 7): TEST u[a]
 959 ( 8): TEST u[a, b]
 960 ( 9): TEST u[a, b, c]
 961 (10): TEST v[x_] := x
 962 (11): TEST v[]
 963 (12): TEST v[a]
 964 (13): TEST v[a, b] (* in Mathematica: Iteration limit of 4096 exceeded. *)
 965 (14): TEST v[a, b, c] (* in Mathematica: Iteration limit of 4096 exceeded. *)
********** Attributes / HoldAll **********
 966 ( 1): TEST Attributes[Function]
********** Attributes / HoldAllComplete **********
 967 ( 1): TEST SetAttributes[f, HoldAllComplete]
 968 ( 2): TEST f[a] ^= 3;
 969 ( 3): TEST f[a]
 970 ( 4): TEST f[Sequence[a, b]]
********** Attributes / HoldFirst **********
 971 ( 1): TEST Attributes[Set]
********** Attributes / HoldRest **********
 972 ( 1): TEST Attributes[If]
********** Attributes / Listable **********
 973 ( 1): TEST SetAttributes[f, Listable]
 974 ( 2): TEST f[{1, 2, 3}, {4, 5, 6}]
 975 ( 3): TEST f[{1, 2, 3}, 4]
 976 ( 4): TEST {{1, 2}, {3, 4}} + {5, 6}
********** Attributes / Locked **********
 977 ( 1): TEST Attributes[lock] = {Flat, Locked};
 978 ( 2): TEST SetAttributes[lock, {}]
 979 ( 3): TEST ClearAttributes[lock, Flat]
 980 ( 4): TEST Attributes[lock] = {}
 981 ( 5): TEST Attributes[lock]
 982 ( 6): TEST lock = 3
********** Attributes / NHoldAll **********
 983 ( 1): TEST N[f[2, 3]]
 984 ( 2): TEST SetAttributes[f, NHoldAll]
 985 ( 3): TEST N[f[2, 3]]
********** Attributes / OneIdentity **********
 986 ( 1): TEST SetAttributes[f, OneIdentity]
 987 ( 2): TEST a /. f[args___] -> {args}
 988 ( 3): TEST f[a]
********** Attributes / Orderless **********
 989 ( 1): TEST SetAttributes[f, Orderless]
 990 ( 2): TEST f[c, a, b, a + b, 3, 1.0]
 991 ( 3): TEST f[a, b] == f[b, a]
 992 ( 4): TEST SetAttributes[f, Flat]
 993 ( 5): TEST f[a, b, c] /. f[a, c] -> d
********** Attributes / Protect **********
 994 ( 1): TEST A = {1, 2, 3};
 995 ( 2): TEST Protect[A]
 996 ( 3): TEST A[[2]] = 4;
 997 ( 4): TEST A
********** Attributes / Protected **********
 998 ( 1): TEST Attributes[p] = {Protected};
 999 ( 2): TEST p = 2;
1000 ( 3): TEST f[p] ^= 3;
1001 ( 4): TEST Format[p] = "text";
1002 ( 5): TEST SetAttributes[p, Flat]
1003 ( 6): TEST Attributes[p]
1004 ( 7): TEST Attributes[p] = {};
1005 ( 8): TEST p = 2
1006 ( 9): TEST Protect[p]
1007 (10): TEST Attributes[p]
1008 (11): TEST Unprotect[p]
1009 (12): TEST SetAttributes[p, {Protected, Locked}]
1010 (13): TEST p = 2
1011 (14): TEST Unprotect[p]
********** Attributes / ReadProtected **********
1012 ( 1): TEST ClearAll[p]
1013 ( 2): TEST p = 3;
1014 ( 3): TEST Definition[p]
1015 ( 4): TEST SetAttributes[p, ReadProtected]
1016 ( 5): TEST Definition[p]
********** Attributes / SequenceHold **********
1017 ( 1): TEST f[Sequence[a, b]]
1018 ( 2): TEST SetAttributes[f, SequenceHold]
1019 ( 3): TEST f[Sequence[a, b]]
1020 ( 4): TEST s = Sequence[a, b];
1021 ( 5): TEST s
1022 ( 6): TEST Plus[s]
********** Attributes / SetAttributes **********
1023 ( 1): TEST SetAttributes[f, Flat]
1024 ( 2): TEST Attributes[f]
1025 ( 3): TEST SetAttributes[{f, g}, {Flat, Orderless}]
1026 ( 4): TEST Attributes[g]
********** Calculus / D **********
1027 ( 1): TEST D[x^3 + x^2, x]
1028 ( 2): TEST D[x^3 + x^2, {x, 2}]
1029 ( 3): TEST D[Sin[Cos[x]], x]
1030 ( 4): TEST D[Sin[x], {x, 2}]
1031 ( 5): TEST D[Cos[t], {t, 2}]
1032 ( 6): TEST D[y, x]
1033 ( 7): TEST D[x, x]
1034 ( 8): TEST D[x + y, x]
1035 ( 9): TEST D[f[x], x]
1036 (10): TEST D[f[x, x], x]
1037 (11): TEST D[f[x, x], x] // InputForm
1038 (12): TEST D[f[2x+1, 2y, x+y], x]
1039 (13): TEST D[f[x^2, x, 2y], {x,2}, y] // Expand
1040 (14): TEST D[x ^ 3 * Cos[y], {{x, y}}]
1041 (15): TEST D[Sin[x] * Cos[y], {{x,y}, 2}]
1042 (16): TEST D[2/3 Cos[x] - 1/3 x Cos[x] Sin[x] ^ 2,x]//Expand
1043 (17): TEST D[f[#1], {#1,2}]
1044 (18): TEST D[(#1&)[t],{t,4}]
1045 (19): TEST Attributes[f] ={HoldAll}; Apart[f''[x + x]]
1046 (20): TEST Attributes[f] = {}; Apart[f''[x + x]]
1047 (21): TEST D[{#^2}, #]
********** Calculus / Derivative **********
1048 ( 1): TEST Derivative[1][Sin]
1049 ( 2): TEST Derivative[3][Sin]
1050 ( 3): TEST Derivative[2][# ^ 3&]
1051 ( 4): TEST Sin'[x]
1052 ( 5): TEST (# ^ 4&)''
1053 ( 6): TEST f'[x] // InputForm
1054 ( 7): TEST Derivative[1][#2 Sin[#1]+Cos[#2]&]
1055 ( 8): TEST Derivative[1,2][#2^3 Sin[#1]+Cos[#2]&]
1056 ( 9): TEST Derivative[1,2,1][#2^3 Sin[#1]+Cos[#2]&]
1057 (10): TEST Derivative[0,0,0][a+b+c]
1058 (11): TEST f[x_] := x ^ 2
1059 (12): TEST f'[x]
1060 (13): TEST Derivative[2, 1][h]
1061 (14): TEST Derivative[2, 0, 1, 0][h[g]]
1062 (15): TEST Hold[f''] // FullForm
1063 (16): TEST Hold[f ' '] // FullForm
1064 (17): TEST Hold[f '' ''] // FullForm
1065 (18): TEST Hold[Derivative[x][4] '] // FullForm
********** Calculus / DiscreteLimit **********
1066 ( 1): TEST DiscreteLimit[n/(n + 1), n -> Infinity]
1067 ( 2): TEST DiscreteLimit[f[n], n -> Infinity]
********** Calculus / FindRoot **********
1068 ( 1): TEST FindRoot[Cos[x], {x, 1}]
1069 ( 2): TEST FindRoot[Sin[x] + Exp[x],{x, 0}]
1070 ( 3): TEST FindRoot[Sin[x] + Exp[x] == Pi,{x, 0}]
1071 ( 4): TEST x = 3;
1072 ( 5): TEST FindRoot[Tan[x] + Sin[x] == Pi, {x, 1}]
1073 ( 6): TEST Clear[x]
1074 ( 7): TEST FindRoot[x^2 + x + 1, {x, 1}]
1075 ( 8): TEST FindRoot[x ^ 2 + x + 1, {x, -I}]
1076 ( 9): TEST FindRoot[f[x] == 0, {x, 0}]
1077 (10): TEST FindRoot[Sin[x] == x, {x, 0}]
1078 (11): TEST FindRoot[2.5==x,{x,0}]
********** Calculus / Integers **********
1079 ( 1): TEST Solve[-4 - 4 x + x^4 + x^5 == 0, x, Integers]
1080 ( 2): TEST Solve[x^4 == 4, x, Integers]
********** Calculus / Integrate **********
1081 ( 1): TEST Integrate[6 x ^ 2 + 3 x ^ 2 - 4 x + 10, x]
1082 ( 2): TEST Integrate[Sin[x] ^ 5, x]
1083 ( 3): TEST Integrate[x ^ 2 + x, {x, 1, 3}]
1084 ( 4): TEST Integrate[Sin[x], {x, 0, Pi/2}]
1085 ( 5): TEST Integrate[1 / (1 - 4 x + x^2), x]
1086 ( 6): TEST Integrate[4 Sin[x] Cos[x], x]
1087 ( 7): TEST Integrate[-Infinity, {x, 0, Infinity}]
1088 ( 8): TEST Integrate[f[x], {x, a, b}] // TeXForm
----------------------------------------------------------------------
Test failed: Integrate in Reference of Built-in Symbols / Calculus
Integrate[f[x], {x, a, b}] // TeXForm
Result: \int_a^bf\left[x\right]\text{$\backslash$[InvisibleTimes]}x
Wanted: \int_a^bf\left[x\right] \, dx

1089 ( 9): TEST DownValues[Integrate]
1090 (10): TEST Definition[Integrate]
1091 (11): TEST Integrate[Hold[x + x], {x, a, b}]
1092 (12): TEST Integrate[sin[x], x]
1093 (13): TEST Integrate[x ^ 3.5 + x, x]
1094 (14): TEST Integrate[Abs[Sin[phi]], {phi, 0, 2Pi}] // N
1095 (15): TEST % // Precision
1096 (16): TEST Integrate[1/(x^5+1), x]
1097 (17): TEST Integrate[ArcTan(x), x]
1098 (18): TEST Integrate[E[x], x]
1099 (19): TEST Integrate[Exp[-(x/2)^2],{x,-Infinity,+Infinity}]
1100 (20): TEST Integrate[Exp[-1/(x^2)], x]
1101 (21): TEST Integrate[ArcSin[x / 3], x]
1102 (22): TEST Integrate[f'[x], {x, a, b}]
********** Calculus / Limit **********
1103 ( 1): TEST Limit[x, x->2]
1104 ( 2): TEST Limit[Sin[x] / x, x->0]
1105 ( 3): TEST Limit[1/x, x->0, Direction->-1]
1106 ( 4): TEST Limit[1/x, x->0, Direction->1]
1107 ( 5): TEST Limit[x, x -> x0, Direction -> x]
********** Calculus / Reals **********
1108 ( 1): TEST Solve[x^3 == 1, x, Reals]
********** Calculus / Root **********
1109 ( 1): TEST Root[#1 ^ 2 - 1&, 1]
1110 ( 2): TEST Root[#1 ^ 2 - 1&, 2]
1111 ( 3): TEST Root[#1 ^ 5 + 2 #1 + 1&, 2]
********** Calculus / Solve **********
1112 ( 1): TEST Solve[x ^ 2 - 3 x == 4, x]
1113 ( 2): TEST Solve[4 y - 8 == 0, y]
1114 ( 3): TEST sol = Solve[2 x^2 - 10 x - 12 == 0, x]
1115 ( 4): TEST x /. sol
1116 ( 5): TEST Solve[x + 1 == x, x]
1117 ( 6): TEST Solve[x ^ 2 == x ^ 2, x]
1118 ( 7): TEST Solve[x / (x ^ 2 + 1) == 1, x]
1119 ( 8): TEST Solve[(x^2 + 3 x + 2)/(4 x - 2) == 0, x]
1120 ( 9): TEST Solve[Cos[x] == 0, x]
1121 (10): TEST Solve[f[x + y] == 3, f[x + y]]
1122 (11): TEST Solve[a + b == 2, a + b]
1123 (12): TEST x = 3;
1124 (13): TEST Solve[x == 2, x]
1125 (14): TEST Clear[x]
1126 (15): TEST Solve[a < b, a]
1127 (16): TEST eqs = {3 x ^ 2 - 3 y == 0, 3 y ^ 2 - 3 x == 0};
1128 (17): TEST sol = Solve[eqs, {x, y}] // Simplify
1129 (18): TEST eqs /. sol // Simplify
1130 (19): TEST Solve[x^2 == 1 && z^2 == -1, {x, y, z}]
1131 (20): TEST Solve[x^2 == -1, x, Reals]
1132 (21): TEST Solve[x^2 == 1, x, Reals]
1133 (22): TEST Solve[x^2 == -1, x, Complexes]
1134 (23): TEST Solve[4 - 4 * x^2 - x^4 + x^6 == 0, x, Integers]
1135 (24): TEST Solve[x^2 +1 == 0, x] // FullForm
1136 (25): TEST Solve[x^5==x,x]
1137 (26): TEST Solve[g[x] == 0, x]
1138 (27): TEST Solve[g[x] + h[x] == 0, x]
1139 (28): TEST Solve[Sin(x) == 1, x]
1140 (29): TEST Solve[E == 1, E]
1141 (30): TEST Solve[False, Pi]
1142 (31): TEST Solve[{(7+x)*ma == 167, (5+x)*mb == 167, (7+5)*(ma+mb) == 334}, {ma, mb, x}]
1143 (32): TEST Solve[{(7+x)*ma == 167, (5+x)*mb == 167, (7+5)*(ma+mb) == 334}, {x, ma, mb}]
1144 (33): TEST Solve[x + 1 == 2, x]
********** Combinatorial Functions / Binomial **********
1145 ( 1): TEST Binomial[5, 3]
1146 ( 2): TEST Binomial[10.5,3.2]
1147 ( 3): TEST Binomial[10, -2]
1148 ( 4): TEST Binomial[-10.5, -3.5]
1149 ( 5): TEST Binomial[-10, -3.5]
********** Combinatorial Functions / DiceDissimilarity **********
1150 ( 1): TEST DiceDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Combinatorial Functions / Fibonacci **********
1151 ( 1): TEST Fibonacci[0]
1152 ( 2): TEST Fibonacci[1]
1153 ( 3): TEST Fibonacci[10]
1154 ( 4): TEST Fibonacci[200]
********** Combinatorial Functions / JaccardDissimilarity **********
1155 ( 1): TEST JaccardDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Combinatorial Functions / MatchingDissimilarity **********
1156 ( 1): TEST MatchingDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Combinatorial Functions / Multinomial **********
1157 ( 1): TEST Multinomial[2, 3, 4, 5]
1158 ( 2): TEST Multinomial[]
1159 ( 3): TEST Multinomial[a, b, c]
1160 ( 4): TEST Multinomial[2, 3]
********** Combinatorial Functions / RogersTanimotoDissimilarity **********
1161 ( 1): TEST RogersTanimotoDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Combinatorial Functions / RussellRaoDissimilarity **********
1162 ( 1): TEST RussellRaoDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Combinatorial Functions / SokalSneathDissimilarity **********
1163 ( 1): TEST SokalSneathDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Combinatorial Functions / StirlingS1 **********
1164 ( 1): TEST StirlingS1[50, 1]
********** Combinatorial Functions / StirlingS2 **********
1165 ( 1): TEST Table[StirlingS2[10, m], {m, 10}]
********** Combinatorial Functions / Subsets **********
1166 ( 1): TEST Subsets[{a, b, c}]
1167 ( 2): TEST Subsets[{a, b, c, d}, 2]
1168 ( 3): TEST Subsets[{a, b, c, d}, {2}]
1169 ( 4): TEST Subsets[{a, b, c, d, e}, {3}, 5]
1170 ( 5): TEST Subsets[{a, b, c, d, e}, {0, 5, 2}]
1171 ( 6): TEST Subsets[Range[5], All, {25}]
1172 ( 7): TEST Subsets[{a, b, c, d}, All, {15, 1, -2}]
1173 ( 8): TEST Subsets[{}]
1174 ( 9): TEST Subsets[]
1175 (10): TEST Subsets[{a, b, c}, 2.5]
1176 (11): TEST Subsets[{a, b, c}, -1]
1177 (12): TEST Subsets[{a, b, c}, {3, 4, 5, 6}]
1178 (13): TEST Subsets[{a, b, c}, {-1, 2}]
1179 (14): TEST Subsets[{a, b, c}, All]
1180 (15): TEST Subsets[{a, b, c}, Infinity]
1181 (16): TEST Subsets[{a, b, c}, ALL]
1182 (17): TEST Subsets[{a, b, c}, {a}]
1183 (18): TEST Subsets[{a, b, c}, {}]
1184 (19): TEST Subsets[{a, b}, 0]
1185 (20): TEST Subsets[{1, 2}, x]
1186 (21): TEST Subsets[x]
1187 (22): TEST Subsets[x, {1, 2}]
1188 (23): TEST Subsets[x, {1, 2, 3}, {1, 3}]
1189 (24): TEST Subsets[a + b + c]
1190 (25): TEST Subsets[f[a, b, c]]
1191 (26): TEST Subsets[a + b + c, {1, 3, 2}]
1192 (27): TEST Subsets[a* b * c, All, {6}]
1193 (28): TEST Subsets[{a, b, c}, {1, Infinity}]
1194 (29): TEST Subsets[{a, b, c}, {1, Infinity, 2}]
1195 (30): TEST Subsets[{a, b, c}, {3, Infinity, -1}]
********** Combinatorial Functions / YuleDissimilarity **********
1196 ( 1): TEST YuleDissimilarity[{1, 0, 1, 1, 0, 1, 1}, {0, 1, 1, 0, 0, 0, 1}]
********** Compilation / Compile **********
1197 ( 1): TEST cf = Compile[{x, y}, x + 2 y]
1198 ( 2): TEST cf[2.5, 4.3]
1199 ( 3): TEST cf = Compile[{{x, _Real}}, Sin[x]]
1200 ( 4): TEST cf[1.4]
1201 ( 5): TEST cf[1/2]
1202 ( 6): TEST cf[4]
1203 ( 7): TEST cf[x]
1204 ( 8): TEST cf = Compile[{{x, _Real}, {x, _Integer}}, Sin[x + y]]
1205 ( 9): TEST cf = Compile[{{x, _Real}, {y, _Integer}}, Sin[x + z]]
1206 (10): TEST cf = Compile[{{x, _Real}, {y, _Integer}}, Sin[x + y]]
1207 (11): TEST cf[1, 2]
1208 (12): TEST cf[x + y]
1209 (13): TEST cf = Compile[{{x, _Real}, {y, _Integer}}, If[x == 0.0 && y <= 0, 0.0, Sin[x ^ y] + 1 / Min[x, 0.5]] + 0.5]
1210 (14): TEST cf[3.5, 2]
1211 (15): TEST cf[0, -2]
1212 (16): TEST Compile[{{a, _Integer}, {b, _Integer}}, While[b != 0, {a, b} = {b, Mod[a, b]}]; a]       (* GCD of a, b *)
********** Compilation / CompiledFunction **********
1213 ( 1): TEST sqr = Compile[{x}, x x]
1214 ( 2): TEST Head[sqr]
1215 ( 3): TEST sqr[2]
********** Comparison / BooleanQ **********
1216 ( 1): TEST BooleanQ[True]
1217 ( 2): TEST BooleanQ[False]
1218 ( 3): TEST BooleanQ[a]
1219 ( 4): TEST BooleanQ[1 < 2]
1220 ( 5): TEST BooleanQ["string"]
1221 ( 6): TEST BooleanQ[Together[x/y + y/x]]
********** Comparison / Equal **********
1222 ( 1): TEST a==a
1223 ( 2): TEST a==b
1224 ( 3): TEST 1==1.
1225 ( 4): TEST {{1}, {2}} == {{1}, {2}}
1226 ( 5): TEST {1, 2} == {1, 2, 3}
1227 ( 6): TEST 0.739085133215160642 == 0.739085133215160641
1228 ( 7): TEST 0.73908513321516064200000000 == 0.73908513321516064100000000
1229 ( 8): TEST 0.1111111111111111 ==  0.1111111111111126
1230 ( 9): TEST 0.1111111111111111 ==  0.1111111111111127
1231 (10): TEST N[E, 100] == N[E, 150]
1232 (11): TEST E > 1
1233 (12): TEST Pi == 3.14
1234 (13): TEST Pi ^ E == E ^ Pi
1235 (14): TEST N[E, 3] == N[E]
1236 (15): TEST {1, 2, 3} < {1, 2, 3}
1237 (16): TEST E == N[E]
1238 (17): TEST {Equal[Equal[0, 0], True], Equal[0, 0] == True}
1239 (18): TEST {Mod[6, 2] == 0, Mod[6, 4] == 0, (Mod[6, 2] == 0) == (Mod[6, 4] == 0), (Mod[6, 2] == 0) != (Mod[6, 4] == 0)}
1240 (19): TEST a == a == a
1241 (20): TEST {Equal[], Equal[x], Equal[1]}
********** Comparison / Greater **********
1242 ( 1): TEST a > b > c //FullForm
1243 ( 2): TEST Greater[3, 2, 1]
********** Comparison / Inequality **********
1244 ( 1): TEST a < b <= c
1245 ( 2): TEST Inequality[a, Greater, b, LessEqual, c]
1246 ( 3): TEST 1 < 2 <= 3
1247 ( 4): TEST 1 < 2 > 0
1248 ( 5): TEST 1 < 2 < -1
********** Comparison / Less **********
1249 ( 1): TEST {Less[], Less[x], Less[1]}
********** Comparison / Max **********
1250 ( 1): TEST Max[4, -8, 1]
1251 ( 2): TEST Max[E - Pi, Pi, E + Pi, 2 E]
1252 ( 3): TEST Max[{1,2},3,{-3,3.5,-Infinity},{{1/2}}]
1253 ( 4): TEST Max[x, y]
1254 ( 5): TEST Max[5, x, -3, y, 40]
1255 ( 6): TEST Max[]
1256 ( 7): TEST Max[x]
********** Comparison / Min **********
1257 ( 1): TEST Min[4, -8, 1]
1258 ( 2): TEST Min[E - Pi, Pi, E + Pi, 2 E]
1259 ( 3): TEST Min[{1,2},3,{-3,3.5,-Infinity},{{1/2}}]
1260 ( 4): TEST Min[x, y]
1261 ( 5): TEST Min[5, x, -3, y, 40]
1262 ( 6): TEST Min[]
1263 ( 7): TEST Min[x]
********** Comparison / Negative **********
1264 ( 1): TEST Negative[0]
1265 ( 2): TEST Negative[-3]
1266 ( 3): TEST Negative[10/7]
1267 ( 4): TEST Negative[1+2I]
1268 ( 5): TEST Negative[a + b]
1269 ( 6): TEST Negative[-E]
1270 ( 7): TEST Negative[Sin[{11, 14}]]
********** Comparison / NonNegative **********
1271 ( 1): TEST {Positive[0], NonNegative[0]}
********** Comparison / NonPositive **********
1272 ( 1): TEST {Negative[0], NonPositive[0]}
********** Comparison / Positive **********
1273 ( 1): TEST Positive[1]
1274 ( 2): TEST Positive[0]
1275 ( 3): TEST Positive[1 + 2 I]
1276 ( 4): TEST Positive[Pi]
1277 ( 5): TEST Positive[x]
1278 ( 6): TEST Positive[Sin[{11, 14}]]
********** Comparison / SameQ **********
1279 ( 1): TEST a===a
1280 ( 2): TEST {1==1., 1===1.}
********** Comparison / TrueQ **********
1281 ( 1): TEST TrueQ[True]
1282 ( 2): TEST TrueQ[False]
1283 ( 3): TEST TrueQ[a]
********** Comparison / Unequal **********
1284 ( 1): TEST 1 != 1.
1285 ( 2): TEST {1} != {2}
1286 ( 3): TEST {1, 2} != {1, 2}
1287 ( 4): TEST {a} != {a}
1288 ( 5): TEST "a" != "b"
1289 ( 6): TEST "a" != "a"
1290 ( 7): TEST Pi != N[Pi]
1291 ( 8): TEST a_ != b_
1292 ( 9): TEST a != a != a
1293 (10): TEST "abc" != "def" != "abc"
1294 (11): TEST a != a != b
1295 (12): TEST a != b != a
1296 (13): TEST {Unequal[], Unequal[x], Unequal[1]}
********** Comparison / UnsameQ **********
1297 ( 1): TEST a=!=a
1298 ( 2): TEST 1=!=1.
********** Comparison / ValueQ **********
1299 ( 1): TEST ValueQ[x]
1300 ( 2): TEST x = 1;
1301 ( 3): TEST ValueQ[x]
1302 ( 4): TEST ValueQ[True]
********** Control Statements / Abort **********
1303 ( 1): TEST Print["a"]; Abort[]; Print["b"]
********** Control Statements / Break **********
1304 ( 1): TEST n = 0;
1305 ( 2): TEST While[True, If[n>10, Break[]]; n=n+1]
1306 ( 3): TEST n
********** Control Statements / CompoundExpression **********
1307 ( 1): TEST a; b; c; d
1308 ( 2): TEST a;
1309 ( 3): TEST FullForm[Hold[a ;]]
1310 ( 4): TEST FullForm[Hold[a ; b]]
1311 ( 5): TEST FullForm[Hold[a ; b ;]]
1312 ( 6): TEST FullForm[Hold[a ; b ; c]]
1313 ( 7): TEST FullForm[Hold[a ; ; c]]
1314 ( 8): TEST FullForm[Hold[a ; ;]]
1315 ( 9): TEST FullForm[Hold[; a]]
1316 (10): TEST FullForm[Hold[; a ;]]
1317 (11): TEST CompoundExpression[x, y, z]
1318 (12): TEST %
1319 (13): TEST CompoundExpression[x, y, Null]
1320 (14): TEST %
1321 (15): TEST CompoundExpression[CompoundExpression[x, y, Null], Null]
1322 (16): TEST %
1323 (17): TEST CompoundExpression[x, Null, Null]
1324 (18): TEST %
1325 (19): TEST CompoundExpression[]
1326 (20): TEST %
1327 (21): TEST z = Max[1, 1 + x]; x = 2; z
********** Control Statements / Continue **********
1328 ( 1): TEST For[i=1, i<=8, i=i+1, If[Mod[i,2] == 0, Continue[]]; Print[i]]
********** Control Statements / Do **********
1329 ( 1): TEST Do[Print[i], {i, 2, 4}]
1330 ( 2): TEST Do[Print[{i, j}], {i,1,2}, {j,3,5}]
1331 ( 3): TEST Do[If[i > 10, Break[], If[Mod[i, 2] == 0, Continue[]]; Print[i]], {i, 5, 20}]
1332 ( 4): TEST Do[Print["hi"],{1+1}]
********** Control Statements / FixedPoint **********
1333 ( 1): TEST FixedPoint[Cos, 1.0]
1334 ( 2): TEST FixedPoint[#+1 &, 1, 20]
1335 ( 3): TEST FixedPoint[f, x, 0]
1336 ( 4): TEST FixedPoint[f, x, -1]
1337 ( 5): TEST FixedPoint[Cos, 1.0, Infinity]
********** Control Statements / FixedPointList **********
1338 ( 1): TEST FixedPointList[Cos, 1.0, 4]
1339 ( 2): TEST newton[n_] := FixedPointList[.5(# + n/#) &, 1.];
1340 ( 3): TEST newton[9]
1341 ( 4): TEST collatz[1] := 1;
1342 ( 5): TEST collatz[x_ ? EvenQ] := x / 2;
1343 ( 6): TEST collatz[x_] := 3 x + 1;
1344 ( 7): TEST list = FixedPointList[collatz, 14]
1345 ( 8): TEST ListLinePlot[list]
1346 ( 9): TEST FixedPointList[f, x, 0]
1347 (10): TEST FixedPointList[f, x, -1]
1348 (11): TEST Last[FixedPointList[Cos, 1.0, Infinity]]
********** Control Statements / For **********
1349 ( 1): TEST n := 1
1350 ( 2): TEST For[i=1, i<=10, i=i+1, n = n * i]
1351 ( 3): TEST n
1352 ( 4): TEST n == 10!
1353 ( 5): TEST n := 1
1354 ( 6): TEST For[i=1, i<=10, i=i+1, If[i > 5, Return[i]]; n = n * i]
1355 ( 7): TEST n
********** Control Statements / If **********
1356 ( 1): TEST If[1<2, a, b]
1357 ( 2): TEST If[1<2, a]
1358 ( 3): TEST If[False, a] //FullForm
1359 ( 4): TEST If[a, (*then*) b, (*else*) c];
********** Control Statements / Interrupt **********
1360 ( 1): TEST Print["a"]; Interrupt[]; Print["b"]
********** Control Statements / Nest **********
1361 ( 1): TEST Nest[f, x, 3]
1362 ( 2): TEST Nest[(1+#) ^ 2 &, x, 2]
********** Control Statements / NestList **********
1363 ( 1): TEST NestList[f, x, 3]
1364 ( 2): TEST NestList[2 # &, 1, 8]
1365 ( 3): TEST vertices = {{0,0}, {1,0}, {.5, .5 Sqrt[3]}};
1366 ( 4): TEST points = NestList[.5(vertices[[ RandomInteger[{1,3}] ]] + #) &, {0.,0.}, 2000];
1367 ( 5): TEST Graphics[Point[points], ImageSize->Small]
********** Control Statements / NestWhile **********
1368 ( 1): TEST NestWhile[#/2&, 10000, IntegerQ]
********** Control Statements / Return **********
1369 ( 1): TEST f[x_] := (If[x < 0, Return[0]]; x)
1370 ( 2): TEST f[-1]
1371 ( 3): TEST Do[If[i > 3, Return[]]; Print[i], {i, 10}]
1372 ( 4): TEST g[x_] := (Do[If[x < 0, Return[0]], {i, {2, 1, 0, -1}}]; x)
1373 ( 5): TEST g[-1]
1374 ( 6): TEST h[x_] := (If[x < 0, Return[]]; x)
1375 ( 7): TEST h[1]
1376 ( 8): TEST h[-1]
1377 ( 9): TEST f[x_] := Return[x];
1378 (10): TEST g[y_] := Module[{}, z = f[y]; 2]
1379 (11): TEST g[1]
********** Control Statements / Switch **********
1380 ( 1): TEST Switch[2, 1, x, 2, y, 3, z]
1381 ( 2): TEST Switch[5, 1, x, 2, y]
1382 ( 3): TEST Switch[5, 1, x, 2, y, _, z]
1383 ( 4): TEST Switch[2, 1]
1384 ( 5): TEST a; Switch[b, b]
1385 ( 6): TEST z = Switch[b, b];
1386 ( 7): TEST z
********** Control Statements / Which **********
1387 ( 1): TEST n = 5;
1388 ( 2): TEST Which[n == 3, x, n == 5, y]
1389 ( 3): TEST f[x_] := Which[x < 0, -x, x == 0, 0, x > 0, x]
1390 ( 4): TEST f[-3]
1391 ( 5): TEST Which[False, a]
1392 ( 6): TEST Which[False, a, x, b, True, c]
1393 ( 7): TEST Which[a, b, c]
********** Control Statements / While **********
1394 ( 1): TEST {a, b} = {27, 6};
1395 ( 2): TEST While[b != 0, {a, b} = {b, Mod[a, b]}];
1396 ( 3): TEST a
1397 ( 4): TEST i = 1; While[True, If[i^2 > 100, Return[i + 1], i++]]
********** Date and Time / AbsoluteTime **********
1398 ( 1): TEST AbsoluteTime[]
1399 ( 2): TEST AbsoluteTime[{2000}]
1400 ( 3): TEST AbsoluteTime[{"01/02/03", {"Day", "Month", "YearShort"}}]
1401 ( 4): TEST AbsoluteTime["6 June 1991"]
1402 ( 5): TEST AbsoluteTime[{"6-6-91", {"Day", "Month", "YearShort"}}]
1403 ( 6): TEST AbsoluteTime[1000]
********** Date and Time / AbsoluteTiming **********
1404 ( 1): TEST AbsoluteTiming[50!]
1405 ( 2): TEST Attributes[AbsoluteTiming]
********** Date and Time / DateDifference **********
1406 ( 1): TEST DateDifference[{2042, 1, 4}, {2057, 1, 1}]
1407 ( 2): TEST DateDifference[{1936, 8, 14}, {2000, 12, 1}, "Year"]
1408 ( 3): TEST DateDifference[{2010, 6, 1}, {2015, 1, 1}, "Hour"]
1409 ( 4): TEST DateDifference[{2003, 8, 11}, {2003, 10, 19}, {"Week", "Day"}]
********** Date and Time / DateList **********
1410 ( 1): TEST DateList[0]
1411 ( 2): TEST DateList[3155673600]
1412 ( 3): TEST DateList[{2003, 5, 0.5, 0.1, 0.767}]
1413 ( 4): TEST DateList[{2012, 1, 300., 10}]
1414 ( 5): TEST DateList["31/10/1991"]
1415 ( 6): TEST DateList["1/10/1991"]
1416 ( 7): TEST DateList["2016-09-09"]
1417 ( 8): TEST DateList["7/8/9"]
1418 ( 9): TEST DateList[{"31/10/91", {"Day", "Month", "YearShort"}}]
1419 (10): TEST DateList[{"31 10/91", {"Day", " ", "Month", "/", "YearShort"}}]
1420 (11): TEST DateList[{"6/6/91", {"Day", "Month", "YearShort"}}]
1421 (12): TEST DateList[{"6/06/91", {"Day", "Month", "YearShort"}}]
1422 (13): TEST DateList[{"06/06/91", {"Day", "Month", "YearShort"}}]
1423 (14): TEST DateList[{"06/6/91", {"Day", "Month", "YearShort"}}]
1424 (15): TEST DateList[{"5/18", {"Month", "Day"}}]
1425 (16): TEST DateList[{"5/18", {"Month", "Day"}}][[1]] == DateList[][[1]]
1426 (17): TEST Quiet[DateList[abc]]
********** Date and Time / DatePlus **********
1427 ( 1): TEST DatePlus[{2010, 2, 5}, 73]
1428 ( 2): TEST DatePlus[{2010, 2, 5}, {{8, "Week"}, {1, "Day"}}]
********** Date and Time / DateString **********
1429 ( 1): TEST DateString[];
1430 ( 2): TEST DateString[{1991, 10, 31, 0, 0}, {"Day", " ", "MonthName", " ", "Year"}]
1431 ( 3): TEST DateString[{2007, 4, 15, 0}]
----------------------------------------------------------------------
Test failed: DateString in Reference of Built-in Symbols / Date and Time
DateString[{2007, 4, 15, 0}]
Result: Sun 15 Apr 2007 12:00:00 AM
Wanted: Sun 15 Apr 2007 00:00:00

1432 ( 4): TEST DateString[{1979, 3, 14}, {"DayName", "  ", "Month", "-", "YearShort"}]
1433 ( 5): TEST DateString[{1991, 6, 6.5}]
----------------------------------------------------------------------
Test failed: DateString in Reference of Built-in Symbols / Date and Time
DateString[{1991, 6, 6.5}]
Result: Thu 6 Jun 1991 12:00:00 PM
Wanted: Thu 6 Jun 1991 12:00:00

1434 ( 6): TEST DateString[{1979, 3, 14}, {"DayName", "  ", "MonthShort", "-", "YearShort"}]
1435 ( 7): TEST DateString[{1979, 3, 4}]
----------------------------------------------------------------------
Test failed: DateString in Reference of Built-in Symbols / Date and Time
DateString[{1979, 3, 4}]
Result: Sun 4 Mar 1979 12:00:00 AM
Wanted: Sun 4 Mar 1979 00:00:00

1436 ( 8): TEST DateString[{"DayName", "  ", "Month", "/", "YearShort"}]
1437 ( 9): TEST DateString["2000-12-1", "Year"]
1438 (10): TEST DateString[{"06/06/1991", {"Month", "Day", "Year"}}]
----------------------------------------------------------------------
Test failed: DateString in Reference of Built-in Symbols / Date and Time
DateString[{"06/06/1991", {"Month", "Day", "Year"}}]
Result: Thu 6 Jun 1991 12:00:00 AM
Wanted: Thu 6 Jun 1991 00:00:00

1439 (11): TEST DateString[{"06/06/1991", {"Month", "/", "Day", "/", "Year"}}]
----------------------------------------------------------------------
Test failed: DateString in Reference of Built-in Symbols / Date and Time
DateString[{"06/06/1991", {"Month", "/", "Day", "/", "Year"}}]
Result: Thu 6 Jun 1991 12:00:00 AM
Wanted: Thu 6 Jun 1991 00:00:00

1440 (12): TEST DateString[{"5/19"}]
********** Date and Time / $DateStringFormat **********
1441 ( 1): TEST $DateStringFormat
********** Date and Time / EasterSunday **********
1442 ( 1): TEST EasterSunday[2000]
1443 ( 2): TEST EasterSunday[2030]
********** Date and Time / Pause **********
1444 ( 1): TEST Pause[0.5]
********** Date and Time / SessionTime **********
1445 ( 1): TEST SessionTime[]
********** Date and Time / $SystemTimeZone **********
1446 ( 1): TEST $SystemTimeZone
********** Date and Time / TimeConstrained **********
1447 ( 1): TEST TimeConstrained[Integrate[Sin[x]^1000000,x],1]
1448 ( 2): TEST TimeConstrained[Integrate[Sin[x]^1000000,x], 1, Integrate[Cos[x],x]]
1449 ( 3): TEST s=TimeConstrained[Integrate[Sin[x] ^ 3, x], a]
1450 ( 4): TEST a=1; s
********** Date and Time / TimeRemaining **********
1451 ( 1): TEST TimeRemaining[]
********** Date and Time / TimeUsed **********
1453 ( 1): TEST TimeUsed[]
********** Date and Time / $TimeZone **********
1454 ( 1): TEST $TimeZone
********** Date and Time / Timing **********
1455 ( 1): TEST Timing[50!]
1456 ( 2): TEST Attributes[Timing]
********** Differential Equations / DSolve **********
1457 ( 1): TEST DSolve[y''[x] == 0, y[x], x]
1458 ( 2): TEST DSolve[y''[x] == y[x], y[x], x]
1459 ( 3): TEST DSolve[y''[x] == y[x], y, x]
1460 ( 4): TEST DSolve[D[f[x, y], x] / f[x, y] + 3 D[f[x, y], y] / f[x, y] == 2, f, {x, y}]
1461 ( 5): TEST DSolve[D[f[x, y], x] x + D[f[x, y], y] y == 2, f[x, y], {x, y}]
1462 ( 6): TEST DSolve[D[y[x, t], t] + 2 D[y[x, t], x] == 0, y[x, t], {x, t}]
1463 ( 7): TEST DSolve[f'[x] == f[x], f, x] // FullForm
1464 ( 8): TEST DSolve[f'[x] == f[x], f, x] /. {C[1] -> 1}
1465 ( 9): TEST DSolve[f'[x] == f[x], f, x] /. {C -> D}
1466 (10): TEST DSolve[f'[x] == f[x], f, x] /. {C[1] -> C[0]}
1467 (11): TEST DSolve[f[x] == 0, f, {}]
1468 (12): TEST DSolve[D[f[x, y], x] == D[f[x, y], y], f, {x, y}]
1469 (13): TEST DSolve[D[f[x, y], x] == D[f[x, y], y], f[x, y], {x, y}]
1470 (14): TEST DSolve[D[f[x, y], x] == D[f[x, y], y], f[x, y], {y, x}]
********** Evaluation / Evaluate **********
1471 ( 1): TEST SetAttributes[f, HoldAll]
1472 ( 2): TEST f[1 + 2]
1473 ( 3): TEST f[Evaluate[1 + 2]]
1474 ( 4): TEST Hold[Evaluate[1 + 2]]
1475 ( 5): TEST HoldComplete[Evaluate[1 + 2]]
1476 ( 6): TEST Evaluate[Sequence[1, 2]]
********** Evaluation / $HistoryLength **********
1477 ( 1): TEST $HistoryLength
1478 ( 2): TEST $HistoryLength = 1;
1479 ( 3): TEST 42
1480 ( 4): TEST %
1481 ( 5): TEST %%
1482 ( 6): TEST $HistoryLength = 0;
1483 ( 7): TEST 42
1484 ( 8): TEST %
********** Evaluation / Hold **********
1485 ( 1): TEST Attributes[Hold]
********** Evaluation / HoldComplete **********
1486 ( 1): TEST Attributes[HoldComplete]
********** Evaluation / HoldForm **********
1487 ( 1): TEST HoldForm[1 + 2 + 3]
1488 ( 2): TEST Attributes[HoldForm]
********** Evaluation / In **********
1489 ( 1): TEST x = 1
1490 ( 2): TEST x = x + 1
1491 ( 3): TEST Do[In[2], {3}]
1492 ( 4): TEST x
1493 ( 5): TEST In[-1]
1494 ( 6): TEST Definition[In]
********** Evaluation / $IterationLimit **********
1495 ( 1): TEST ClearAll[f]; f[x_] := f[x + 1];
1496 ( 2): TEST f[x]
1497 ( 3): TEST ClearAll[f];
1498 ( 4): TEST $IterationLimit = x;
1499 ( 5): TEST ClearAll[f];
1500 ( 6): TEST f[x_, 0] := x; f[x_, n_] := f[x + 1, n - 1];
1501 ( 7): TEST Block[{$IterationLimit = 20}, f[0, 100]]
1502 ( 8): TEST ClearAll[f];
1503 ( 9): TEST ClearAll[f];
1504 (10): TEST f[x_, 0] := x; f[x_, n_] := Module[{y = x + 1}, f[y, n - 1]];
1505 (11): TEST Block[{$IterationLimit = 20}, f[0, 100]]
1506 (12): TEST ClearAll[f];
********** Evaluation / $Line **********
1507 ( 1): TEST $Line
1508 ( 2): TEST $Line
1509 ( 3): TEST $Line = 12;
1510 ( 4): TEST 2 * 5
1511 ( 5): TEST Out[13]
1512 ( 6): TEST $Line = -1;
********** Evaluation / Out **********
1513 ( 1): TEST 42
1514 ( 2): TEST %
1515 ( 3): TEST 43;
1516 ( 4): TEST %
1517 ( 5): TEST 44
1518 ( 6): TEST %1
1519 ( 7): TEST %%
1520 ( 8): TEST Hold[Out[-1]]
1521 ( 9): TEST Hold[%4]
1522 (10): TEST Out[0]
1523 (11): TEST 10
1524 (12): TEST Out[-1] + 1
1525 (13): TEST Out[] + 1
********** Evaluation / $RecursionLimit **********
1526 ( 1): TEST a = a + a
1527 ( 2): TEST $RecursionLimit
1528 ( 3): TEST $RecursionLimit = x;
1529 ( 4): TEST $RecursionLimit = 512
1530 ( 5): TEST a = a + a
1531 ( 6): TEST $RecursionLimit = 20
1532 ( 7): TEST a = a + a
1533 ( 8): TEST $RecursionLimit = 200
1534 ( 9): TEST ClearAll[f];
1535 (10): TEST f[x_, 0] := x; f[x_, n_] := f[x + 1, n - 1];
1536 (11): TEST Block[{$RecursionLimit = 20}, f[0, 100]]
1537 (12): TEST ClearAll[f];
1538 (13): TEST ClearAll[f];
1539 (14): TEST f[x_, 0] := x; f[x_, n_] := Module[{y = x + 1}, f[y, n - 1]];
1540 (15): TEST Block[{$RecursionLimit = 20}, f[0, 100]]
1541 (16): TEST ClearAll[f];
********** Evaluation / ReleaseHold **********
1542 ( 1): TEST x = 3;
1543 ( 2): TEST Hold[x]
1544 ( 3): TEST ReleaseHold[Hold[x]]
1545 ( 4): TEST ReleaseHold[y]
********** Evaluation / Sequence **********
1546 ( 1): TEST f[x, Sequence[a, b], y]
1547 ( 2): TEST Attributes[Set]
1548 ( 3): TEST a = Sequence[b, c];
1549 ( 4): TEST a
1550 ( 5): TEST list = {1, 2, 3};
1551 ( 6): TEST f[Sequence @@ list]
1552 ( 7): TEST Hold[a, Sequence[b, c], d]
1553 ( 8): TEST Hold[{a, Sequence[b, c], d}]
********** Evaluation / Unevaluated **********
1554 ( 1): TEST Sqrt[Unevaluated[x]]
1555 ( 2): TEST Length[Unevaluated[1+2+3+4]]
1556 ( 3): TEST Attributes[Unevaluated]
1557 ( 4): TEST f[Unevaluated[x]]
1558 ( 5): TEST Attributes[f] = {Flat};
1559 ( 6): TEST f[a, Unevaluated[f[b, c]]]
1560 ( 7): TEST g[a, Sequence[Unevaluated[b], Unevaluated[c]]]
1561 ( 8): TEST g[Unevaluated[Sequence[a, b, c]]]
1562 ( 9): TEST Attributes[h] = Flat;
1563 (10): TEST h[items___] := Plus[items]
1564 (11): TEST h[1, Unevaluated[Sequence[Unevaluated[2], 3]], Sequence[4, Unevaluated[5]]]
********** Exponential, Trigonometric and Hyperbolic Functions / AnglePath **********
1565 ( 1): TEST AnglePath[{90 Degree, 90 Degree, 90 Degree, 90 Degree}]
1566 ( 2): TEST AnglePath[{{1, 1}, 90 Degree}, {{1, 90 Degree}, {2, 90 Degree}, {1, 90 Degree}, {2, 90 Degree}}]
1567 ( 3): TEST AnglePath[{a, b}]
1568 ( 4): TEST Precision[Part[AnglePath[{N[1/3, 100], N[2/3, 100]}], 2, 1]]
1569 ( 5): TEST Graphics[Line[AnglePath[Table[1.7, {50}]]]]
1570 ( 6): TEST Graphics[Line[AnglePath[RandomReal[{-1, 1}, {100}]]]]
********** Exponential, Trigonometric and Hyperbolic Functions / AngleVector **********
1571 ( 1): TEST AngleVector[90 Degree]
1572 ( 2): TEST AngleVector[{1, 10}, a]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcCos **********
1573 ( 1): TEST ArcCos[1]
1574 ( 2): TEST ArcCos[0]
1575 ( 3): TEST Integrate[ArcCos[x], {x, -1, 1}]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcCosh **********
1576 ( 1): TEST ArcCosh[0]
1577 ( 2): TEST ArcCosh[0.]
1578 ( 3): TEST ArcCosh[0.00000000000000000000000000000000000000]
1579 ( 4): TEST ArcCosh[1.4]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcCot **********
1580 ( 1): TEST ArcCot[0]
1581 ( 2): TEST ArcCot[1]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcCoth **********
1582 ( 1): TEST ArcCoth[0]
1583 ( 2): TEST ArcCoth[1]
1584 ( 3): TEST ArcCoth[0.0]
1585 ( 4): TEST ArcCoth[0.5]
1586 ( 5): TEST ArcCoth[0.000000000000000000000000000000000000000]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcCsc **********
1587 ( 1): TEST ArcCsc[1]
1588 ( 2): TEST ArcCsc[-1]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcCsch **********
1589 ( 1): TEST ArcCsch[0]
1590 ( 2): TEST ArcCsch[1.0]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcSec **********
1591 ( 1): TEST ArcSec[1]
1592 ( 2): TEST ArcSec[-1]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcSech **********
1593 ( 1): TEST ArcSech[0]
1594 ( 2): TEST ArcSech[1]
1595 ( 3): TEST ArcSech[0.5]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcSin **********
1596 ( 1): TEST ArcSin[0]
1597 ( 2): TEST ArcSin[1]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcSinh **********
1598 ( 1): TEST ArcSinh[0]
1599 ( 2): TEST ArcSinh[0.]
1600 ( 3): TEST ArcSinh[1.0]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcTan **********
1601 ( 1): TEST ArcTan[1]
1602 ( 2): TEST ArcTan[1.0]
1603 ( 3): TEST ArcTan[-1.0]
1604 ( 4): TEST ArcTan[1, 1]
1605 ( 5): TEST ArcTan[-1, 1]
1606 ( 6): TEST ArcTan[1, -1]
1607 ( 7): TEST ArcTan[-1, -1]
1608 ( 8): TEST ArcTan[1, 0]
1609 ( 9): TEST ArcTan[-1, 0]
1610 (10): TEST ArcTan[0, 1]
1611 (11): TEST ArcTan[0, -1]
********** Exponential, Trigonometric and Hyperbolic Functions / ArcTanh **********
1612 ( 1): TEST ArcTanh[0]
1613 ( 2): TEST ArcTanh[1]
1614 ( 3): TEST ArcTanh[0]
1615 ( 4): TEST ArcTanh[.5 + 2 I]
1616 ( 5): TEST ArcTanh[2 + I]
********** Exponential, Trigonometric and Hyperbolic Functions / Catalan **********
1617 ( 1): TEST Catalan // N
1618 ( 2): TEST N[Catalan, 20]
********** Exponential, Trigonometric and Hyperbolic Functions / Cos **********
1619 ( 1): TEST Cos[3 Pi]
1620 ( 2): TEST Cos[1.5 Pi]
********** Exponential, Trigonometric and Hyperbolic Functions / Cosh **********
1621 ( 1): TEST Cosh[0]
********** Exponential, Trigonometric and Hyperbolic Functions / Cot **********
1622 ( 1): TEST Cot[0]
1623 ( 2): TEST Cot[1.]
********** Exponential, Trigonometric and Hyperbolic Functions / Coth **********
1624 ( 1): TEST Coth[0]
********** Exponential, Trigonometric and Hyperbolic Functions / Csc **********
1625 ( 1): TEST Csc[0]
1626 ( 2): TEST Csc[1] (* Csc[1] in Mathematica *)
1627 ( 3): TEST Csc[1.]
********** Exponential, Trigonometric and Hyperbolic Functions / Csch **********
1628 ( 1): TEST Csch[0]
********** Exponential, Trigonometric and Hyperbolic Functions / Degree **********
1629 ( 1): TEST Cos[60 Degree]
1630 ( 2): TEST Degree == Pi / 180
1631 ( 3): TEST Cos[Degree[x]]
1632 ( 4): TEST \[Degree] == ° == Degree
1633 ( 5): TEST N[Degree]
1634 ( 6): TEST N[Degree, 30]
********** Exponential, Trigonometric and Hyperbolic Functions / E **********
1635 ( 1): TEST N[E]
1636 ( 2): TEST N[E, 50]
1637 ( 3): TEST Attributes[E]
1638 ( 4): TEST 5. E
********** Exponential, Trigonometric and Hyperbolic Functions / EulerGamma **********
1639 ( 1): TEST EulerGamma // N
1640 ( 2): TEST N[EulerGamma, 40]
********** Exponential, Trigonometric and Hyperbolic Functions / Exp **********
1641 ( 1): TEST Exp[1]
1642 ( 2): TEST Exp[10.0]
1643 ( 3): TEST Exp[x] //FullForm
1644 ( 4): TEST Plot[Exp[x], {x, 0, 3}]
1645 ( 5): TEST Exp[1.*^20]
********** Exponential, Trigonometric and Hyperbolic Functions / GoldenRatio **********
1646 ( 1): TEST GoldenRatio // N
1647 ( 2): TEST N[GoldenRatio, 40]
********** Exponential, Trigonometric and Hyperbolic Functions / Haversine **********
1648 ( 1): TEST Haversine[1.5]
1649 ( 2): TEST Haversine[0.5 + 2I]
********** Exponential, Trigonometric and Hyperbolic Functions / InverseHaversine **********
1650 ( 1): TEST InverseHaversine[0.5]
1651 ( 2): TEST InverseHaversine[1 + 2.5 I]
********** Exponential, Trigonometric and Hyperbolic Functions / Log **********
1652 ( 1): TEST Log[{0, 1, E, E * E, E ^ 3, E ^ x}]
1653 ( 2): TEST Log[0.]
1654 ( 3): TEST Plot[Log[x], {x, 0, 5}]
1655 ( 4): TEST Log[1000] / Log[10] // Simplify
1656 ( 5): TEST Log[1.4]
1657 ( 6): TEST Log[Exp[1.4]]
1658 ( 7): TEST Log[-1.4]
1659 ( 8): TEST N[Log[10], 30]
********** Exponential, Trigonometric and Hyperbolic Functions / Log10 **********
1660 ( 1): TEST Log10[1000]
1661 ( 2): TEST Log10[{2., 5.}]
1662 ( 3): TEST Log10[E ^ 3]
********** Exponential, Trigonometric and Hyperbolic Functions / Log2 **********
1663 ( 1): TEST Log2[4 ^ 8]
1664 ( 2): TEST Log2[5.6]
1665 ( 3): TEST Log2[E ^ 2]
********** Exponential, Trigonometric and Hyperbolic Functions / LogisticSigmoid **********
1666 ( 1): TEST LogisticSigmoid[0.5]
1667 ( 2): TEST LogisticSigmoid[0.5 + 2.3 I]
1668 ( 3): TEST LogisticSigmoid[{-0.2, 0.1, 0.3}]
1669 ( 4): TEST LogisticSigmoid[I Pi]
********** Exponential, Trigonometric and Hyperbolic Functions / Pi **********
1670 ( 1): TEST N[Pi]
1671 ( 2): TEST N[Pi, 50]
1672 ( 3): TEST Attributes[Pi]
********** Exponential, Trigonometric and Hyperbolic Functions / Sec **********
1673 ( 1): TEST Sec[0]
1674 ( 2): TEST Sec[1] (* Sec[1] in Mathematica *)
1675 ( 3): TEST Sec[1.]
********** Exponential, Trigonometric and Hyperbolic Functions / Sech **********
1676 ( 1): TEST Sech[0]
********** Exponential, Trigonometric and Hyperbolic Functions / Sin **********
1677 ( 1): TEST Sin[0]
1678 ( 2): TEST Sin[0.5]
1679 ( 3): TEST Sin[3 Pi]
1680 ( 4): TEST Sin[1.0 + I]
1681 ( 5): TEST Plot[Sin[x], {x, -Pi, Pi}]
1682 ( 6): TEST N[Sin[1], 40]
********** Exponential, Trigonometric and Hyperbolic Functions / Sinh **********
1683 ( 1): TEST Sinh[0]
********** Exponential, Trigonometric and Hyperbolic Functions / Tan **********
1684 ( 1): TEST Tan[0]
1685 ( 2): TEST Tan[Pi / 2]
1686 ( 3): TEST Tan[0.5 Pi]
********** Exponential, Trigonometric and Hyperbolic Functions / Tanh **********
1687 ( 1): TEST Tanh[0]
********** Functional Programming / Composition **********
1688 ( 1): TEST Composition[f, g][x]
1689 ( 2): TEST Composition[f, g, h][x, y, z]
1690 ( 3): TEST Composition[]
1691 ( 4): TEST Composition[][x]
1692 ( 5): TEST Attributes[Composition]
1693 ( 6): TEST Composition[f, Composition[g, h]]
********** Functional Programming / Function **********
1694 ( 1): TEST f := # ^ 2 &
1698 ( 5): TEST Function[{x, y}, x * y][2, 3]
1699 ( 6): TEST Function[{x}, Function[{y}, f[x, y]]][y]
1700 ( 7): TEST Function[{y}, f[x, y]] /. x->y
1701 ( 8): TEST Function[y, Function[x, y^x]][x][y]
1702 ( 9): TEST Function[x, Function[y, x^y]][x][y]
1703 (10): TEST g[#] & [h[#]] & [5]
1704 (11): TEST g[x_,y_] := x+y
1705 (12): TEST g[Sequence@@Slot/@Range[2]]&[1,2]
1706 (13): TEST Evaluate[g[Sequence@@Slot/@Range[2]]]&[1,2]
********** Functional Programming / Slot **********
1710 ( 2): TEST {#1, #2, #3}&[1, 2, 3, 4, 5]
1711 ( 3): TEST If[#1<=1, 1, #1 #0[#1-1]]& [10]
1712 ( 4): TEST # // InputForm
1713 ( 5): TEST #0 // InputForm
********** Functional Programming / SlotSequence **********
1714 ( 1): TEST Plus[##]& [1, 2, 3]
1715 ( 2): TEST Plus[##2]& [1, 2, 3]
1716 ( 3): TEST FullForm[##]
1717 ( 4): TEST ## // InputForm
********** Drawing Graphics / AbsoluteThickness **********
1718 ( 1): TEST Graphics[Table[{AbsoluteThickness[t], Line[{{20 t, 10}, {20 t, 80}}], Text[ToString[t]<>"pt", {20 t, 0}]}, {t, 0, 10}]]
********** Drawing Graphics / Arrow **********
1719 ( 1): TEST Graphics[Arrow[{{0,0}, {1,1}}]]
1720 ( 2): TEST Graphics[{Circle[], Arrow[{{2, 1}, {0, 0}}, 1]}]
1721 ( 3): TEST Table[Graphics[{Circle[], Arrow[Table[{Cos[phi],Sin[phi]},{phi,0,2*Pi,Pi/2}],{d, d}]}],{d,0,2,0.5}]
********** Drawing Graphics / Arrowheads **********
1722 ( 1): TEST Graphics[{Circle[],Arrowheads[{-0.04, 0.04}], Arrow[{{0, 0}, {2, 2}}, {1,1}]}]
1723 ( 2): TEST Graphics[{Circle[], Arrowheads[{{0.04, 1, Graphics[{Red, Disk[]}]}}], Arrow[{{0, 0}, {Cos[Pi/3],Sin[Pi/3]}}]}]
1724 ( 3): TEST Graphics[{Arrowheads[Table[{0.04, i/10, Graphics[Disk[]]},{i,1,10}]], Arrow[{{0, 0}, {6, 5}, {1, -3}, {-2, 2}}]}]
********** Drawing Graphics / Automatic **********
1725 ( 1): TEST Cases[Options[Plot], HoldPattern[_ :> Automatic]]
********** Drawing Graphics / BezierCurve **********
1726 ( 1): TEST Graphics[BezierCurve[{{0, 0},{1, 1},{2, -1},{3, 0}}]]
1727 ( 2): TEST Module[{p={{0, 0},{1, 1},{2, -1},{4, 0}}}, Graphics[{BezierCurve[p], Red, Point[Table[BezierFunction[p][x], {x, 0, 1, 0.1}]]}]]
********** Drawing Graphics / Black **********
1728 ( 1): TEST Graphics[{EdgeForm[Black], Black, Disk[]}, ImageSize->Small]
1729 ( 2): TEST Black // ToBoxes
1730 ( 3): TEST Black
********** Drawing Graphics / Blend **********
1731 ( 1): TEST Blend[{Red, Blue}]
1732 ( 2): TEST Blend[{Red, Blue}, 0.3]
1733 ( 3): TEST Blend[{Red, Blue, Green}, 0.75]
1734 ( 4): TEST Graphics[Table[{Blend[{Red, Green, Blue}, x], Rectangle[{10 x, 0}]}, {x, 0, 1, 1/10}]]
1735 ( 5): TEST Graphics[Table[{Blend[{RGBColor[1, 0.5, 0, 0.5], RGBColor[0, 0, 1, 0.5]}, x], Disk[{5x, 0}]}, {x, 0, 1, 1/10}]]
1736 ( 6): TEST Blend[{Red, Green, Blue}, {1, 0.5}]
********** Drawing Graphics / Blue **********
1737 ( 1): TEST Graphics[{EdgeForm[Black], Blue, Disk[]}, ImageSize->Small]
1738 ( 2): TEST Blue // ToBoxes
1739 ( 3): TEST Blue
********** Drawing Graphics / CMYKColor **********
1740 ( 1): TEST Graphics[MapIndexed[{CMYKColor @@ #1, Disk[2*#2 ~Join~ {0}]} &, IdentityMatrix[4]], ImageSize->Small]
********** Drawing Graphics / Circle **********
1741 ( 1): TEST Graphics[{Red, Circle[{0, 0}, {2, 1}]}]
1742 ( 2): TEST Graphics[{Circle[], Disk[{0, 0}, {1, 1}, {0, 2.1}]}]
********** Drawing Graphics / ColorDistance **********
1743 ( 1): TEST ColorDistance[Magenta, Green]
1744 ( 2): TEST ColorDistance[{Red, Blue}, {Green, Yellow}, DistanceFunction -> {"CMC", "Perceptibility"}]
1745 ( 3): TEST ColorDistance[Blue, Red, DistanceFunction -> "CIE2000"]
1746 ( 4): TEST ColorDistance[Red, Black, DistanceFunction -> (Abs[#1[[1]] - #2[[1]]] &)]
********** Drawing Graphics / Cyan **********
1747 ( 1): TEST Graphics[{EdgeForm[Black], Cyan, Disk[]}, ImageSize->Small]
1748 ( 2): TEST Cyan // ToBoxes
1749 ( 3): TEST Cyan
********** Drawing Graphics / Darker **********
1750 ( 1): TEST Graphics[Table[{Darker[Yellow, x], Disk[{12x, 0}]}, {x, 0, 1, 1/6}]]
********** Drawing Graphics / Disk **********
1751 ( 1): TEST Graphics[{Blue, Disk[{0, 0}, {2, 1}]}]
1752 ( 2): TEST Graphics[{EdgeForm[Black], Red, Disk[]}]
1753 ( 3): TEST Graphics[Disk[{0, 0}, 1, {Pi / 3, 2 Pi / 3}]]
1754 ( 4): TEST Graphics[{Blue, Disk[{0, 0}, {1, 2}, {Pi / 3, 5 Pi / 3}]}]
********** Drawing Graphics / EdgeForm **********
1755 ( 1): TEST Graphics[{EdgeForm[{Thick, Green}], Disk[]}]
1756 ( 2): TEST Graphics[{Style[Disk[],EdgeForm[{Thick,Red}]], Circle[{1,1}]}]
********** Drawing Graphics / FilledCurve **********
1757 ( 1): TEST Graphics[FilledCurve[{Line[{{0, 0}, {1, 1}, {2, 0}}]}]]
1758 ( 2): TEST Graphics[FilledCurve[{BezierCurve[{{0, 0}, {1, 1}, {2, 0}}], Line[{{3, 0}, {0, 2}}]}]]
********** Drawing Graphics / Graphics **********
1759 ( 1): TEST Graphics[{Blue, Line[{{0,0}, {1,1}}]}]
1760 ( 2): TEST Graphics[{Rectangle[{1, 1}]}, Axes -> True, PlotRange -> {{-2, 1.5}, {-1, 1.5}}]
1761 ( 3): TEST Graphics[{Rectangle[],Red,Disk[{1,0}]},PlotRange->{{0,1},{0,1}}]
1762 ( 4): TEST Graphics[Rectangle[]] // ToBoxes // Head
1763 ( 5): TEST Graphics[Circle[]] // TeXForm
********** Drawing Graphics / Gray **********
1764 ( 1): TEST Graphics[{EdgeForm[Black], Gray, Disk[]}, ImageSize->Small]
1765 ( 2): TEST Gray // ToBoxes
1766 ( 3): TEST Gray
********** Drawing Graphics / Green **********
1767 ( 1): TEST Graphics[{EdgeForm[Black], Green, Disk[]}, ImageSize->Small]
1768 ( 2): TEST Green // ToBoxes
1769 ( 3): TEST Green
********** Drawing Graphics / Hue **********
1770 ( 1): TEST Graphics[Table[{EdgeForm[Gray], Hue[h, s], Disk[{12h, 8s}]}, {h, 0, 1, 1/6}, {s, 0, 1, 1/4}]]
1771 ( 2): TEST Graphics[Table[{EdgeForm[{GrayLevel[0, 0.5]}], Hue[(-11+q+10r)/72, 1, 1, 0.6], Disk[(8-r) {Cos[2Pi q/12], Sin[2Pi q/12]}, (8-r)/3]}, {r, 6}, {q, 12}]]
********** Drawing Graphics / LightRed **********
1772 ( 1): TEST Graphics[{EdgeForm[Black], LightRed, Disk[]}, ImageSize->Small]
1773 ( 2): TEST LightRed // ToBoxes
********** Drawing Graphics / Lighter **********
1774 ( 1): TEST Lighter[Orange, 1/4]
1775 ( 2): TEST Graphics[{Lighter[Orange, 1/4], Disk[]}]
1776 ( 3): TEST Graphics[Table[{Lighter[Orange, x], Disk[{12x, 0}]}, {x, 0, 1, 1/6}]]
********** Drawing Graphics / Line **********
1777 ( 1): TEST Graphics[Line[{{0,1},{0,0},{1,0},{1,1}}]]
1778 ( 2): TEST Graphics3D[Line[{{0,0,0},{0,1,1},{1,0,0}}]]
********** Drawing Graphics / Magenta **********
1779 ( 1): TEST Graphics[{EdgeForm[Black], Magenta, Disk[]}, ImageSize->Small]
1780 ( 2): TEST Magenta // ToBoxes
1781 ( 3): TEST Magenta
********** Drawing Graphics / Orange **********
1782 ( 1): TEST Graphics[{EdgeForm[Black], Orange, Disk[]}, ImageSize->Small]
1783 ( 2): TEST Orange // ToBoxes
********** Drawing Graphics / Point **********
1784 ( 1): TEST Graphics[Point[{0,0}]]
1785 ( 2): TEST Graphics[Point[Table[{Sin[t], Cos[t]}, {t, 0, 2. Pi, Pi / 15.}]]]
1786 ( 3): TEST Graphics3D[Point[Table[{Sin[t], Cos[t], 0}, {t, 0, 2. Pi, Pi / 15.}]]]
********** Drawing Graphics / Polygon **********
1787 ( 1): TEST Graphics[Polygon[{{1,0},{0,0},{0,1}}]]
1788 ( 2): TEST Graphics3D[Polygon[{{0,0,0},{0,1,1},{1,0,0}}]]
********** Drawing Graphics / Purple **********
1789 ( 1): TEST Graphics[{EdgeForm[Black], Purple, Disk[]}, ImageSize->Small]
1790 ( 2): TEST Purple // ToBoxes
********** Drawing Graphics / RGBColor **********
1791 ( 1): TEST Graphics[MapIndexed[{RGBColor @@ #1, Disk[2*#2 ~Join~ {0}]} &, IdentityMatrix[3]], ImageSize->Small]
1792 ( 2): TEST RGBColor[0, 1, 0]
1793 ( 3): TEST RGBColor[0, 1, 0] // ToBoxes
********** Drawing Graphics / Rectangle **********
1794 ( 1): TEST Graphics[Rectangle[]]
1795 ( 2): TEST Graphics[{Blue, Rectangle[{0.5, 0}], Orange, Rectangle[{0, 0.5}]}]
********** Drawing Graphics / Red **********
1796 ( 1): TEST Graphics[{EdgeForm[Black], Red, Disk[]}, ImageSize->Small]
1797 ( 2): TEST Red // ToBoxes
1798 ( 3): TEST Red
********** Drawing Graphics / RegularPolygon **********
1799 ( 1): TEST Graphics[RegularPolygon[5]]
1800 ( 2): TEST Graphics[{Yellow, Rectangle[], Orange, RegularPolygon[{1, 1}, {0.25, 0}, 3]}]
********** Drawing Graphics / Text **********
1801 ( 1): TEST Graphics[{Text["First", {0, 0}], Text["Second", {1, 1}]}, Axes->True, PlotRange->{{-2, 2}, {-2, 2}}]
1802 ( 2): TEST Graphics[{Text[x, {0,0}]}]
********** Drawing Graphics / Thickness **********
1803 ( 1): TEST Graphics[{Thickness[0.2], Line[{{0, 0}, {0, 5}}]}, Axes->True, PlotRange->{{-5, 5}, {-5, 5}}]
********** Drawing Graphics / White **********
1804 ( 1): TEST Graphics[{EdgeForm[Black], White, Disk[]}, ImageSize->Small]
1805 ( 2): TEST White // ToBoxes
1806 ( 3): TEST White
********** Drawing Graphics / Yellow **********
1807 ( 1): TEST Graphics[{EdgeForm[Black], Yellow, Disk[]}, ImageSize->Small]
1808 ( 2): TEST Yellow // ToBoxes
1809 ( 3): TEST Yellow
********** Graphics (3D) / Cuboid **********
1810 ( 1): TEST Graphics3D[Cuboid[{0, 0, 1}]]
1811 ( 2): TEST Graphics3D[{Red, Cuboid[{0, 0, 0}, {1, 1, 0.5}], Blue, Cuboid[{0.25, 0.25, 0.5}, {0.75, 0.75, 1}]}]
********** Graphics (3D) / Graphics3D **********
1812 ( 1): TEST Graphics3D[Polygon[{{0,0,0}, {0,1,1}, {1,0,0}}]]
1813 ( 2): TEST Graphics3D[Sphere[]] // TeXForm
1814 ( 3): TEST Graphics3D[Point[Table[{Sin[t], Cos[t], 0}, {t, 0, 2. Pi, Pi / 15.}]]] // TeXForm
********** Graphics (3D) / Sphere **********
1815 ( 1): TEST Graphics3D[Sphere[{0, 0, 0}, 1]]
1816 ( 2): TEST Graphics3D[{Yellow, Sphere[{{-1, 0, 0}, {1, 0, 0}, {0, 0, Sqrt[3.]}}, 1]}]
********** Image[] and image related functions. / Binarize **********
1817 ( 1): TEST img = Import["ExampleData/lena.tif"];
1818 ( 2): TEST Binarize[img]
1819 ( 3): TEST Binarize[img, 0.7]
1820 ( 4): TEST Binarize[img, {0.2, 0.6}]
********** Image[] and image related functions. / BinaryImageQ **********
1821 ( 1): TEST img = Import["ExampleData/lena.tif"];
1822 ( 2): TEST BinaryImageQ[img]
1823 ( 3): TEST BinaryImageQ[Binarize[img]]