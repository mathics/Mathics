(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     41771,        981]*)
(*NotebookOutlinePosition[    125373,       3812]*)
(*  CellTagsIndexPosition[    125329,       3808]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["ManagingKnotData`", "Title",
  InitializationCell->True],

Cell["Introduction", "Subtitle",
  InitializationCell->True],

Cell["\<\
This package provides a uniform interface to the Knot Atlas, Livingston's \
KnotInfo,  and the package KnotTheory`. In the future, it may encompass other \
sources as well.\
\>", "Text",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["Implementation", "Section",
  InitializationCell->True],

Cell[BoxData[
    \( (*\(<\)\(pre\)\(>\)*) \)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(BeginPackage["\<KnotTheory`KnotAtlas`ManagingKnotData`\>", \
{"\<KnotTheory`\>", "\<WikiLink`\>"}];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(FromWikiString;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(FromKnotInfoString;\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["Usage messages", "Subsection"],

Cell[BoxData[
    \(\(LoadInvariantRules::usage = "\<LoadInvariantRules[pagename] loads \
definitions for invariants from the page pagename (using the current \
WikiLink` connection).\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(InvariantDefinitionTable::usage = "\<InvariantDefinitionTable[rules] \
generates an html table representing rules, suitable for input via \
LoadInvariantRules.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(InvariantNames::usage = "\<InvariantNames[rules] returns a list of \
the names of the invariants described by rules.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(RetrieveInvariant::usage = "\<RetrieveInvariant[invariant, knot, \
source] returns the value of the named invariant for the given knot, from the \
specified source. At present, the only sources understood are \"KnotAtlas\", \
\"KnotTheory`\" and \"KnotInfo\". More may come soon!\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(RetrieveInvariants::usage = "\<RetrieveInvariants[invariantList, \
knotList, source] returns a list of triples, each of the form \
{\"InvariantName\", K, value}, from the specified source. At present, the \
only sources understood are \"KnotAtlas\", \"KnotTheory`\" and \"KnotInfo\". \
More may come soon!\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(StoreInvariants::usage = "\<StoreInvariants[data, target] stores the \
data, given in the form produced by RetrieveInvariants, in the specified \
target. At present, the only target understood is \"KnotAtlas\". Perhaps soon \
they'll be a way to specify a Mathematica .m file as the target.\>";\)\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(KnotInvariantURL::usage = "\<The function must be overriden in order \
to use the generic \"url\" source. Given two arguments, the name of the \
invariant and a knot, it should return the URL at which the invariant can be \
found. (Post-processing may be done by overriding ParseKnotInvariantFromURL.)\
\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ParseKnotInvariantFromURL::usage = "\<This function may be overriden \
when using the generic \"url\" source. Given three arguments, the name of the \
invariant, a knot, and the text of the page returned from the URL specificied \
by KnotInvariantURL, this function should return the invariant as a \
Mathematica expression.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(TransferUnknownInvariants::usage = "\<\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(FindDataDiscrepancies::usage = "\<FindDataDiscrepancies[data1, data2] \
returns a list of conflicts between the two lists of data. The conflicts are \
given in the form {\"InvariantName\", K, value1, value2}, where value1 is the \
value given in data1, and value2 is the value given in data2. See also \
FindMissingData.\n\>" <> "\<FindDataDiscrepancies[invariantList, knotList, \
source1, source2] first makes two calls to RetrieveInvariants to generate \
data1 and data2.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(FindMissingData::usage = "\<FindMissingData[data1, data2] returns a \
sublist of data1 consisting of items for which there is no corresponding \
value in data2. See also FindDataDiscrepancies.\n\>" <> \
"\<FindMissingData[invariantList, knotList, source1, source2] first makes two \
calls to RetrieveInvariants to generate data1 and data2.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(ProcessKnotAtlasUploadQueue::usage = \
\[IndentingNewLine]"\<ProcessKnotAtlasUploadQueue[pagename] starts processing \
the queue at pagename on the KnotAtlas. See the Knot Atlas page \"Upload \
Queues\" for further information. Options Repeat->numberOfRepeats and \
Timeout->numberOfSeconds can be used to control how many items will be \
processed, and the maximum amount of time spent on each.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(CreateDataPackage;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Begin["\<`Private`\>"];\)\)], "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reading invariant definitions from a table", "Subsection",
  InitializationCell->True],

Cell[BoxData[
    \(\(namePattern = "\<<!-- Invariant name -->\>" ~~ \(WhitespaceCharacter ...  \
~~ \("\<<td>\>" ~~ \(n : 
                    ShortestMatch[__] ~~ "\<</td>\>"\)\)\) \[RuleDelayed] 
          n;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(linePattern = "\<<!-- \>" ~~ \(t : \((WordCharacter .. )\) ~~ \("\< =\
\>" ~~ \(ShortestMatch[__] ~~ \("\<<td>\>" ~~ \(v : 
                        ShortestMatch[___] ~~ "\<</td>\>"\)\)\)\)\) \
\[RuleDelayed] \((t \[Rule] v)\);\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(expressionTags = {"\<ReadWiki\>", "\<ReadLivingston\>", "\<KnotTheory\
\>", "\<KnotTheorySetter\>"};\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ConstructInvariantRule[S_String] := 
      Module[{names = StringCases[S, namePattern], saveContext, rule}, 
        If[Length[names] \[NotEqual] 1, 
          Return[$Failed]]; \[IndentingNewLine]saveContext = $Context; \
\[IndentingNewLine]$Context = "\<Global`\>"; \[IndentingNewLine]rule = \
\((names\[LeftDoubleBracket]1\[RightDoubleBracket] \[Rule] 
                DeleteCases[
                  StringCases[S, 
                    linePattern], _ \[Rule] "\<\>"] /. \((t_String?\((MemberQ[
                            expressionTags, #] &)\) \[Rule] 
                    s_String)\) \[RuleDelayed] \((t \[Rule] 
                    ToExpression[s])\))\); \[IndentingNewLine]$Context = 
          saveContext; \[IndentingNewLine]rule\[IndentingNewLine]]\)], "Input",\

  InitializationCell->True],

Cell[BoxData[
    \(QuantumInvariantRules = {\[IndentingNewLine]\((S_String /; 
              StringMatchQ[S, "\<QuantumInvariant\>" ~~ __])\) \[RuleDelayed] 
          Module[{\[CapitalGamma]0, \[Lambda]0, 
              cases}, \[IndentingNewLine]cases = 
              StringCases[
                S, \(("\<QuantumInvariant/\>" ~~ \(\[CapitalGamma] : \
\((LetterCharacter)\) ~~ \(n : \((DigitCharacter .. )\) ~~ \("\</\>" ~~ \
\[Mu]__\)\)\))\) \[RuleDelayed] {\[CapitalGamma], 
                    n, \[Mu]}]; \[IndentingNewLine]If[
              Length[cases] \[Equal] 0, {}, 
              With[{\[CapitalGamma] = 
                    Subscript[
                      globalToExpression["\<QuantumGroups`\>" <> 
                          cases\[LeftDoubleBracket]1, 
                            1\[RightDoubleBracket]], 
                      ToExpression[
                        cases\[LeftDoubleBracket]1, 
                          2\[RightDoubleBracket]]], \[Lambda] = 
                    ToExpression["\<{\>" <> 
                        cases\[LeftDoubleBracket]1, 
                          3\[RightDoubleBracket] <> "\<}\>"]}, \
\[IndentingNewLine]{"\<WikiPage\>" \[Rule] S, "\<KnotTheorySetter\>" \[Rule] 
                    Function[{K, 
                        p}, \(\(KnotTheory`QuantumKnotInvariants`\
QuantumKnotInvariant[\[CapitalGamma], \
\(QuantumGroups`Irrep[\[CapitalGamma]]\)[\[Lambda]]]\)[K] = 
                            Function[{q}, p];\) &], "\<KnotTheory\>" \[Rule] 
                    Function[{K}, \
\(\(KnotTheory`QuantumKnotInvariants`QuantumKnotInvariant[\[CapitalGamma], \
\(QuantumGroups`Irrep[\[CapitalGamma]]\)[\[Lambda]]]\)[K]\)[
                        Global`q]]\[IndentingNewLine]}\[IndentingNewLine]]\
\[IndentingNewLine]]\[IndentingNewLine]]\[IndentingNewLine]}\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(LoadInvariantRules[
        pagename_String] := \(AllInvariants = \((ConstructInvariantRule /@ 
              Drop[StringSplit[WikiGetPageText[pagename], "\<<tr>\>"], 2])\)~
          Join~QuantumInvariantRules\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(LoadInvariantRules["\<Invariant_Definition_Table\>"];\)\)], "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Saving invariant definitions to a table", "Subsection",
  InitializationCell->True],

Cell[BoxData[
    \(InvariantTags[rules_] := 
      Union @@ \((rules /. \((_ \[Rule] L_List)\) \[RuleDelayed] 
              First /@ L)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(TableHeader[rules_] := "\<<tr>\n<th>Invariant name</th>\n\>" <> 
        StringJoin @@ \((\("\<   <th>\>" <> # <> "\<</th>\n\>" &\) /@ 
              InvariantTags[rules])\) <> "\<</tr>\n\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(whitespaces[n_] := StringJoin @@ Table["\< \>", {n}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(TableRow[rules_, i_] := "\<<tr>\n<!-- Invariant name --> <td>\>" <> 
        rules\[LeftDoubleBracket]i, 1\[RightDoubleBracket] <> "\<</td>\n\>" <> 
        StringJoin @@ \((\("\<<!-- \>" <> # <> "\< =\>" <> 
                  whitespaces[20 - StringLength[#]] <> "\<--> <td>\>" <> 
                  ToString[\(# /. 
                        rules\[LeftDoubleBracket]i, 
                          2\[RightDoubleBracket]\) /. {# \[Rule] "\<\>"}] <> \
"\<</td>\n\>" &\) /@ InvariantTags[rules])\) <> "\<</tr>\n\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(InvariantDefinitionTable[
        rules_] := "\<{{Invariant Definition Table Warning}}\n\>" <> \
"\<<table width=\"100%\">\n\>" <> TableHeader[rules] <> 
        StringJoin @@ 
          Table[TableRow[rules, i], {i, 1, 
              Length[rules]}] <> "\<</table>\>"\)], "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code for uploading, downloading, and comparing data", "Subsection",
  InitializationCell->True],

Cell[BoxData[
    \(FromWikiString[S_String] /; 
        StringMatchQ[S, "\<<math>\>" ~~ \(__ ~~ "\<</math>\>"\)] := 
      FixTeXFormExpression[
        ToExpression[
          StringReplace[
            S, "\<<math>\>" ~~ \(X__ ~~ "\<</math>\>"\) \[RuleDelayed] X], 
          TeXForm]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(Clear[FixTeXFormExpression]\), "\[IndentingNewLine]", 
    \(FixTeXFormExpression[\(Times[a_, b__]\)[c__]] := 
      Times[a, b, c]\), "\[IndentingNewLine]", 
    \(FixTeXFormExpression[x_] := x\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FromWikiString[S_String] /; 
        StringMatchQ[S, "\<<nowiki>\>" ~~ \(__ ~~ "\<</nowiki>\>"\)] := 
      StringReplace[
        S, "\<<nowiki>\>" ~~ \(X__ ~~ "\<</nowiki>\>"\) \[RuleDelayed] 
          X]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FromWikiString[S_String] /; StringMatchQ[S, "\<http://\>" ~~ __] := 
      S\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FromWikiString[S_String] := ToExpression[S]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FromKnotInfoString["\<Not Hyperbolic\>"] := NotHyperbolic\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FromKnotInfoString[S_String?\((StringMatchQ[#, NumberString] &)\)] := 
      ToExpression[S]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FromKnotInfoString[S_String] := S\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(FromKnotInfoString["\<infty\>"] = \[Infinity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(InvariantNames[L_List] := 
      Cases[L, \((S_String \[Rule] _List)\) \[RuleDelayed] S]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(InvariantRule[I_String] := \(InvariantRule[I] = 
        Module[{rule}, 
          rule = I /. AllInvariants; \[IndentingNewLine]If[rule === I, 
            Print["\<I don't recognise the invariant \>" <> I <> "\<.\>"]; 
            Return[$Failed], rule]]\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariant[I_String, K_, "\<KnotTheory\>"] := 
      Module[{rule = InvariantRule[I], KnotTheory}, 
        If[rule \[Equal] $Failed, 
          Return[$Failed]]; \[IndentingNewLine]KnotTheory = "\<KnotTheory\>" /. \
\((I /. AllInvariants)\); \[IndentingNewLine]If[
          KnotTheory \[Equal] "\<KnotTheory\>", 
          Print["\<Sorry, I don't know how to calculate the invariant \>" <> 
              I <> "\< using KnotTheory`.\>"]; 
          Return[$Failed]]; \[IndentingNewLine]KnotTheory[K]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ReadWikiFunction[
        I_String] := \(("\<ReadWiki\>" /. \((I /. 
                AllInvariants)\))\) /. "\<ReadWiki\>" \[Rule] 
          FromWikiString\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariant[I_String, K_, "\<KnotAtlas\>"] := 
      Module[{WikiPage, WikiResult}, \[IndentingNewLine]WikiPage = 
          WikiPageForInvariant[I]; \[IndentingNewLine]If[
          WikiPage \[Equal] $Failed, 
          Return[$Failed]]; \[IndentingNewLine]WikiResult = 
          WikiGetPageText["\<Data:\>" <> NameString[K] <> "\</\>" <> 
              WikiPage]; \[IndentingNewLine]\(ReadWikiFunction[I]\)[
          WikiResult]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[Is : {__Rule}, Ks_List, "\<KnotAtlas\>"] := 
      RetrieveInvariants[InvariantNames[Is], Ks, "\<KnotAtlas\>"]\)], "Input",\

  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[Is : {__String}, Ks_List, "\<KnotAtlas\>"] := 
      Module[{wikipages, pagenames, wikiResult, 
          delegateReadWikiFunction}, \[IndentingNewLine]wikiPages = 
          WikiPageForInvariant /@ Is; \[IndentingNewLine]If[
          MemberQ[wikiPages, $Failed], 
          Return[$Failed]]; \[IndentingNewLine]pagenames = 
          Flatten[Outer["\<Data:\>" <> NameString[#2] <> "\</\>" <> #1 &, 
              wikiPages, Ks], 1]; \[IndentingNewLine]wikiResult = 
          WikiGetPageTexts[pagenames]; \[IndentingNewLine]getResult[I_, K_] := 
          Module[{c, r}, \[IndentingNewLine]c = 
              Cases[wikiResult, {"\<Data:\>" <> NameString[K] <> "\</\>" <> 
                      WikiPageForInvariant[I], r_} \[RuleDelayed] 
                  r]; \[IndentingNewLine]If[Length[c] \[Equal] 1, 
              c\[LeftDoubleBracket]1\[RightDoubleBracket], "\<\>"]\
\[IndentingNewLine]]; \[IndentingNewLine]delegateReadWikiFunction[I_, K_] := 
          With[{result = getResult[I, K]}, \[IndentingNewLine]If[
              result == "\<\>", 
              Null, \(ReadWikiFunction[I]\)[
                result]]\[IndentingNewLine]]; \[IndentingNewLine]Flatten[
          Outer[{#1, #2, delegateReadWikiFunction[#1, #2]} &, Is, Ks], 
          1]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[pairs_List, "\<KnotAtlas\>"] := 
      Module[{wikipages, pagenames, wikiResult, 
          delegateReadWikiFunction}, \[IndentingNewLine]pagenames = \
\("\<Data:\>" <> 
                NameString[#\[LeftDoubleBracket]2\[RightDoubleBracket]] <> \
"\</\>" <> 
                WikiPageForInvariant[#\[LeftDoubleBracket]1\
\[RightDoubleBracket]] &\) /@ pairs; \[IndentingNewLine]wikiResult = 
          WikiGetPageTexts[pagenames]; \[IndentingNewLine]getResult[I_, K_] := 
          Module[{c, r}, \[IndentingNewLine]c = 
              Cases[wikiResult, {"\<Data:\>" <> NameString[K] <> "\</\>" <> 
                      WikiPageForInvariant[I], r_} \[RuleDelayed] 
                  r]; \[IndentingNewLine]If[Length[c] \[Equal] 1, 
              c\[LeftDoubleBracket]1\[RightDoubleBracket], "\<\>"]\
\[IndentingNewLine]]; \[IndentingNewLine]delegateReadWikiFunction[I_, K_] := 
          With[{result = getResult[I, K]}, \[IndentingNewLine]If[
              result == "\<\>", 
              Null, \(ReadWikiFunction[I]\)[
                result]]\[IndentingNewLine]]; \[IndentingNewLine]\({#\
\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\
\[RightDoubleBracket], 
              delegateReadWikiFunction[#\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]]} &\) /@ 
          pairs\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(KnotInfoGroup[
          Knot[n_Integer, _Integer]] /; \((3 \[LessEqual] n \[LessEqual] 
            6)\) := "\<knots=3-6&\>"\), "\[IndentingNewLine]", 
    \(KnotInfoGroup[
        Knot[7, _Integer]] := "\<knots=7&\>"\), "\[IndentingNewLine]", 
    \(KnotInfoGroup[
        Knot[8, _Integer]] := "\<knots=8&\>"\), "\[IndentingNewLine]", 
    \(KnotInfoGroup[
        Knot[9, _Integer]] := "\<knots=9&\>"\), "\[IndentingNewLine]", 
    \(KnotInfoGroup[
        Knot[10, _Integer]] := "\<knots=10&\>"\), "\[IndentingNewLine]", 
    \(KnotInfoGroup[
        Knot[11, 
          Alternating, _Integer]] := "\<knots=11a&\>"\), \
"\[IndentingNewLine]", 
    \(KnotInfoGroup[
        Knot[11, 
          NonAlternating, _Integer]] := "\<knots=11n&\>"\), "\
\[IndentingNewLine]", 
    \(KnotInfoGroup[Knot[12, Alternating, k_Integer]] := "\<knots=12a\>" <> 
        ToString[Ceiling[k/200]]\), "\[IndentingNewLine]", 
    \(KnotInfoGroup[Knot[12, NonAlternating, k_Integer]] := "\<knots=12n\>" <> 
        ToString[Ceiling[k/200]]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(TrimWhitespace[S_String] := 
      StringReplace[
        S, {StartOfString ~~ Whitespace \[RuleDelayed] "\<\>", 
          Whitespace ~~ EndOfString \[RuleDelayed] "\<\>"}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[{I_String}, Ks_List, "\<KnotInfo\>"] := 
      Module[{groupstring, knotinfopage, knotinfotag, 
          datatable}, \[IndentingNewLine]groupstring = 
          StringJoin[
            Union[KnotInfoGroup /@ 
                Ks]]; \[IndentingNewLine]knotinfotag = "\<KnotInfoTag\>" /. \
\((I /. AllInvariants)\); \[IndentingNewLine]If[
          knotinfotage == "\<KnotInfoTag\>", 
          Print["\<Sorry, I don't know how to retrieve the invariant \>" <> 
              I <> "\< from KnotInfo.\>"]; 
          Return[$Failed]]; \[IndentingNewLine]knotinfopage = 
          Import["\<http://www.indiana.edu/~knotinfo/results.cgi?\>" <> 
              groupstring <> "\<name=1&\>" <> 
              knotinfotag <> "\<=1&option=ptxt\>", "\<Text\>"]; \
\[IndentingNewLine]datatable = \(StringCases[
              knotinfopage, "\<<table\>" ~~ \(Except["\<>\>"] ..  ~~ \
\("\<>\>" ~~ \(Whitespace ~~ \("\<Name,\>" ~~ \(ShortestMatch[__] ~~ \
\("\<<br>\>" ~~ \(dt : 
                                  ShortestMatch[__] ~~ \
"\<</table\>"\)\)\)\)\)\)\) \[RuleDelayed] 
                dt]\)\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]StringCases[
          datatable, \ "\<& \>" ~~ \(knotname : 
                  ShortestMatch[__] ~~ \("\< & \>" ~~ \(value : 
                      ShortestMatch[__] ~~ "\<<br>\>"\)\)\) \[RuleDelayed] \
{I, Knot[knotname], 
              FromKnotInfoString[
                TrimWhitespace[value]]}]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[Is : {__String}, Ks_List, "\<KnotInfo\>"] /; 
        Length[Is] > 1 := 
      DeleteCases[
        Join @@ \((\(RetrieveInvariants[{#}, Ks, "\<KnotInfo\>"] &\) /@ 
              Is)\), $Failed]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[Is : {__Rule}, Ks_List, source_String] := 
      RetrieveInvariants[InvariantNames[Is], Ks, source]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[Is : {__String}, Ks_List, source_] := 
      RetrieveInvariants[Flatten[Outer[List, Is, Ks], 1], source]\)], "Input",\

  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariants[pairs : {{_String, _} ... }, 
        source_String] := \({#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket], 
            RetrieveInvariant[#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket], source]} &\) /@ pairs\)], "Input",\

  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[WikiPageForInvariant];\)\), "\n", 
    \(WikiPageForInvariant[I_String] := \(WikiPageForInvariant[I] = 
        Module[{rule = InvariantRule[I], wikiPage}, \[IndentingNewLine]If[
            rule \[Equal] $Failed, 
            Return[$Failed]]; \[IndentingNewLine]wikiPage = "\<WikiPage\>" /. 
              rule; \[IndentingNewLine]If[wikiPage === "\<WikiPage\>", 
            Print["\<Sorry, I don't know how to store the invariant \>" <> 
                I <> "\< in the Knot Atlas.\>"]; 
            Return[$Failed]]; \[IndentingNewLine]wikiPage\[IndentingNewLine]]\
\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(rule\\)\\\" is similar to existing symbol \\\
\"\\!\\(Rule\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\(Options[StoreInvariants] = {Write \[Rule] True};\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(StoreInvariants[Dall : {{_String, _, _} ... }, "\<KnotAtlas\>", 
        opts___] := 
      Module[{D, invariants, unknownInvariants, wikiPages, 
          uploadPairs}, \[IndentingNewLine]D = 
          DeleteCases[Dall, {_, _, $Failed}]; \[IndentingNewLine]invariants = 
          Union[Part[D, All, 1]]; \[IndentingNewLine]wikiPages = 
          WikiPageForInvariant /@ invariants; \[IndentingNewLine]If[
          MemberQ[wikiPages, $Failed], 
          Return[$Failed]]; \[IndentingNewLine]uploadPairs = \({"\<Data:\>" <> 
                  NameString[#\[LeftDoubleBracket]2\[RightDoubleBracket]] <> \
"\</\>" <> WikiPageForInvariant[#\[LeftDoubleBracket]1\[RightDoubleBracket]], 
                ToString[#\[LeftDoubleBracket]3\[RightDoubleBracket], 
                  WikiForm]} &\) /@ 
            D; \[IndentingNewLine]If[\(! FreeQ[uploadPairs, $Failed]\), 
          Print["\<Warning: tried to upload bad data -- \>"]; 
          Print[uploadPairs]; 
          Return[$Failed]]; \[IndentingNewLine]If[\(Write /. {opts}\) /. 
            Options[StoreInvariants], WikiSetPageTexts[uploadPairs], 
          uploadPairs]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(StoreInvariants[Dall : {{_String, _, _} ... }, "\<CSVString\>"] := 
      StringJoin @@ \((\("\<\"\>" <> #\[LeftDoubleBracket]1\
\[RightDoubleBracket] <> "\<\"\>" <> "\<,\t\>" <> "\<\"\>" <> 
                NameString[#\[LeftDoubleBracket]2\[RightDoubleBracket]] <> \
"\<\"\>" <> "\<,\t\"\>" <> 
                ToString[#\[LeftDoubleBracket]3\[RightDoubleBracket], 
                  InputForm] <> "\<\"\n\>" &\) /@ Dall)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(KnotTheorySetterForInvariant[
        I_String] := \[IndentingNewLine]\(KnotTheorySetterForInvariant[I] = 
        Module[{rule = InvariantRule[I], setter}, \[IndentingNewLine]If[
            rule \[Equal] $Failed, 
            Return[$Failed]]; \[IndentingNewLine]setter = "\<KnotTheorySetter\
\>" /. rule; \[IndentingNewLine]If[setter === "\<KnotTheorySetter\>", 
            Print["\<Sorry, I don't know how to store the invariant \>" <> 
                I <> "\< in the current KnotTheory`.\>"]; 
            Return[$Failed]]; \[IndentingNewLine]setter\[IndentingNewLine]]\)\
\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(StoreInvariants[
        Dall : {{_String, _, _} ... }, "\<KnotTheory\>"] \
:= \[IndentingNewLine]Module[{D}, \[IndentingNewLine]D = 
          DeleteCases[
            Dall, {_, _, $Failed | Null}]; \[IndentingNewLine]invariants = 
          Union[Part[D, All, 1]]; \[IndentingNewLine]setterFunctions = 
          KnotTheorySetterForInvariant /@ invariants; \[IndentingNewLine]If[
          MemberQ[setterFunctions, $Failed], 
          Return[$Failed]]; \
\[IndentingNewLine]\(\(KnotTheorySetterForInvariant[#\[LeftDoubleBracket]1\
\[RightDoubleBracket]]\)[#\[LeftDoubleBracket]2\[RightDoubleBracket], #\
\[LeftDoubleBracket]3\[RightDoubleBracket]] &\) /@ 
          D;\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(StoreInvariants[
        Dall : {{_String, _, _} ... }, "\<KnotTheoryInputString\>"] \
:= \[IndentingNewLine]Module[{D}, \[IndentingNewLine]D = 
          DeleteCases[
            Dall, {_, _, $Failed | Null}]; \[IndentingNewLine]invariants = 
          Union[Part[D, All, 1]]; \[IndentingNewLine]setterFunctions = 
          KnotTheorySetterForInvariant /@ invariants; \[IndentingNewLine]If[
          MemberQ[setterFunctions, $Failed], 
          Return[$Failed]]; \[IndentingNewLine]"\<#\[LeftDoubleBracket]1\
\[RightDoubleBracket][#\[LeftDoubleBracket]2\[RightDoubleBracket],#\
\[LeftDoubleBracket]3\[RightDoubleBracket]]&/@ {\n\>" <> 
          StringJoin @@ \((\(\((ToString[#, 
                        InputForm] <> "\<\n\>")\) &\) /@ \
\((\({KnotTheorySetterForInvariant[#\[LeftDoubleBracket]1\[RightDoubleBracket]\
], #\[LeftDoubleBracket]2\[RightDoubleBracket], #\[LeftDoubleBracket]3\
\[RightDoubleBracket]} &\) /@ 
                    D)\))\) <> "\<}\>"\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ParseKnotInvariantFromURL[I_, K_, data_] := data\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RetrieveInvariant[I_String, K_, "\<url\>"] := 
      Module[{url = KnotInvariantURL[I, K], data}, \[IndentingNewLine]If[
          url == "\<\>", 
          Print["\<Sorry, I don't know where to find the value of the \
invariant \>" <> \ 
              I <> "\< online. Trying defining more values for \
KnotInvariantURL.\>"]; Return[$Failed]]; \[IndentingNewLine]Off[
          FetchURL::conopen]; \[IndentingNewLine]data = 
          Import[url, "\<Text\>"]; \[IndentingNewLine]If[
          data \[Equal] $Failed, Return[$Failed]]; \[IndentingNewLine]Return[
          ParseKnotInvariantFromURL[I, K, 
            data]];\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(take[l_, n_] := 
      If[Length[l] > n, Take[l, n], l]\), "\[IndentingNewLine]", 
    \(shuffle[l_] := 
      l\[LeftDoubleBracket]Ordering[
          Table[Random[], {Length[
                l]}]]\[RightDoubleBracket]\), "\[IndentingNewLine]", 
    \(randomisedpartition[l_, n_] := 
      shuffle[Partition[l, n, n, {1, 1}, {}]]\), "\[IndentingNewLine]", 
    \(TransferUnknownInvariants[invariants : {___String}, knots_List, 
        source : "\<KnotTheory\>", target_String] := 
      Module[{needed, workingset, chunksize = 1, counter = 0, 
          timer = 0. \ Second, interval = 300.  Second, 
          failures = {}}, \[IndentingNewLine]If[Length[knots] > 5000, 
          Print["\<Large knot set, dividing into \>", 
            Ceiling[Length[knots]/5000], "\< groups\>"]; 
          Return[Union[\(TransferUnknownInvariants[invariants, #, source, 
                    target] &\) /@ 
                randomisedpartition[knots, 
                  5000]]]]; \[IndentingNewLine]Print["\<Checking to see what \
\>", target, "\< already contains...\>"]; \[IndentingNewLine]Print["\<(took \
\>", \(AbsoluteTiming[
              needed = 
                Cases[RetrieveInvariants[invariants, knots, 
                    target], {i_, k_, Null} \[RuleDelayed] {i, 
                      k}]]\)\[LeftDoubleBracket]1\[RightDoubleBracket], \
"\<)\>"]; \[IndentingNewLine]Print["\<Starting to calculate \>", 
          Length[needed], "\< invariants...\>"]; \[IndentingNewLine]While[
          Length[needed] > 0, \[IndentingNewLine]While[
            Length[needed] > 
                0 \[And] \((timer < interval /. 
                  Second \[Rule] 1)\), \[IndentingNewLine]workingset = 
              take[needed, chunksize]; \[IndentingNewLine]counter += 
              Length[workingset]; \[IndentingNewLine]timer += \
\(AbsoluteTiming[\(failures = 
                      failures~Join~
                        StoreInvariants[
                          RetrieveInvariants[workingset, source], 
                          target];\)]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]; \[IndentingNewLine]needed = 
              Complement[needed, 
                workingset];\[IndentingNewLine]]; \
\[IndentingNewLine]Print["\<Uploaded \>", counter, "\< invariants in \>", \ 
            timer]; \[IndentingNewLine]If[
            2  chunksize \[LessEqual] 
              counter, \(++chunksize\)]; \[IndentingNewLine]counter = 
            0; \[IndentingNewLine]timer = 
            0\ Second;\[IndentingNewLine]]; \[IndentingNewLine]failures\
\[IndentingNewLine]]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FindDataDiscrepancies[Is : {__Rule}, Ks_List, source1_String, 
        source2_String] := 
      FindDataDiscrepancies[InvariantNames[Is], Ks, source1, 
        source2]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FindDataDiscrepancies[Is : {__String}, Ks_List, source1_String, 
        source2_String] := 
      FindDataDiscrepancies[RetrieveInvariants[Is, Ks, source1], 
        RetrieveInvariants[Is, Ks, source2]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FindDataDiscrepancies[D1 : {{_String, _, _} ... }, 
        D2 : {{_String, _, _} ... }] := 
      Module[{D1t, D2t, D, P, C}, \[IndentingNewLine] (*Mark\ the\ data, 
          according\ to\ where\ it\ came\ \(\(from\)\(.\)\)\
*) \[IndentingNewLine]D1t = \({#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket], 
                1, #\[LeftDoubleBracket]3\[RightDoubleBracket]} &\) /@ 
            D1; \[IndentingNewLine]D2t = \({#\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket], 
                2, #\[LeftDoubleBracket]3\[RightDoubleBracket]} &\) /@ 
            D2; \[IndentingNewLine] (*Combine\ the\ data, 
          and\ split\ it\ into\ doublets\ \((or\ singlets)\)\ corresponding\ \
to\ the\ same\ invariant\ and\ \(\(knot\)\(.\)\)*) D = 
          Split[Sort[D1t~Join~D2t], 
            SameQ[Take[#1, 2], 
                Take[#2, 
                  2]] &]; \[IndentingNewLine] (*Take\ only\ the\ \
\(\(pairs\)\(.\)\)*) P = 
          Select[D, 
            Length[#] \[Equal] 
                2 &]; \[IndentingNewLine] (*Combine\ the\ pairs*) C = 
          P /. {{I_, K_, 1, V1_}, {I_, K_, 2, V2_}} \[RuleDelayed] {I, K, V1, 
                V2}; \[IndentingNewLine]Select[
          C, #\[LeftDoubleBracket]3\[RightDoubleBracket] =!= #\
\[LeftDoubleBracket]4\[RightDoubleBracket] &]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FindMissingData[D1 : {{_String, _, _} ... }, 
        D2 : {{_String, _, _} ... }] := 
      Complement[D1, D2, 
        SameTest \[Rule] SameQ[Take[#1, 2], Take[#2, 2]] &]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Options[ProcessKnotAtlasUploadQueue] = {Timeout \[Rule] 42300, 
          Repeats \[Rule] \[Infinity]};\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ProcessKnotAtlasUploadQueue[pagename_String, opts___Rule] := 
      Module[{n = 0, 
          repeats = \(Repeats /. {opts}\) /. 
              Options[ProcessKnotAtlasUploadQueue], 
          timeout = \(Timeout /. {opts}\) /. 
              Options[ProcessKnotAtlasUploadQueue]}, \
\[IndentingNewLine]While[\((\(++n\) < 
                repeats)\) \[And] \((TimeConstrained[
                  ProcessKnotAtlasUploadQueue[pagename, 
                    WikiGetPageText[pagename]], timeout] =!= 
                Null)\)]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(randomEntry[list_] := 
      list\[LeftDoubleBracket]Random[
          Integer, {1, Length[list]}]\[RightDoubleBracket]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(randomEntry[list_ /; Length[list] \[Equal] 0] := Null\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ProcessKnotAtlasUploadQueue[pagename_String, contents_String] := 
      Module[{item, result}, \[IndentingNewLine]result = 
          ProcessKnotAtlasUploadQueueEntry[pagename, 
            item = randomEntry[
                StringSplit[contents, 
                  StringExpression[EndOfLine]]]]; \[IndentingNewLine]If[
          result \[Equal] $Failed, \[IndentingNewLine]WikiStringReplace[
            pagename, item ~~ EndOfLine \[Rule] "\<\>"]; 
          WikiSetPageText["\<Upload Queues Rejected Items\>", 
            WikiGetPageText["\<Upload Queues Rejected Items\>"] <> "\<\n\>" <> 
              item]\[IndentingNewLine]]; \[IndentingNewLine]result\
\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ProcessKnotAtlasUploadQueueEntry[_, Null] := Null\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(globalToExpression[S_String] := 
      Module[{saveContext, 
          result}, \[IndentingNewLine]saveContext = $Context; \
\[IndentingNewLine]$Context = "\<Global`\>"; \[IndentingNewLine]result = 
          ToExpression[S]; \[IndentingNewLine]$Context = 
          saveContext; \[IndentingNewLine]result\[IndentingNewLine]]\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \(ProcessKnotAtlasUploadQueueEntry[pagename_String, 
        item_String] := \[IndentingNewLine]Module[{cases}, \
\[IndentingNewLine]cases = 
          StringCases[
            item, "\<*\"\>" ~~ \(invariant : 
                    ShortestMatch[__] ~~ \("\<\", \"\>" ~~ \(knotset : 
                        ShortestMatch[__] ~~ "\<\"\>"\)\)\) \[RuleDelayed] \
{invariant, knotset}]; \[IndentingNewLine]If[Length[cases] \[Equal] 0, 
          Return[$Failed]]; \
\[IndentingNewLine]\(ProcessKnotAtlasUploadQueueEntry[pagename, 
              item, #\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]] &\) /@ 
          cases\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(commaSpaces = "\<,\>" ~~ "\< \>" ... ;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(validKnotSetStringPatterns = 
        Alternatives @@ {\[IndentingNewLine]"\<All\>" ~~ \(\(("\<Knots\>" | "\
\<Links\>")\) ~~ \("\<[\>" ~~ \(DigitCharacter ..  ~~ "\<]\>"\)\)\), \
\[IndentingNewLine]"\<All\>" ~~ \(\(("\<Knots\>" | "\<Links\>")\) ~~ \
\("\<[\>" ~~ \(DigitCharacter ..  ~~ \(commaSpaces ~~ \("\<Alternating\>" | "\
\<NonAlternating\>" ~~ "\<]\>"\)\)\)\)\), \[IndentingNewLine]"\<All\>" ~~ \
\(\(("\<Knots\>" | "\<Links\>")\) ~~ \("\<[{\>" ~~ \(DigitCharacter ..  ~~ \
\(commaSpaces ~~ \(DigitCharacter ..  ~~ "\<}]\>"\)\)\)\)\), \
\[IndentingNewLine]"\<All\>" ~~ \(\(("\<Knots\>" | "\<Links\>")\) ~~ \
\("\<[{\>" ~~ \(DigitCharacter ..  ~~ \(commaSpaces ~~ \(DigitCharacter ..  ~~ \
\("\<}\>" ~~ \(commaSpaces ~~ \("\<Alternating\>" | "\<NonAlternating\>" ~~ "\
\<]\>"\)\)\)\)\)\)\)\), \[IndentingNewLine]"\<TorusKnots[\>" ~~ \
\(DigitCharacter ..  ~~ "\<]\>"\), \[IndentingNewLine]"\<Select[\>" ~~ \
\(\((s1__ /; knotsetStringSanityCheck[
                      s1])\) ~~ \(commaSpaces ~~ \("\<First[BR[#]]\>" ~~ \
\(\(("\<<\>" | "\<=\>")\) ~~ \("\<=\>" ~~ \(DigitCharacter ..  ~~ \
"\<&]\>"\)\)\)\)\)\), \[IndentingNewLine]"\<Take[\>" ~~ \(\((s2__ /; 
                    knotsetStringSanityCheck[
                      s2])\) ~~ \(commaSpaces ~~ \(DigitCharacter ..  ~~ "\<]\
\>"\)\)\), \[IndentingNewLine]"\<Take[\>" ~~ \(\((s3__ /; 
                    knotsetStringSanityCheck[
                      s3])\) ~~ \(commaSpaces ~~ \("\<{\>" ~~ \(\(("\<-\>" | \
"\<\>")\) ~~ \(DigitCharacter ..  ~~ \(commaSpaces ~~ \(\(("\<-\>" | \
"\<\>")\) ~~ \(DigitCharacter ..  ~~ \("\<}\>" ~~ "\<]\>"\)\)\)\)\)\)\)\)\)\
\[IndentingNewLine]};\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(knotsetStringSanityCheck[knotset_String] := 
      StringMatchQ[knotset, validKnotSetStringPatterns]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ProcessKnotAtlasUploadQueueEntry[pagename_String, item_String, 
        invariant_String, knotset_String] := 
      Module[{result}, \[IndentingNewLine]If[\(! knotsetStringSanityCheck[
              knotset]\), 
          Print["\<The knot set string \>", 
            knotset, "\< doesn't pass the sanity test, so I won't try to \
interpret it.\>"]; 
          Return[$Failed]]; \[IndentingNewLine]Print["\<Calculating \>", 
          invariant, "\< for everything in \>", 
          knotset]; \[IndentingNewLine]result = 
          TransferUnknownInvariants[{invariant}, 
            globalToExpression[
              knotset], "\<KnotTheory\>", "\<KnotAtlas\>"]; \
\[IndentingNewLine]If[result \[Equal] {}, 
          WikiStringReplace[pagename, item ~~ EndOfLine \[Rule] "\<\>"]; 
          WikiSetPageText["\<Upload Queues Completed Work\>", 
            WikiGetPageText["\<Upload Queues Completed Work\>"] <> "\<\n\>" <> 
              item]]; \[IndentingNewLine]item\[IndentingNewLine]]\)], "Input",\

  InitializationCell->True],

Cell[BoxData[
    \(CreateDataPackage[datasetname_String, invariant_String, knotset_List] := 
      CreateDataPackage[datasetname, {invariant}, knotset]\)], "Input",
  InitializationCell->True],

Cell["\<\
Note to self; this really needs an extra argument, for other needed packages.\
\
\>", "Text"],

Cell[BoxData[
    \(CreateDataPackage[datasetname_String, invariants : {__String}, 
        knotset_List] := 
      Module[{filename}, \[IndentingNewLine]filename = 
          KnotTheoryDirectory[] <> "\</\>" <> 
            datasetname <> "\<.m\>"; \[IndentingNewLine]If[
          FileNames[
              datasetname <> "\<.m\>", {KnotTheoryDirectory[]}] =!= {}, \
\[IndentingNewLine]Print["\<Warning! There's already a file called \>" <> 
              filename <> "\<\nPlease double check the name, and delete the \
pre-existing file if appropriate.\>"]; 
          Return[$Failed]]; \[IndentingNewLine]WriteString[
          filename, \[IndentingNewLine]"\<BeginPackage[\"KnotTheory`\>" <> 
            datasetname <> "\<`\",{\"KnotTheory`\"}]\n\>" \
<> \[IndentingNewLine]"\<Message[KnotTheory::loading, \"\>" <> 
            datasetname <> "\<`\"]\n\>" <> 
            StoreInvariants[
              RetrieveInvariants[invariants, 
                knotset, "\<KnotAtlas\>"], "\<KnotTheoryInputString\>"] \
<> \[IndentingNewLine]"\<\nEndPackage[]\>"\[IndentingNewLine]]; \
\[IndentingNewLine]Close[filename]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(End[];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(EndPackage[];\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \( (*\(<\)\(\(/\)\(pre\)\)\(>\)\([\([Category : 
              Source\ Code]\)]\)*) \)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 713}},
AutoGeneratedPackage->Automatic,
WindowSize->{1187, 579},
WindowMargins->{{Automatic, -3}, {Automatic, 2}},
Visible->True,
ShowSelection->True,
InputAliases->{"intt"->RowBox[ {"\[Integral]", 
        RowBox[ {"\[SelectionPlaceholder]", 
          RowBox[ {"\[DifferentialD]", "\[Placeholder]"}]}]}], 
    "dintt"->RowBox[ {
        SubsuperscriptBox[ 
        "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
        RowBox[ {"\[Placeholder]", 
          RowBox[ {"\[DifferentialD]", "\[Placeholder]"}]}]}], 
    "sumt"->RowBox[ {
        UnderoverscriptBox[ "\[Sum]", 
          RowBox[ {"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
          "\[Placeholder]"], "\[Placeholder]"}], "prodt"->RowBox[ {
        UnderoverscriptBox[ "\[Product]", 
          RowBox[ {"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
          "\[Placeholder]"], "\[Placeholder]"}], "dt"->RowBox[ {
        SubscriptBox[ "\[PartialD]", "\[Placeholder]"], " ", 
        "\[SelectionPlaceholder]"}], "notation"->RowBox[ {"Notation", "[", 
        RowBox[ {
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"], " ", "\[DoubleLongLeftRightArrow]", " ",
           
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"]}], "]"}], 
    "notation>"->RowBox[ {"Notation", "[", 
        RowBox[ {
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"], " ", "\[DoubleLongRightArrow]", " ", 
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"]}], "]"}], 
    "notation<"->RowBox[ {"Notation", "[", 
        RowBox[ {
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"], " ", "\[DoubleLongLeftArrow]", " ", 
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"]}], "]"}], 
    "symb"->RowBox[ {"Symbolize", "[", 
        TagBox[ 
        "\[Placeholder]", NotationBoxTag, TagStyle -> 
          "NotationTemplateStyle"], "]"}], 
    "infixnotation"->RowBox[ {"InfixNotation", "[", 
        RowBox[ {
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"], ",", "\[Placeholder]"}], "]"}], 
    "addia"->RowBox[ {"AddInputAlias", "[", 
        RowBox[ {"\"\[Placeholder]\"", "\[Rule]", 
          TagBox[ 
          "\[Placeholder]", NotationBoxTag, TagStyle -> 
            "NotationTemplateStyle"]}], "]"}], 
    "pattwraper"->TagBox[ 
      "\[Placeholder]", NotationPatternTag, TagStyle -> 
        "NotationPatternWrapperStyle"], 
    "madeboxeswraper"->TagBox[ 
      "\[Placeholder]", NotationMadeBoxesTag, TagStyle -> 
        "NotationMadeBoxesWrapperStyle"]},
StyleDefinitions -> Notebook[{
  
  Cell[CellGroupData[{
  Cell["Style Definitions", "Title"],
  
  Cell["\<\
Modify the definitions below to change the default appearance of all cells in \
a given style.  Make modifications to any definition using commands in the \
Format menu.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell["Style Environment Names", "Section"],
  
  Cell[StyleData[All, "Working"],
    PageWidth->WindowWidth,
    CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
    CellLabelMargins->{{12, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->9],
  
  Cell[StyleData[All, "Presentation"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{24, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->12],
  
  Cell[StyleData[All, "Condensed"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{8, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->8],
  
  Cell[StyleData[All, "SlideShow"],
    PageWidth->WindowWidth,
    ScrollingOptions->{"PagewiseDisplay"->True,
    "VerticalScrollRange"->Fit},
    ShowCellBracket->False,
    ScriptMinSize->9],
  
  Cell[StyleData[All, "Printout"],
    PageWidth->PaperWidth,
    CellLabelMargins->{{2, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->5,
    PrivateFontOptions->{"FontType"->"Outline"}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Notebook Options", "Section"],
  
  Cell["\<\
The options defined for the style below will be used at the Notebook level.\
\>", "Text"],
  
  Cell[StyleData["Notebook"],
    PageHeaders->{{Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"], None, Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"]}, {Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"], None, Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"]}},
    CellFrameLabelMargins->6,
    StyleMenuListing->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headings", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Title"],
    CellMargins->{{27, Inherited}, {10, 30}},
    CellGroupingRules->{"TitleGrouping", 0},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LineSpacing->{1, 11},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Title",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subtitle", 0}, {"Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->36,
    FontWeight->"Bold"],
  
  Cell[StyleData["Title", "Presentation"],
    CellMargins->{{27, 10}, {10, 30}},
    LineSpacing->{1, 0},
    FontSize->44],
  
  Cell[StyleData["Title", "Condensed"],
    CellMargins->{{8, 10}, {4, 8}},
    FontSize->20],
  
  Cell[StyleData["Title", "SlideShow"]],
  
  Cell[StyleData["Title", "Printout"],
    CellMargins->{{2, 10}, {12, 30}},
    FontSize->24]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subtitle"],
    CellMargins->{{27, Inherited}, {20, 2}},
    CellGroupingRules->{"TitleGrouping", 10},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", 
                BoxMargins -> {{-.074999999999999997, -.085000000000000006}, {
                0, 0}}, BoxBaselineShift -> .5], "X"}]], "mma"->"Mathematica",
         "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->24],
  
  Cell[StyleData["Subtitle", "Presentation"],
    CellMargins->{{27, 10}, {20, 2}},
    LineSpacing->{1, 0},
    FontSize->36],
  
  Cell[StyleData["Subtitle", "Condensed"],
    CellMargins->{{8, 10}, {4, 4}},
    FontSize->14],
  
  Cell[StyleData["Subtitle", "SlideShow"]],
  
  Cell[StyleData["Subtitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    FontSize->18]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubtitle"],
    CellMargins->{{27, Inherited}, {8, 2}},
    CellGroupingRules->{"TitleGrouping", 20},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsubtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}},
    FontFamily->"Helvetica",
    FontSize->16],
  
  Cell[StyleData["Subsubtitle", "Presentation"],
    CellMargins->{{24, 10}, {20, 20}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Subsubtitle", "Condensed"],
    CellMargins->{{8, 10}, {8, 8}},
    FontSize->12],
  
  Cell[StyleData["Subsubtitle", "SlideShow"]],
  
  Cell[StyleData["Subsubtitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Section"],
    CellFrame->{{0, 0}, {0, 1}},
    CellMargins->{{27, Inherited}, {8, 34}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameMargins->4,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LineSpacing->{1, 2},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->20,
    FontWeight->"Bold"],
  
  Cell[StyleData["Section", "Presentation"],
    CellMargins->{{40, 10}, {11, 32}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Section", "Condensed"],
    CellMargins->{{18, Inherited}, {6, 12}},
    FontSize->12],
  
  Cell[StyleData["Section", "SlideShow"]],
  
  Cell[StyleData["Section", "Printout"],
    CellMargins->{{2, 0}, {7, 22}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsection"],
    CellDingbat->"\[FilledSmallSquare]",
    CellMargins->{{60, Inherited}, {8, 12}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->14,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsection", "Presentation"],
    CellMargins->{{36, 10}, {11, 32}},
    LineSpacing->{1, 0},
    FontSize->22],
  
  Cell[StyleData["Subsection", "Condensed"],
    CellMargins->{{16, Inherited}, {6, 12}},
    FontSize->12],
  
  Cell[StyleData["Subsection", "SlideShow"]],
  
  Cell[StyleData["Subsection", "Printout"],
    CellMargins->{{9, 0}, {7, 22}},
    FontSize->12]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubsection"],
    CellDingbat->"\[FilledSmallSquare]",
    CellMargins->{{60, Inherited}, {2, 10}},
    CellGroupingRules->{"SectionGrouping", 50},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubsection", "Presentation"],
    CellMargins->{{34, 10}, {11, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subsubsection", "Condensed"],
    CellMargins->{{17, Inherited}, {6, 12}},
    FontSize->10],
  
  Cell[StyleData["Subsubsection", "SlideShow"]],
  
  Cell[StyleData["Subsubsection", "Printout"],
    CellMargins->{{9, 0}, {7, 14}},
    FontSize->11]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Body Text", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Text"],
    CellMargins->{{60, 10}, {7, 7}},
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    LineSpacing->{1, 3},
    CounterIncrements->"Text"],
  
  Cell[StyleData["Text", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["Text", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["Text", "SlideShow"]],
  
  Cell[StyleData["Text", "Printout"],
    CellMargins->{{2, 2}, {6, 6}},
    TextJustification->0.5,
    Hyphenation->True,
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SmallText"],
    CellMargins->{{60, 10}, {6, 6}},
    DefaultNewInlineCellStyle->"None",
    LineSpacing->{1, 3},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"SmallText",
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["SmallText", "Presentation"],
    CellMargins->{{24, 10}, {8, 8}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["SmallText", "Condensed"],
    CellMargins->{{8, 10}, {5, 5}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["SmallText", "SlideShow"]],
  
  Cell[StyleData["SmallText", "Printout"],
    CellMargins->{{2, 2}, {5, 5}},
    TextJustification->0.5,
    Hyphenation->True,
    FontSize->7]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Input/Output", "Section"],
  
  Cell["\<\
The cells in this section define styles used for input and output to the \
kernel.  Be careful when modifying, renaming, or removing these styles, \
because the front end associates special meanings with these style names. \
Some attributes for these styles are actually set in FormatType Styles (in \
the last section of this stylesheet). \
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Input"],
    CellMargins->{{66, 10}, {5, 7}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    DefaultFormatType->DefaultInputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->"Mathematica",
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    LinebreakAdjustments->{0.85, 2, 10, 0, 1},
    CounterIncrements->"Input",
    FontWeight->"Bold"],
  
  Cell[StyleData["Input", "Presentation"],
    CellMargins->{{72, Inherited}, {8, 10}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Input", "Condensed"],
    CellMargins->{{40, 10}, {2, 3}},
    FontSize->11],
  
  Cell[StyleData["Input", "SlideShow"]],
  
  Cell[StyleData["Input", "Printout"],
    CellMargins->{{39, 0}, {4, 6}},
    LinebreakAdjustments->{0.85, 2, 10, 1, 1},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["InputOnly"],
    CellMargins->{{66, 10}, {7, 7}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->"Mathematica",
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    LinebreakAdjustments->{0.85, 2, 10, 0, 1},
    CounterIncrements->"Input",
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["InputOnly", "Presentation"],
    CellMargins->{{72, Inherited}, {8, 10}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["InputOnly", "Condensed"],
    CellMargins->{{40, 10}, {2, 3}},
    FontSize->11],
  
  Cell[StyleData["InputOnly", "SlideShow"]],
  
  Cell[StyleData["InputOnly", "Printout"],
    CellMargins->{{39, 0}, {4, 6}},
    LinebreakAdjustments->{0.85, 2, 10, 1, 1},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Output"],
    CellMargins->{{66, 10}, {7, 5}},
    CellEditDuplicate->True,
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    DefaultFormatType->DefaultOutputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Output"],
  
  Cell[StyleData["Output", "Presentation"],
    CellMargins->{{72, Inherited}, {10, 8}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Output", "Condensed"],
    CellMargins->{{41, Inherited}, {3, 2}},
    FontSize->11],
  
  Cell[StyleData["Output", "SlideShow"]],
  
  Cell[StyleData["Output", "Printout"],
    CellMargins->{{39, 0}, {6, 4}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Message"],
    CellMargins->{{66, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    AutoStyleOptions->{"UnmatchedBracketStyle"->None},
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Message",
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->10,
    FontColor->RGBColor[0.6, 0.100008, 0.100008]],
  
  Cell[StyleData["Message", "Presentation"],
    CellMargins->{{72, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Message", "Condensed"],
    CellMargins->{{41, Inherited}, {Inherited, Inherited}},
    FontSize->11],
  
  Cell[StyleData["Message", "SlideShow"]],
  
  Cell[StyleData["Message", "Printout"],
    CellMargins->{{39, Inherited}, {Inherited, Inherited}},
    FontSize->7,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Print"],
    CellMargins->{{66, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Print",
    StyleMenuListing->None],
  
  Cell[StyleData["Print", "Presentation"],
    CellMargins->{{72, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Print", "Condensed"],
    CellMargins->{{41, Inherited}, {Inherited, Inherited}},
    FontSize->11],
  
  Cell[StyleData["Print", "SlideShow"]],
  
  Cell[StyleData["Print", "Printout"],
    CellMargins->{{39, Inherited}, {Inherited, Inherited}},
    FontSize->8]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Graphics"],
    CellMargins->{{4, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Graphics",
    ImageMargins->{{43, Inherited}, {Inherited, 0}},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontSize->10],
  
  Cell[StyleData["Graphics", "Presentation"],
    ImageMargins->{{62, Inherited}, {Inherited, 0}}],
  
  Cell[StyleData["Graphics", "Condensed"],
    ImageMargins->{{38, Inherited}, {Inherited, 0}},
    Magnification->0.6],
  
  Cell[StyleData["Graphics", "SlideShow"]],
  
  Cell[StyleData["Graphics", "Printout"],
    ImageMargins->{{30, Inherited}, {Inherited, 0}},
    Magnification->0.8]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["CellLabel"],
    LanguageCategory->None,
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontColor->RGBColor[0.269993, 0.308507, 0.6]],
  
  Cell[StyleData["CellLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["CellLabel", "Condensed"],
    FontSize->9],
  
  Cell[StyleData["CellLabel", "SlideShow"]],
  
  Cell[StyleData["CellLabel", "Printout"],
    FontFamily->"Courier",
    FontSize->8,
    FontSlant->"Italic",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["FrameLabel"],
    LanguageCategory->None,
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["FrameLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["FrameLabel", "Condensed"],
    FontSize->9],
  
  Cell[StyleData["FrameLabel", "SlideShow"]],
  
  Cell[StyleData["FrameLabel", "Printout"],
    FontFamily->"Courier",
    FontSize->8,
    FontSlant->"Italic",
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Inline Formatting", "Section"],
  
  Cell["\<\
These styles are for modifying individual words or letters in a cell \
exclusive of the cell tag.\
\>", "Text"],
  
  Cell[StyleData["RM"],
    StyleMenuListing->None,
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["BF"],
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["IT"],
    StyleMenuListing->None,
    FontSlant->"Italic"],
  
  Cell[StyleData["TR"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["TI"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["TB"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["TBI"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[StyleData["MR"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["MO"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["MB"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["MBO"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[StyleData["SR"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["SO"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SB"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["SBO"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SO10"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->10,
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SO10", "Printout"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->7,
    FontWeight->"Plain",
    FontSlant->"Italic"]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Inert"],
    StyleMenuListing->None,
    Background->RGBColor[0.870588, 0.905882, 0.972549]],
  
  Cell[StyleData["Inert", "Printout"],
    StyleMenuListing->None,
    Background->GrayLevel[1]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Formulas and Programming", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["InlineFormula"],
    CellMargins->{{10, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Formula",
    ScriptLevel->1,
    SingleLetterItalics->True],
  
  Cell[StyleData["InlineFormula", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["InlineFormula", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["InlineFormula", "SlideShow"]],
  
  Cell[StyleData["InlineFormula", "Printout"],
    CellMargins->{{2, 0}, {6, 6}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DisplayFormula"],
    CellMargins->{{60, Inherited}, {Inherited, Inherited}},
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Formula",
    ScriptLevel->0,
    SingleLetterItalics->True,
    UnderoverscriptBoxOptions->{LimitsPositioning->True}],
  
  Cell[StyleData["DisplayFormula", "Presentation"],
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["DisplayFormula", "Condensed"],
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["DisplayFormula", "SlideShow"]],
  
  Cell[StyleData["DisplayFormula", "Printout"],
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Program"],
    CellFrame->{{0, 0}, {0.5, 0.5}},
    CellMargins->{{60, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    Hyphenation->False,
    LanguageCategory->"Formula",
    ScriptLevel->1,
    FontFamily->"Courier"],
  
  Cell[StyleData["Program", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["Program", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["Program", "SlideShow"]],
  
  Cell[StyleData["Program", "Printout"],
    CellMargins->{{2, 0}, {6, 6}},
    FontSize->9]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Outline Styles", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline1"],
    CellMargins->{{60, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 50},
    ParagraphIndent->-38,
    CounterIncrements->"Outline1",
    CounterAssignments->{{"Outline2", 0}, {"Outline3", 0}, {"Outline4", 0}},
    FontSize->18,
    FontWeight->"Bold",
    CounterBoxOptions->{
    CounterFunction:>Utilities`Notation`Private`CapitalRomanNumeral}],
  
  Cell[StyleData["Outline1", "SlideShow"]],
  
  Cell[StyleData["Outline1", "Printout"],
    CounterBoxOptions->{
    CounterFunction:>Utilities`Notation`Private`CapitalRomanNumeral}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline2"],
    CellMargins->{{90, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 60},
    ParagraphIndent->-27,
    CounterIncrements->"Outline2",
    CounterAssignments->{{"Outline3", 0}, {"Outline4", 0}},
    FontSize->15,
    FontWeight->"Bold",
    CounterBoxOptions->{CounterFunction:>(Part[ 
        CharacterRange[ "A", "Z"], #]&)}],
  
  Cell[StyleData["Outline2", "SlideShow"]],
  
  Cell[StyleData["Outline2", "Printout"],
    CounterBoxOptions->{CounterFunction:>(Part[ 
        CharacterRange[ "A", "Z"], #]&)}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline3"],
    CellMargins->{{120, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 70},
    ParagraphIndent->-21,
    CounterIncrements->"Outline3",
    CounterAssignments->{{"Outline4", 0}},
    FontSize->12,
    CounterBoxOptions->{CounterFunction:>Identity}],
  
  Cell[StyleData["Outline3", "SlideShow"]],
  
  Cell[StyleData["Outline3", "Printout"],
    CounterBoxOptions->{CounterFunction:>Identity}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline4"],
    CellMargins->{{150, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 80},
    ParagraphIndent->-18,
    CounterIncrements->"Outline4",
    FontSize->10,
    CounterBoxOptions->{CounterFunction:>(Part[ 
        CharacterRange[ "a", "z"], #]&)}],
  
  Cell[StyleData["Outline4", "SlideShow"]],
  
  Cell[StyleData["Outline4", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Hyperlink Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making hypertext ButtonBoxes.  The \
\"Hyperlink\" style is for links within the same Notebook, or between \
Notebooks.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Hyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonFrame->"None",
    ButtonNote->ButtonData}],
  
  Cell[StyleData["Hyperlink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["Hyperlink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["Hyperlink", "SlideShow"]],
  
  Cell[StyleData["Hyperlink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell["\<\
The following styles are for linking automatically to the on-line help \
system.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MainBookLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MainBook", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MainBookLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["MainBookLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["MainBookLink", "SlideShow"]],
  
  Cell[StyleData["MainBookLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["AddOnsLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "AddOns", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["AddOnsLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["AddOnsLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["AddOnsLink", "SlideShow"]],
  
  Cell[StyleData["AddOnsLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuide", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["RefGuideLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["RefGuideLink", "SlideShow"]],
  
  Cell[StyleData["RefGuideLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLinkText"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuide", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLinkText", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["RefGuideLinkText", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["RefGuideLinkText", "SlideShow"]],
  
  Cell[StyleData["RefGuideLinkText", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["GettingStartedLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "GettingStarted", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["GettingStartedLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["GettingStartedLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["GettingStartedLink", "SlideShow"]],
  
  Cell[StyleData["GettingStartedLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DemosLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "Demos", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["DemosLink", "SlideShow"]],
  
  Cell[StyleData["DemosLink", "Printout"],
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["TourLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "Tour", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["TourLink", "SlideShow"]],
  
  Cell[StyleData["TourLink", "Printout"],
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OtherInformationLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "OtherInformation", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["OtherInformationLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["OtherInformationLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["OtherInformationLink", "SlideShow"]],
  
  Cell[StyleData["OtherInformationLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MasterIndexLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0.269993, 0.308507, 0.6],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MasterIndex", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MasterIndexLink", "SlideShow"]],
  
  Cell[StyleData["MasterIndexLink", "Printout"],
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headers and Footers", "Section"],
  
  Cell[StyleData["Header"],
    CellMargins->{{0, 0}, {4, 1}},
    DefaultNewInlineCellStyle->"None",
    LanguageCategory->"NaturalLanguage",
    StyleMenuListing->None,
    FontSize->10,
    FontSlant->"Italic"],
  
  Cell[StyleData["Footer"],
    CellMargins->{{0, 0}, {0, 4}},
    DefaultNewInlineCellStyle->"None",
    LanguageCategory->"NaturalLanguage",
    StyleMenuListing->None,
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["PageNumber"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Times",
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Palette Styles", "Section"],
  
  Cell["\<\
The cells below define styles that define standard ButtonFunctions, for use \
in palette buttons.\
\>", "Text"],
  
  Cell[StyleData["Paste"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, Placeholder]}]&)}],
  
  Cell[StyleData["Evaluate"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluate[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["EvaluateCell"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionMove[ 
          FrontEnd`InputNotebook[ ], All, Cell, 1], 
        FrontEnd`SelectionEvaluateCreateCell[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["CopyEvaluate"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`SelectionCreateCell[ 
          FrontEnd`InputNotebook[ ], All], 
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluate[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["CopyEvaluateCell"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`SelectionCreateCell[ 
          FrontEnd`InputNotebook[ ], All], 
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluateCreateCell[ 
          FrontEnd`InputNotebook[ ], All]}]&)}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Placeholder Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making placeholder objects in \
palette templates.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Placeholder"],
    Placeholder->True,
    StyleMenuListing->None,
    FontSlant->"Italic",
    FontColor->RGBColor[0.890623, 0.864698, 0.384756],
    TagBoxOptions->{Editable->False,
    Selectable->False,
    StripWrapperBoxes->False}],
  
  Cell[StyleData["Placeholder", "Presentation"]],
  
  Cell[StyleData["Placeholder", "Condensed"]],
  
  Cell[StyleData["Placeholder", "SlideShow"]],
  
  Cell[StyleData["Placeholder", "Printout"]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["PrimaryPlaceholder"],
    StyleMenuListing->None,
    DrawHighlighted->True,
    FontSlant->"Italic",
    Background->RGBColor[0.912505, 0.891798, 0.507774],
    TagBoxOptions->{Editable->False,
    Selectable->False,
    StripWrapperBoxes->False}],
  
  Cell[StyleData["PrimaryPlaceholder", "Presentation"]],
  
  Cell[StyleData["PrimaryPlaceholder", "Condensed"]],
  
  Cell[StyleData["PrimaryPlaceholder", "SlideShow"]],
  
  Cell[StyleData["PrimaryPlaceholder", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["FormatType Styles", "Section"],
  
  Cell["\<\
The cells below define styles that are mixed in with the styles of most \
cells.  If a cell's FormatType matches the name of one of the styles defined \
below, then that style is applied between the cell's style and its own \
options. This is particularly true of Input and Output.\
\>", "Text"],
  
  Cell[StyleData["CellExpression"],
    PageWidth->Infinity,
    CellMargins->{{6, Inherited}, {Inherited, Inherited}},
    ShowCellLabel->False,
    ShowSpecialCharacters->False,
    AllowInlineCells->False,
    Hyphenation->False,
    AutoItalicWords->{},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontSize->12,
    Background->GrayLevel[1]],
  
  Cell[StyleData["InputForm"],
    InputAutoReplacements->{},
    AllowInlineCells->False,
    Hyphenation->False,
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["OutputForm"],
    PageWidth->Infinity,
    TextAlignment->Left,
    LineSpacing->{0.6, 1},
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["StandardForm"],
    InputAutoReplacements->{
      "->"->"\[Rule]", ":>"->"\[RuleDelayed]", "<="->"\[LessEqual]", 
        ">="->"\[GreaterEqual]", "!="->"\[NotEqual]", "=="->"\[Equal]", 
        Inherited},
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    LineSpacing->{1.25, 0},
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["TraditionalForm"],
    InputAutoReplacements->{
      "->"->"\[Rule]", ":>"->"\[RuleDelayed]", "<="->"\[LessEqual]", 
        ">="->"\[GreaterEqual]", "!="->"\[NotEqual]", "=="->"\[Equal]", 
        Inherited},
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    LineSpacing->{1.25, 0},
    SingleLetterItalics->True,
    TraditionalFunctionNotation->True,
    DelimiterMatching->None,
    StyleMenuListing->None],
  
  Cell["\<\
The style defined below is mixed in to any cell that is in an inline cell \
within another.\
\>", "Text"],
  
  Cell[StyleData["InlineCell"],
    LanguageCategory->"Formula",
    ScriptLevel->1,
    StyleMenuListing->None],
  
  Cell[StyleData["InlineCellEditing"],
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Automatic Styles", "Section"],
  
  Cell["\<\
The cells below define styles that are used to affect the display of certain \
types of objects in typeset expressions.  For example, \"UnmatchedBracket\" \
style defines how unmatched bracket, curly bracket, and parenthesis \
characters are displayed (typically by coloring them to make them stand out).\
\
\>", "Text"],
  
  Cell[StyleData["UnmatchedBracket"],
    StyleMenuListing->None,
    FontColor->RGBColor[0.760006, 0.330007, 0.8]],
  
  Cell[StyleData["Completions"],
    StyleMenuListing->None,
    FontFamily->"Courier"]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles from HelpBrowser", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MathCaption"],
    CellFrame->{{0, 0}, {0, 0.5}},
    CellMargins->{{66, 12}, {2, 24}},
    PageBreakBelow->False,
    CellFrameMargins->{{8, 8}, {8, 2}},
    CellFrameColor->GrayLevel[0.700008],
    CellFrameLabelMargins->4,
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 8},
    StyleMenuListing->None,
    FontColor->GrayLevel[0.2]],
  
  Cell[StyleData["MathCaption", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["MathCaption", "SlideShow"]],
  
  Cell[StyleData["MathCaption", "Printout"],
    CellMargins->{{39, 0}, {0, 14}},
    Hyphenation->True,
    FontSize->9,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ObjectName"],
    ShowCellBracket->True,
    CellMargins->{{66, 4}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelAutoDelete->False,
    CellLabelMargins->{{14, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    ShowSpecialCharacters->Automatic,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Mathematica",
    FormatType->StandardForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["ObjectName", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["ObjectName", "SlideShow"]],
  
  Cell[StyleData["ObjectName", "Printout"],
    ShowCellBracket->False,
    CellMargins->{{39, 0}, {6, 6}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Usage"],
    ShowCellBracket->True,
    CellMargins->{{66, 4}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelAutoDelete->False,
    CellLabelMargins->{{14, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    ShowSpecialCharacters->Automatic,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Mathematica",
    FormatType->StandardForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["Usage", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["Usage", "SlideShow"]],
  
  Cell[StyleData["Usage", "Printout"],
    ShowCellBracket->False,
    CellMargins->{{39, 0}, {6, 6}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Notes"],
    ShowCellBracket->True,
    CellMargins->{{66, 4}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelAutoDelete->False,
    CellLabelMargins->{{14, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    ShowSpecialCharacters->Automatic,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Mathematica",
    FormatType->StandardForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["Notes", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["Notes", "SlideShow"]],
  
  Cell[StyleData["Notes", "Printout"],
    ShowCellBracket->False,
    CellMargins->{{39, 0}, {6, 6}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["InlineOutput"],
    ShowCellBracket->True,
    CellMargins->{{66, 4}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelAutoDelete->False,
    CellLabelMargins->{{14, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    ShowSpecialCharacters->Automatic,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Mathematica",
    FormatType->StandardForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["InlineOutput", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["InlineOutput", "SlideShow"]],
  
  Cell[StyleData["InlineOutput", "Printout"],
    ShowCellBracket->False,
    CellMargins->{{39, 0}, {6, 6}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Emphasis Boxes and Pictures", "Subsection"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Box"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnSpacings->1}],
  
  Cell[StyleData["Box", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["Box", "SlideShow"]],
  
  Cell[StyleData["Box", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DoubleBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnSpacings->2,
    RowAlignments->Top}],
  
  Cell[StyleData["DoubleBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["DoubleBox", "SlideShow"]],
  
  Cell[StyleData["DoubleBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["1ColumnBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnSpacings->1}],
  
  Cell[StyleData["1ColumnBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["1ColumnBox", "SlideShow"]],
  
  Cell[StyleData["1ColumnBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["2ColumnBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    SingleLetterItalics->False,
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnWidths->{0.31, 0.67}}],
  
  Cell[StyleData["2ColumnBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["2ColumnBox", "SlideShow"]],
  
  Cell[StyleData["2ColumnBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->9,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["2ColumnEvenBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnWidths->0.46}],
  
  Cell[StyleData["2ColumnEvenBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["2ColumnEvenBox", "SlideShow"]],
  
  Cell[StyleData["2ColumnEvenBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["2ColumnSmallBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnSpacings->1.5,
    ColumnWidths->0.35,
    ColumnAlignments->{Right, Left}}],
  
  Cell[StyleData["2ColumnSmallBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["2ColumnSmallBox", "SlideShow"]],
  
  Cell[StyleData["2ColumnSmallBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["3ColumnBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnWidths->0.32}],
  
  Cell[StyleData["3ColumnBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["3ColumnBox", "SlideShow"]],
  
  Cell[StyleData["3ColumnBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["3ColumnSmallBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnSpacings->1.5,
    ColumnWidths->0.24,
    ColumnAlignments->{Right, Center, Left}}],
  
  Cell[StyleData["3ColumnSmallBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["3ColumnSmallBox", "SlideShow"]],
  
  Cell[StyleData["3ColumnSmallBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["4ColumnBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    SingleLetterItalics->False,
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnWidths->{0.13, 0.35, 0.13, 0.35}}],
  
  Cell[StyleData["4ColumnBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["4ColumnBox", "SlideShow"]],
  
  Cell[StyleData["4ColumnBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["5ColumnBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnWidths->0.202}],
  
  Cell[StyleData["5ColumnBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["5ColumnBox", "SlideShow"]],
  
  Cell[StyleData["5ColumnBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->9,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["6ColumnBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxFrame->0.5,
    BoxMargins->True},
    GridBoxOptions->{ColumnWidths->{0.12, 0.22, 0.12, 0.12, 0.22, 0.12}}],
  
  Cell[StyleData["6ColumnBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["6ColumnBox", "SlideShow"]],
  
  Cell[StyleData["6ColumnBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["FramedBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["FramedBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["FramedBox", "SlideShow"]],
  
  Cell[StyleData["FramedBox", "Printout"],
    CellMargins->{{2, 4}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DefinitionBox"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.4, 0.6},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["DefinitionBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["DefinitionBox", "SlideShow"]],
  
  Cell[StyleData["DefinitionBox", "Printout"],
    CellMargins->{{2, 4}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DefinitionBox3Col"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.35, 0.2, 0.45},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["DefinitionBox3Col", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["DefinitionBox3Col", "SlideShow"]],
  
  Cell[StyleData["DefinitionBox3Col", "Printout"],
    CellMargins->{{2, 4}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DefinitionBox4Col"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.15, 0.35, 0.15, 0.35},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["DefinitionBox4Col", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["DefinitionBox4Col", "SlideShow"]],
  
  Cell[StyleData["DefinitionBox4Col", "Printout"],
    CellMargins->{{2, 4}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DefinitionBox5Col"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->0.2,
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["DefinitionBox5Col", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["DefinitionBox5Col", "SlideShow"]],
  
  Cell[StyleData["DefinitionBox5Col", "Printout"],
    CellMargins->{{2, 4}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DefinitionBox6Col"],
    CellFrame->0.5,
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.13, 0.24, 0.13, 0.13, 0.24, 0.13},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["DefinitionBox6Col", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["DefinitionBox6Col", "SlideShow"]],
  
  Cell[StyleData["DefinitionBox6Col", "Printout"],
    CellMargins->{{2, 4}, {0, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["TopBox"],
    CellFrame->{{0.5, 0.5}, {0, 0.5}},
    CellMargins->{{27, 12}, {0, 8}},
    CellHorizontalScrolling->True,
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.31, 0.62},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["TopBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["TopBox", "SlideShow"]],
  
  Cell[StyleData["TopBox", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MiddleBox"],
    CellFrame->{{0.5, 0.5}, {0, 0}},
    CellMargins->{{27, 12}, {0, -7}},
    CellHorizontalScrolling->True,
    PageBreakAbove->False,
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.31, 0.62},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["MiddleBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["MiddleBox", "SlideShow"]],
  
  Cell[StyleData["MiddleBox", "Printout"],
    CellMargins->{{2, 0}, {0, 2}},
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["BottomBox"],
    CellFrame->{{0.5, 0.5}, {0.5, 0}},
    CellMargins->{{27, 12}, {0, -7}},
    CellHorizontalScrolling->True,
    PageBreakAbove->False,
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.31, 0.62},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["BottomBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["BottomBox", "SlideShow"]],
  
  Cell[StyleData["BottomBox", "Printout"],
    CellMargins->{{2, 0}, {0, -5}},
    FontSize->10,
    Background->GrayLevel[1],
    GridBoxOptions->{RowMinHeight->2.2}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["TopSpanBox"],
    CellFrame->{{0.5, 0.5}, {0, 0.5}},
    CellMargins->{{27, 12}, {-2, 8}},
    CellHorizontalScrolling->True,
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.9, 0.03},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["TopSpanBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["TopSpanBox", "SlideShow"]],
  
  Cell[StyleData["TopSpanBox", "Printout"],
    CellMargins->{{2, 0}, {-2, 8}},
    FontSize->10,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MiddleSpanBox"],
    CellFrame->{{0.5, 0.5}, {0, 0}},
    CellMargins->{{27, 12}, {0, 0}},
    CellHorizontalScrolling->True,
    PageBreakAbove->False,
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    AutoIndent->False,
    AutoSpacing->False,
    LineIndent->0,
    StyleMenuListing->None,
    FontWeight->"Plain",
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    GridBoxOptions->{RowSpacings->1.5,
    ColumnSpacings->1,
    ColumnWidths->{0.9, 0.03},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["MiddleSpanBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["MiddleSpanBox", "SlideShow"]],
  
  Cell[StyleData["MiddleSpanBox", "Printout"],
    CellMargins->{{2, 0}, {-5, 0}},
    FontSize->10,
    Background->GrayLevel[1],
    GridBoxOptions->{RowMinHeight->1.8}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Picture"],
    CellMargins->{{27, Inherited}, {4, 4}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    StyleMenuListing->None],
  
  Cell[StyleData["Picture", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["Picture", "SlideShow"]],
  
  Cell[StyleData["Picture", "Printout"],
    CellMargins->{{2, Inherited}, {4, 4}},
    Magnification->0.65]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OpenCloseItemizedPicture"],
    CellMargins->{{88, 4}, {4, 4}},
    PrivateCellOptions->{"DefaultCellGroupOpen"->False},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    StyleMenuListing->None],
  
  Cell[StyleData["OpenCloseItemizedPicture", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["OpenCloseItemizedPicture", "SlideShow"]],
  
  Cell[StyleData["OpenCloseItemizedPicture", "Printout"],
    CellMargins->{{76, 2}, {0, 0}},
    CellElementSpacings->{"CellMinHeight"->1,
    "ClosedCellHeight"->0},
    CellOpen->False]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ItemizedPicture"],
    CellMargins->{{88, 4}, {4, 4}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    StyleMenuListing->None],
  
  Cell[StyleData["ItemizedPicture", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["ItemizedPicture", "SlideShow"]],
  
  Cell[StyleData["ItemizedPicture", "Printout"],
    CellMargins->{{77, 2}, {4, -4}},
    Magnification->0.5]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ListGraphic"],
    CellMargins->{{88, 4}, {4, 4}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    StyleMenuListing->None],
  
  Cell[StyleData["ListGraphic", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["ListGraphic", "SlideShow"]],
  
  Cell[StyleData["ListGraphic", "Printout"],
    CellMargins->{{77, 2}, {4, -4}},
    Magnification->0.5]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ListNoteBox"],
    CellFrame->0.5,
    CellMargins->{{88, 12}, {8, 8}},
    CellHorizontalScrolling->True,
    CellFrameColor->RGBColor[0.74902, 0.694118, 0.552941],
    LineIndent->0,
    StyleMenuListing->None,
    Background->RGBColor[0.964706, 0.929412, 0.839216],
    FrameBoxOptions->{BoxMargins->{{1, 1}, {1.5, 1.5}}},
    GridBoxOptions->{ColumnSpacings->1}],
  
  Cell[StyleData["ListNoteBox", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["ListNoteBox", "SlideShow"]],
  
  Cell[StyleData["ListNoteBox", "Printout"],
    CellMargins->{{77, 4}, {6, 2}},
    FontSize->10,
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["PictureGroup"],
    CellMargins->{{41, 4}, {0, 4}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    StyleMenuListing->None],
  
  Cell[StyleData["PictureGroup", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["PictureGroup", "SlideShow"]],
  
  Cell[StyleData["PictureGroup", "Printout"],
    CellMargins->{{76, 2}, {0, 0}},
    CellElementSpacings->{"CellMinHeight"->1,
    "ClosedCellHeight"->0},
    CellOpen->False]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Sound"],
    ShowCellBracket->True,
    CellMargins->{{27, Inherited}, {0, 8}},
    StyleMenuListing->None],
  
  Cell[StyleData["Sound", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["Sound", "SlideShow"]],
  
  Cell[StyleData["Sound", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->10]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Tables", "Subsection"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["2ColumnTable"],
    CellMargins->{{35, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    LineIndent->0,
    StyleMenuListing->None,
    GridBoxOptions->{ColumnWidths->{0.34, 0.64},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["2ColumnTable", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["2ColumnTable", "SlideShow"]],
  
  Cell[StyleData["2ColumnTable", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["2ColumnEvenTable"],
    CellMargins->{{35, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    LineIndent->0,
    StyleMenuListing->None,
    GridBoxOptions->{ColumnWidths->0.49,
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["2ColumnEvenTable", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["2ColumnEvenTable", "SlideShow"]],
  
  Cell[StyleData["2ColumnEvenTable", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["3ColumnTable"],
    CellMargins->{{35, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    LineIndent->0,
    StyleMenuListing->None,
    GridBoxOptions->{ColumnWidths->{0.28, 0.28, 0.43},
    ColumnAlignments->{Left}}],
  
  Cell[StyleData["3ColumnTable", "Presentation"],
    FontSize->18],
  
  Cell[StyleData["3ColumnTable", "SlideShow"]],
  
  Cell[StyleData["3ColumnTable", "Printout"],
    CellMargins->{{2, 0}, {0, 8}},
    FontSize->9]
  }, Closed]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Slide Show Styles", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SlideShowNavigationBar"],
    Editable->False,
    CellFrame->True,
    CellMargins->{{0, 0}, {3, 3}},
    CellElementSpacings->{"CellMinHeight"->0.8125},
    CellGroupingRules->{"SectionGrouping", 30},
    CellFrameMargins->False,
    CellFrameColor->GrayLevel[1],
    CellFrameLabelMargins->False,
    TextAlignment->Center,
    CounterIncrements->"SlideShowNavigationBar",
    StyleMenuListing->None,
    FontSize->10,
    Background->GrayLevel[0.8],
    Magnification->1,
    GridBoxOptions->{GridBaseline->Center,
    RowSpacings->0,
    ColumnSpacings->0,
    ColumnWidths->{3.5, 3.5, 3.5, 3.5, 13, 5, 4},
    RowAlignments->Baseline,
    ColumnAlignments->{
      Center, Center, Center, Center, Center, Center, Right, Center}}],
  
  Cell[StyleData["SlideShowNavigationBar", "Presentation"]],
  
  Cell[StyleData["SlideShowNavigationBar", "SlideShow"],
    Deletable->False,
    ShowCellBracket->False,
    CellMargins->{{-1, -1}, {-1, -1}},
    PageBreakAbove->True,
    CellFrameMargins->{{1, 1}, {0, 0}}],
  
  Cell[StyleData["SlideShowNavigationBar", "Printout"],
    CellMargins->{{18, 4}, {4, 4}},
    LineSpacing->{1, 3},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SlideShowSection"],
    CellFrame->{{0, 0}, {0, 0.5}},
    CellMargins->{{0, 0}, {10, 0}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CellFrameMargins->{{12, 4}, {6, 12}},
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-.35999999999999999, \
-.10000000000000001}, {0, 0}}, BoxBaselineShift -> -.20000000000000001], 
                FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-.074999999999999997, \
-.085000000000000006}, {0, 0}}, BoxBaselineShift -> .5], "X"}]], 
        "mma"->"Mathematica", "Mma"->"Mathematica", "MMA"->"Mathematica", 
        "gridMathematica"->FormBox[ 
            RowBox[ {"grid", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-.17499999999999999, 0}, {0, 0}}]}], 
            TextForm], Inherited},
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->18,
    FontWeight->"Plain",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.408011, 0.440726, 0.8]],
  
  Cell[StyleData["SlideShowSection", "Presentation"],
    CellFrameMargins->{{20, 10}, {10, 18}},
    FontSize->27],
  
  Cell[StyleData["SlideShowSection", "SlideShow"],
    ShowCellBracket->False,
    PageBreakAbove->True],
  
  Cell[StyleData["SlideShowSection", "Printout"],
    CellMargins->{{18, 30}, {0, 30}},
    CellFrameMargins->5,
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SlideHyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontSize->26,
    FontColor->GrayLevel[0.400015],
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonMinHeight->0.85,
    ButtonMargins->0.5,
    ButtonNote->None}],
  
  Cell[StyleData["SlideHyperlink", "Presentation"],
    CellMargins->{{14, 10}, {6, 12}},
    FontSize->36],
  
  Cell[StyleData["SlideHyperlink", "SlideShow"]],
  
  Cell[StyleData["SlideHyperlink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SlideTOCLink"],
    CellMargins->{{24, Inherited}, {Inherited, Inherited}},
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Helvetica",
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonMargins->1.5,
    ButtonNote->ButtonData}],
  
  Cell[StyleData["SlideTOCLink", "Presentation"],
    CellMargins->{{35, 10}, {8, 8}},
    FontSize->18],
  
  Cell[StyleData["SlideTOCLink", "SlideShow"]],
  
  Cell[StyleData["SlideTOCLink", "Printout"],
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SlideTOC"],
    CellDingbat->"\[Bullet]",
    CellMargins->{{18, Inherited}, {Inherited, Inherited}},
    StyleMenuListing->None,
    FontFamily->"Helvetica"],
  
  Cell[StyleData["SlideTOC", "Presentation"],
    CellMargins->{{25, 10}, {10, 5}},
    FontSize->18],
  
  Cell[StyleData["SlideTOC", "SlideShow"],
    FontSize->14],
  
  Cell[StyleData["SlideTOC", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell["Notation Package Styles", "Section",
    CellTags->"NotationPackage"],
  
  Cell["\<\
The cells below define certain styles needed by the Notation package. These \
styles serve to make visible otherwise invisible tagboxes.\
\>", "Text",
    CellTags->"NotationPackage"],
  
  Cell[StyleData["NotationTemplateStyle"],
    StyleMenuListing->None,
    Background->RGBColor[1, 1, 0.850004],
    TagBoxOptions->{SyntaxForm->"symbol"},
    CellTags->"NotationPackage"],
  
  Cell[StyleData["NotationPatternWrapperStyle"],
    StyleMenuListing->None,
    Background->RGBColor[1, 0.900008, 0.979995],
    TagBoxOptions->{SyntaxForm->"symbol"},
    CellTags->"NotationPackage"],
  
  Cell[StyleData["NotationMadeBoxesWrapperStyle"],
    StyleMenuListing->None,
    Background->RGBColor[0.900008, 0.889998, 1],
    TagBoxOptions->{SyntaxForm->"symbol"},
    CellTags->"NotationPackage"]
  }, Closed]]
  }]
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 62, 1, 95, "Title",
  InitializationCell->True],
Cell[1841, 56, 60, 1, 51, "Subtitle",
  InitializationCell->True],
Cell[1904, 59, 224, 5, 33, "Text",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[2153, 68, 61, 1, 73, "Section",
  InitializationCell->True],
Cell[2217, 71, 84, 2, 30, "Input",
  InitializationCell->True],
Cell[2304, 75, 164, 3, 30, "Input",
  InitializationCell->True],
Cell[2471, 80, 80, 2, 30, "Input",
  InitializationCell->True],
Cell[2554, 84, 84, 2, 30, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[2663, 90, 36, 0, 38, "Subsection"],
Cell[2702, 92, 230, 4, 50, "Input",
  InitializationCell->True],
Cell[2935, 98, 228, 4, 50, "Input",
  InitializationCell->True],
Cell[3166, 104, 185, 3, 30, "Input",
  InitializationCell->True],
Cell[3354, 109, 348, 5, 70, "Input",
  InitializationCell->True],
Cell[3705, 116, 374, 6, 70, "Input",
  InitializationCell->True],
Cell[4082, 124, 361, 6, 70, "Input",
  InitializationCell->True],
Cell[4446, 132, 372, 6, 70, "Input",
  InitializationCell->True],
Cell[4821, 140, 388, 6, 90, "Input",
  InitializationCell->True],
Cell[5212, 148, 107, 2, 30, "Input",
  InitializationCell->True],
Cell[5322, 152, 542, 8, 110, "Input",
  InitializationCell->True],
Cell[5867, 162, 408, 6, 90, "Input",
  InitializationCell->True],
Cell[6278, 170, 464, 7, 90, "Input",
  InitializationCell->True],
Cell[6745, 179, 83, 2, 30, "Input",
  InitializationCell->True],
Cell[6831, 183, 88, 2, 30, "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{
Cell[6956, 190, 92, 1, 38, "Subsection",
  InitializationCell->True],
Cell[7051, 193, 254, 5, 30, "Input",
  InitializationCell->True],
Cell[7308, 200, 292, 5, 30, "Input",
  InitializationCell->True],
Cell[7603, 207, 165, 3, 30, "Input",
  InitializationCell->True],
Cell[7771, 212, 823, 15, 150, "Input",
  InitializationCell->True],
Cell[8597, 229, 1852, 33, 270, "Input",
  InitializationCell->True],
Cell[10452, 264, 273, 5, 50, "Input",
  InitializationCell->True],
Cell[10728, 271, 118, 2, 30, "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{
Cell[10883, 278, 89, 1, 38, "Subsection",
  InitializationCell->True],
Cell[10975, 281, 180, 4, 30, "Input",
  InitializationCell->True],
Cell[11158, 287, 251, 4, 30, "Input",
  InitializationCell->True],
Cell[11412, 293, 113, 2, 30, "Input",
  InitializationCell->True],
Cell[11528, 297, 572, 9, 70, "Input",
  InitializationCell->True],
Cell[12103, 308, 329, 7, 50, "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{
Cell[12469, 320, 101, 1, 38, "Subsection",
  InitializationCell->True],
Cell[12573, 323, 329, 8, 50, "Input",
  InitializationCell->True],
Cell[12905, 333, 257, 5, 70, "Input",
  InitializationCell->True],
Cell[13165, 340, 268, 6, 30, "Input",
  InitializationCell->True],
Cell[13436, 348, 137, 3, 30, "Input",
  InitializationCell->True],
Cell[13576, 353, 104, 2, 30, "Input",
  InitializationCell->True],
Cell[13683, 357, 118, 2, 30, "Input",
  InitializationCell->True],
Cell[13804, 361, 153, 3, 30, "Input",
  InitializationCell->True],
Cell[13960, 366, 94, 2, 30, "Input",
  InitializationCell->True],
Cell[14057, 370, 111, 2, 30, "Input",
  InitializationCell->True],
Cell[14171, 374, 149, 3, 30, "Input",
  InitializationCell->True],
Cell[14323, 379, 319, 6, 50, "Input",
  InitializationCell->True],
Cell[14645, 387, 570, 10, 110, "Input",
  InitializationCell->True],
Cell[15218, 399, 217, 5, 30, "Input",
  InitializationCell->True],
Cell[15438, 406, 500, 9, 110, "Input",
  InitializationCell->True],
Cell[15941, 417, 192, 4, 30, "Input",
  InitializationCell->True],
Cell[16136, 423, 1356, 22, 290, "Input",
  InitializationCell->True],
Cell[17495, 447, 1438, 25, 250, "Input",
  InitializationCell->True],
Cell[18936, 474, 1086, 24, 190, "Input",
  InitializationCell->True],
Cell[20025, 500, 234, 5, 30, "Input",
  InitializationCell->True],
Cell[20262, 507, 1551, 29, 230, "Input",
  InitializationCell->True],
Cell[21816, 538, 274, 6, 30, "Input",
  InitializationCell->True],
Cell[22093, 546, 179, 3, 30, "Input",
  InitializationCell->True],
Cell[22275, 551, 186, 4, 30, "Input",
  InitializationCell->True],
Cell[22464, 557, 377, 7, 30, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[22866, 568, 644, 11, 150, "Input",
  InitializationCell->True],
Cell[23513, 581, 356, 5, 22, "Message"]
}, Open  ]],
Cell[23884, 589, 113, 2, 30, "Input",
  InitializationCell->True],
Cell[24000, 593, 1189, 20, 190, "Input",
  InitializationCell->True],
Cell[25192, 615, 486, 8, 50, "Input",
  InitializationCell->True],
Cell[25681, 625, 641, 11, 150, "Input",
  InitializationCell->True],
Cell[26325, 638, 752, 14, 170, "Input",
  InitializationCell->True],
Cell[27080, 654, 1046, 18, 170, "Input",
  InitializationCell->True],
Cell[28129, 674, 109, 2, 30, "Input",
  InitializationCell->True],
Cell[28241, 678, 705, 13, 170, "Input",
  InitializationCell->True],
Cell[28949, 693, 2632, 49, 490, "Input",
  InitializationCell->True],
Cell[31584, 744, 230, 5, 30, "Input",
  InitializationCell->True],
Cell[31817, 751, 264, 5, 50, "Input",
  InitializationCell->True],
Cell[32084, 758, 1437, 26, 190, "Input",
  InitializationCell->True],
Cell[33524, 786, 233, 5, 30, "Input",
  InitializationCell->True],
Cell[33760, 793, 168, 3, 30, "Input",
  InitializationCell->True],
Cell[33931, 798, 601, 12, 90, "Input",
  InitializationCell->True],
Cell[34535, 812, 180, 4, 30, "Input",
  InitializationCell->True],
Cell[34718, 818, 114, 2, 30, "Input",
  InitializationCell->True],
Cell[34835, 822, 745, 13, 170, "Input",
  InitializationCell->True],
Cell[35583, 837, 110, 2, 30, "Input",
  InitializationCell->True],
Cell[35696, 841, 388, 8, 150, "Input",
  InitializationCell->True],
Cell[36087, 851, 741, 14, 130, "Input",
  InitializationCell->True],
Cell[36831, 867, 103, 2, 30, "Input",
  InitializationCell->True],
Cell[36937, 871, 1711, 26, 250, "Input",
  InitializationCell->True],
Cell[38651, 899, 161, 3, 30, "Input",
  InitializationCell->True],
Cell[38815, 904, 1056, 20, 190, "Input",
  InitializationCell->True],
Cell[39874, 926, 193, 3, 30, "Input",
  InitializationCell->True],
Cell[40070, 931, 103, 3, 33, "Text"],
Cell[40176, 936, 1175, 21, 270, "Input",
  InitializationCell->True],
Cell[41354, 959, 71, 2, 30, "Input",
  InitializationCell->True],
Cell[41428, 963, 78, 2, 30, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[41531, 969, 143, 3, 30, "Input",
  InitializationCell->True],
Cell[41677, 974, 42, 1, 29, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

