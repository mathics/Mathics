(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.,x_Symbol] :=
  Int[Px*(a*c+b*d*x^2)^m*(e+f*x)^p,x] /;
FreeQ[{a,b,c,d,e,f,m,n,p},x] && PolyQ[Px,x] && EqQ[b*c+a*d,0] && EqQ[m,n] && (IntegerQ[m] || GtQ[a,0] && GtQ[c,0])


(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_*(e_.+f_.*x_)^p_.,x_Symbol] :=
  (a+b*x)^FracPart[m]*(c+d*x)^FracPart[m]/(a*c+b*d*x^2)^FracPart[m]*Int[Px*(a*c+b*d*x^2)^m*(e+f*x)^p,x] /;
FreeQ[{a,b,c,d,e,f,m,n,p},x] && PolyQ[Px,x] && EqQ[b*c+a*d,0] && EqQ[m,n] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.,x_Symbol] :=
  Int[PolynomialQuotient[Px,a+b*x,x]*(a+b*x)^(m+1)*(c+d*x)^n*(e+f*x)^p,x] /;
FreeQ[{a,b,c,d,e,f,m,n,p},x] && PolyQ[Px,x] && EqQ[PolynomialRemainder[Px,a+b*x,x],0]


(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.,x_Symbol] :=
  Int[ExpandIntegrand[Px*(a+b*x)^m*(c+d*x)^n*(e+f*x)^p,x],x] /;
FreeQ[{a,b,c,d,e,f,m,n,p},x] && PolyQ[Px,x] && IntegersQ[m,n]


(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.,x_Symbol] :=
  With[{Qx=PolynomialQuotient[Px,a+b*x,x], R=PolynomialRemainder[Px,a+b*x,x]},
  b*R*(a+b*x)^(m+1)*(c+d*x)^(n+1)*(e+f*x)^(p+1)/((m+1)*(b*c-a*d)*(b*e-a*f)) + 
  1/((m+1)*(b*c-a*d)*(b*e-a*f))*Int[(a+b*x)^(m+1)*(c+d*x)^n*(e+f*x)^p*
    ExpandToSum[(m+1)*(b*c-a*d)*(b*e-a*f)*Qx+a*d*f*R*(m+1)-b*R*(d*e*(m+n+2)+c*f*(m+p+2))-b*d*f*R*(m+n+p+3)*x,x],x]] /;
FreeQ[{a,b,c,d,e,f,n,p},x] && PolyQ[Px,x] && ILtQ[m,-1]


(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.,x_Symbol] :=
  With[{Qx=PolynomialQuotient[Px,a+b*x,x], R=PolynomialRemainder[Px,a+b*x,x]},
  b*R*(a+b*x)^(m+1)*(c+d*x)^(n+1)*(e+f*x)^(p+1)/((m+1)*(b*c-a*d)*(b*e-a*f)) + 
  1/((m+1)*(b*c-a*d)*(b*e-a*f))*Int[(a+b*x)^(m+1)*(c+d*x)^n*(e+f*x)^p*
    ExpandToSum[(m+1)*(b*c-a*d)*(b*e-a*f)*Qx+a*d*f*R*(m+1)-b*R*(d*e*(m+n+2)+c*f*(m+p+2))-b*d*f*R*(m+n+p+3)*x,x],x]] /;
FreeQ[{a,b,c,d,e,f,n,p},x] && PolyQ[Px,x] && LtQ[m,-1] && IntegersQ[2*m,2*n,2*p]


(* ::Code:: *)
Int[Px_*(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.*(e_.+f_.*x_)^p_.,x_Symbol] :=
  With[{q=Expon[Px,x],k=Coeff[Px,x,Expon[Px,x]]},
  k*(a+b*x)^(m+q-1)*(c+d*x)^(n+1)*(e+f*x)^(p+1)/(d*f*b^(q-1)*(m+n+p+q+1)) + 
  1/(d*f*b^q*(m+n+p+q+1))*Int[(a+b*x)^m*(c+d*x)^n*(e+f*x)^p*
    ExpandToSum[d*f*b^q*(m+n+p+q+1)*Px-d*f*k*(m+n+p+q+1)*(a+b*x)^q + 
      k*(a+b*x)^(q-2)*(a^2*d*f*(m+n+p+q+1)-b*(b*c*e*(m+q-1)+a*(d*e*(n+1)+c*f*(p+1)))+
        b*(a*d*f*(2*(m+q)+n+p)-b*(d*e*(m+q+n)+c*f*(m+q+p)))*x),x],x] /;
  NeQ[m+n+p+q+1,0]] /;
FreeQ[{a,b,c,d,e,f,m,n,p},x] && PolyQ[Px,x]



