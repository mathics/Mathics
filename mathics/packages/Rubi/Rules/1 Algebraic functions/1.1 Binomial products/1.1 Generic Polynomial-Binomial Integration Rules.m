(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[x_^m_.*Px_*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  1/n \[Star] Subst[Int[x^(Simplify[(m+1)/n]-1)*SubstFor[x^n,Px,x]*(a+b*x)^p*(c+d*x)^q,x],x,x^n] /;
FreeQ[{a,b,c,d,m,n,p,q},x] && PolyQ[Px,x^n] && NeQ[b*c-a*d,0] && IntegerQ[Simplify[(m+1)/n]]


(* ::Code:: *)
Int[(e_*x_)^m_.*Px_*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  e^IntPart[m]*(e*x)^FracPart[m]/x^FracPart[m] \[Star] Int[x^m*Px*(a+b*x^n)^p*(c+d*x^n)^q,x] /;
FreeQ[{a,b,c,d,e,m,n,p,q},x] && PolyQ[Px,x^n] && NeQ[b*c-a*d,0] && IntegerQ[Simplify[(m+1)/n]]


(* ::Code:: *)
Int[x_^m_.*Px_*(a_+b_.*x_^n_)^p_*(c_+d_.*x_^n_)^q_,x_Symbol] :=
  With[{Qx=PolynomialQuotient[Px,x^(n-m-1),x]},
  1/n \[Star] Subst[Int[ReplaceAll[Qx,x->x^(1/n)]*(a+b*x)^p*(c+d*x)^q,x],x,x^n] /;
 PolyQ[Qx,x^n]] /;
FreeQ[{a,b,c,d,p,q},x] && PolyQ[Px,x] && IGtQ[n,1] && IGtQ[n-m-1,0] && EqQ[PolynomialRemainder[Px,x^(n-m-1),x],0]


(* ::Code:: *)
Int[(e_.*x_)^m_.*Px_^r_.*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  With[{k=Expon[Px,x,Min]},
  1/e^(k*r) \[Star] Int[(e*x)^(m+k*r)*PolynomialQuotient[Px,x^k,x]^r*(a+b*x^n)^p*(c+d*x^n)^q,x] /;
 IGtQ[k,0]] /;
FreeQ[{a,b,c,d,e,m,n,p,q},x] && PolyQ[Px,x] && IGtQ[r,0]


(* ::Code:: *)
Int[(e_.*x_)^m_.*Px_*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  Int[ExpandIntegrand[(e*x)^m*(a+b*x^n)^p*(c+d*x^n)^q,x],x] /;
FreeQ[{a,b,c,d,e,m,n},x] && PolyQ[Px,x^n,x] && NeQ[b*c-a*d,0] && IGtQ[p,0] && IGtQ[q,0]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  1/n \[Star] Subst[Int[x^(1/n-1)*SubstFor[x^n,Px,x]*(a+b*x)^p*(c+d*x)^q,x],x,x^n] /;
FreeQ[{a,b,c,d,n,p,q},x] && PolyQ[Px,x^n] && NeQ[b*c-a*d,0] && IntegerQ[1/n]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_*(c_+d_.*x_^n_)^q_,x_Symbol] :=
  With[{Qx=PolynomialQuotient[Px,x^(n-1),x]},
  1/n \[Star] Subst[Int[ReplaceAll[Qx,x->x^(1/n)]*(a+b*x)^p*(c+d*x)^q,x],x,x^n] /;
 PolyQ[Qx,x^n]] /;
FreeQ[{a,b,c,d,p,q},x] && PolyQ[Px,x] && IGtQ[n,1] && EqQ[PolynomialRemainder[Px,x^(n-1),x],0]


(* ::Code:: *)
Int[Px_^r_.*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  With[{k=Expon[Px,x,Min]},
  Int[x^(k*r)*PolynomialQuotient[Px,x^k,x]^r*(a+b*x^n)^p*(c+d*x^n)^q,x] /;
 IGtQ[k,0]] /;
FreeQ[{a,b,c,d,n,p,q},x] && PolyQ[Px,x] && IGtQ[r,0] && Not[MonomialQ[Px,x]]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_.*(c_+d_.*x_^n_)^q_.,x_Symbol] :=
  Int[ExpandIntegrand[(a+b*x^n)^p*(c+d*x^n)^q,x],x] /;
FreeQ[{a,b,c,d,n},x] && PolyQ[Px,x^n,x] && NeQ[b*c-a*d,0] && IGtQ[p,0] && IGtQ[q,0]


(* ::Code:: *)
Int[x_^m_.*Px_*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  1/n \[Star] Subst[Int[x^(Simplify[(m+1)/n]-1)*SubstFor[x^n,Px,x]*(a+b*x)^p,x],x,x^n] /;
FreeQ[{a,b,m,n,p},x] && PolyQ[Px,x^n] && IntegerQ[Simplify[(m+1)/n]]


(* ::Code:: *)
Int[(c_*x_)^m_.*Px_*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  c^IntPart[m]*(c*x)^FracPart[m]/x^FracPart[m] \[Star] Int[x^m*Px*(a+b*x^n)^p,x] /;
FreeQ[{a,b,c,m,n,p},x] && PolyQ[Px,x^n] && IntegerQ[Simplify[(m+1)/n]]


(* ::Code:: *)
Int[x_^m_.*Px_*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  With[{Qx=PolynomialQuotient[Px,x^(n-m-1),x]},
  1/n \[Star] Subst[Int[ReplaceAll[Qx,x->x^(1/n)]*(a+b*x)^p,x],x,x^n] /;
 PolyQ[Qx,x^n]] /;
FreeQ[{a,b,p},x] && PolyQ[Px,x] && IGtQ[n,1] && IGtQ[n-m-1,0] && EqQ[PolynomialRemainder[Px,x^(n-m-1),x],0]


(* ::Code:: *)
Int[(c_.*x_)^m_.*Px_^q_.*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  With[{k=Expon[Px,x,Min]},
  1/c^(k*q) \[Star] Int[(c*x)^(m+k*q)*PolynomialQuotient[Px,x^k,x]^q*(a+b*x^n)^p,x] /;
 IGtQ[k,0]] /;
FreeQ[{a,b,c,m,n,p},x] && PolyQ[Px,x] && IGtQ[q,0]


(* ::Code:: *)
Int[x_^m_.*Px_*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  Coeff[Px,x,n-m-1]*(a+b*x^n)^(p+1)/(b*n*(p+1)) + 
  Int[ExpandIntegrand[x^m*(Px-Coeff[Px,x,n-m-1]*x^(n-m-1))*(a+b*x^n)^p,x],x] /;
FreeQ[{a,b,m,n},x] && PolyQ[Px,x] && IGtQ[p,1] && IGtQ[n-m,0] && NeQ[Coeff[Px,x,n-m-1],0]


(* ::Code:: *)
Int[(c_.*x_)^m_.*Px_*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  Int[ExpandIntegrand[(c*x)^m*Px*(a+b*x^n)^p,x],x] /;
FreeQ[{a,b,c,m,n},x] && PolyQ[Px,x] && IGtQ[p,0]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  1/n \[Star] Subst[Int[x^(1/n-1)*SubstFor[x^n,Px,x]*(a+b*x)^p,x],x,x^n] /;
FreeQ[{a,b,p},x] && PolyQ[Px,x^n] && IntegerQ[1/n]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  With[{Qx=PolynomialQuotient[Px,x^(n-1),x]},
  1/n \[Star] Subst[Int[ReplaceAll[Qx,x->x^(1/n)]*(a+b*x)^p,x],x,x^n] /;
 PolyQ[Qx,x^n]] /;
FreeQ[{a,b,p},x] && PolyQ[Px,x] && IGtQ[n,1] && EqQ[PolynomialRemainder[Px,x^(n-1),x],0]


(* ::Code:: *)
Int[Px_^q_.*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  With[{k=Expon[Px,x,Min]},
  Int[x^(k*q)*PolynomialQuotient[Px,x^k,x]^q*(a+b*x^n)^p,x] /;
 IGtQ[k,0]] /;
FreeQ[{a,b,n,p},x] && PolyQ[Px,x] && IGtQ[q,0] && Not[MonomialQ[Px,x]]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  Coeff[Px,x,n-1]*(a+b*x^n)^(p+1)/(b*n*(p+1)) + 
  Int[ExpandIntegrand[(Px-Coeff[Px,x,n-1]*x^(n-1))*(a+b*x^n)^p,x],x] /;
FreeQ[{a,b},x] && PolyQ[Px,x] && IGtQ[p,1] && IGtQ[n,0] && NeQ[Coeff[Px,x,n-1],0]


(* ::Code:: *)
Int[Px_*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  Int[ExpandIntegrand[Px*(a+b*x^n)^p,x],x] /;
FreeQ[{a,b,n},x] && PolyQ[Px,x] && IGtQ[p,0]



